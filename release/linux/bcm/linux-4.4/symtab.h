#define SYMTAB_KEEP \
KEEP(*(___ksymtab+__ablkcipher_walk_complete)) \
KEEP(*(___ksymtab+ablkcipher_walk_done)) \
KEEP(*(___ksymtab+abort_exclusive_wait)) \
KEEP(*(___ksymtab+add_device_randomness)) \
KEEP(*(___ksymtab+add_disk)) \
KEEP(*(___ksymtab+add_disk_randomness)) \
KEEP(*(___ksymtab+add_interrupt_randomness)) \
KEEP(*(___ksymtab+add_random_ready_callback)) \
KEEP(*(___ksymtab+add_taint)) \
KEEP(*(___ksymtab+add_timer)) \
KEEP(*(___ksymtab+add_timer_on)) \
KEEP(*(___ksymtab+add_to_page_cache_locked)) \
KEEP(*(___ksymtab+add_to_page_cache_lru)) \
KEEP(*(___ksymtab+add_uevent_var)) \
KEEP(*(___ksymtab+add_wait_queue)) \
KEEP(*(___ksymtab+add_wait_queue_exclusive)) \
KEEP(*(___ksymtab+__aeabi_idiv)) \
KEEP(*(___ksymtab+__aeabi_idivmod)) \
KEEP(*(___ksymtab+__aeabi_uidiv)) \
KEEP(*(___ksymtab+__aeabi_uidivmod)) \
KEEP(*(___ksymtab+aead_exit_geniv)) \
KEEP(*(___ksymtab+aead_geniv_alloc)) \
KEEP(*(___ksymtab+aead_geniv_free)) \
KEEP(*(___ksymtab+aead_init_geniv)) \
KEEP(*(___ksymtab+aead_register_instance)) \
KEEP(*(___ksymtab+ahash_attr_alg)) \
KEEP(*(___ksymtab+ai_iscoreup)) \
KEEP(*(___ksymtab+alloc_buffer_head)) \
KEEP(*(___ksymtab+alloc_disk)) \
KEEP(*(___ksymtab+alloc_disk_node)) \
KEEP(*(___ksymtab+alloc_etherdev_mqs)) \
KEEP(*(___ksymtab+alloc_netdev_mqs)) \
KEEP(*(___ksymtab+__alloc_pages_nodemask)) \
KEEP(*(___ksymtab+__alloc_percpu)) \
KEEP(*(___ksymtab+__alloc_percpu_gfp)) \
KEEP(*(___ksymtab+__alloc_skb)) \
KEEP(*(___ksymtab+__alloc_workqueue_key)) \
KEEP(*(___ksymtab+anon_transport_class_unregister)) \
KEEP(*(___ksymtab+arm_copy_from_user)) \
KEEP(*(___ksymtab+arm_copy_to_user)) \
KEEP(*(___ksymtab+arm_delay_ops)) \
KEEP(*(___ksymtab+arm_dma_ops)) \
KEEP(*(___ksymtab+arm_heavy_mb)) \
KEEP(*(___ksymtab+__arm_ioremap_pfn)) \
KEEP(*(___ksymtab+arp_create)) \
KEEP(*(___ksymtab+arp_send)) \
KEEP(*(___ksymtab+arp_xmit)) \
KEEP(*(___ksymtab+async_schedule)) \
KEEP(*(___ksymtab+async_schedule_domain)) \
KEEP(*(___ksymtab+async_synchronize_full_domain)) \
KEEP(*(___ksymtab+async_unregister_domain)) \
KEEP(*(___ksymtab+_atomic_dec_and_lock)) \
KEEP(*(___ksymtab+atomic_dec_and_mutex_lock)) \
KEEP(*(___ksymtab+autoremove_wake_function)) \
KEEP(*(___ksymtab+bcm947xx_sih)) \
KEEP(*(___ksymtab+bcm947xx_sih_lock)) \
KEEP(*(___ksymtab+bcm_atoi)) \
KEEP(*(___ksymtab+bcm_atoipv4)) \
KEEP(*(___ksymtab+bcm_binit)) \
KEEP(*(___ksymtab+bcm_bitcount)) \
KEEP(*(___ksymtab+bcm_bprhex)) \
KEEP(*(___ksymtab+bcm_bprintf)) \
KEEP(*(___ksymtab+bcm_brev_str)) \
KEEP(*(___ksymtab+bcm_copy_tlv)) \
KEEP(*(___ksymtab+bcm_copy_tlv_safe)) \
KEEP(*(___ksymtab+bcm_ctype)) \
KEEP(*(___ksymtab+bcmerrorstr)) \
KEEP(*(___ksymtab+bcm_ether_atoe)) \
KEEP(*(___ksymtab+bcm_ether_ntoa)) \
KEEP(*(___ksymtab+bcm_find_vendor_ie)) \
KEEP(*(___ksymtab+bcm_iovar_lencheck)) \
KEEP(*(___ksymtab+bcm_iovar_lookup)) \
KEEP(*(___ksymtab+bcm_ip_ntoa)) \
KEEP(*(___ksymtab+bcm_mkiovar)) \
KEEP(*(___ksymtab+bcm_mwbmap_alloc)) \
KEEP(*(___ksymtab+bcm_mwbmap_audit)) \
KEEP(*(___ksymtab+bcm_mwbmap_fini)) \
KEEP(*(___ksymtab+bcm_mwbmap_force)) \
KEEP(*(___ksymtab+bcm_mwbmap_free)) \
KEEP(*(___ksymtab+bcm_mwbmap_free_cnt)) \
KEEP(*(___ksymtab+bcm_mwbmap_init)) \
KEEP(*(___ksymtab+bcm_mwbmap_isfree)) \
KEEP(*(___ksymtab+bcm_mwbmap_show)) \
KEEP(*(___ksymtab+bcm_mw_to_qdbm)) \
KEEP(*(___ksymtab+bcm_next_tlv)) \
KEEP(*(___ksymtab+bcm_parse_tlvs)) \
KEEP(*(___ksymtab+bcm_parse_tlvs_min_bodylen)) \
KEEP(*(___ksymtab+bcm_qdbm_to_mw)) \
KEEP(*(___ksymtab+bcm_robo_attach)) \
KEEP(*(___ksymtab+bcm_robo_config_vlan)) \
KEEP(*(___ksymtab+bcm_robo_detach)) \
KEEP(*(___ksymtab+bcm_robo_enable_device)) \
KEEP(*(___ksymtab+bcm_robo_enable_switch)) \
KEEP(*(___ksymtab+bcmstrcat)) \
KEEP(*(___ksymtab+bcmstrncat)) \
KEEP(*(___ksymtab+bcmstrstr)) \
KEEP(*(___ksymtab+bcm_strtoul)) \
KEEP(*(___ksymtab+bcm_uint64_divide)) \
KEEP(*(___ksymtab+bcm_uint64_multiple_add)) \
KEEP(*(___ksymtab+bcm_write_tlv)) \
KEEP(*(___ksymtab+bcm_write_tlv_safe)) \
KEEP(*(___ksymtab+bdevname)) \
KEEP(*(___ksymtab+__bdevname)) \
KEEP(*(___ksymtab+bdev_read_only)) \
KEEP(*(___ksymtab+bdi_destroy)) \
KEEP(*(___ksymtab+bdi_init)) \
KEEP(*(___ksymtab+bdi_register)) \
KEEP(*(___ksymtab+bdi_register_dev)) \
KEEP(*(___ksymtab+bdi_register_owner)) \
KEEP(*(___ksymtab+bdi_set_max_ratio)) \
KEEP(*(___ksymtab+bdi_setup_and_register)) \
KEEP(*(___ksymtab+bdput)) \
KEEP(*(___ksymtab+__bforget)) \
KEEP(*(___ksymtab+bh_submit_read)) \
KEEP(*(___ksymtab+bh_uptodate_or_lock)) \
KEEP(*(___ksymtab+bio_add_page)) \
KEEP(*(___ksymtab+bio_alloc_bioset)) \
KEEP(*(___ksymtab+bio_flush_dcache_pages)) \
KEEP(*(___ksymtab+bio_put)) \
KEEP(*(___ksymtab+bitmap_clear)) \
KEEP(*(___ksymtab+__bitmap_shift_left)) \
KEEP(*(___ksymtab+__bitmap_weight)) \
KEEP(*(___ksymtab+bit_wait)) \
KEEP(*(___ksymtab+bit_wait_io)) \
KEEP(*(___ksymtab+bit_wait_io_timeout)) \
KEEP(*(___ksymtab+bit_waitqueue)) \
KEEP(*(___ksymtab+bit_wait_timeout)) \
KEEP(*(___ksymtab+blk_add_request_payload)) \
KEEP(*(___ksymtab+blkcipher_walk_done)) \
KEEP(*(___ksymtab+blkcipher_walk_virt_block)) \
KEEP(*(___ksymtab+blk_cleanup_queue)) \
KEEP(*(___ksymtab+blk_complete_request)) \
KEEP(*(___ksymtab+blk_delay_queue)) \
KEEP(*(___ksymtab+blkdev_get_by_dev)) \
KEEP(*(___ksymtab+blkdev_issue_discard)) \
KEEP(*(___ksymtab+blkdev_issue_flush)) \
KEEP(*(___ksymtab+blkdev_issue_zeroout)) \
KEEP(*(___ksymtab+blkdev_put)) \
KEEP(*(___ksymtab+blk_dump_rq_flags)) \
KEEP(*(___ksymtab+__blk_end_request_all)) \
KEEP(*(___ksymtab+blk_end_request_all)) \
KEEP(*(___ksymtab+blk_execute_rq)) \
KEEP(*(___ksymtab+blk_execute_rq_nowait)) \
KEEP(*(___ksymtab+blk_finish_plug)) \
KEEP(*(___ksymtab+blk_finish_request)) \
KEEP(*(___ksymtab+blk_free_tags)) \
KEEP(*(___ksymtab+blk_get_backing_dev_info)) \
KEEP(*(___ksymtab+blk_get_queue)) \
KEEP(*(___ksymtab+blk_get_request)) \
KEEP(*(___ksymtab+blk_init_queue)) \
KEEP(*(___ksymtab+blk_init_queue_node)) \
KEEP(*(___ksymtab+blk_init_tags)) \
KEEP(*(___ksymtab+__blk_iopoll_complete)) \
KEEP(*(___ksymtab+blk_iopoll_complete)) \
KEEP(*(___ksymtab+blk_lookup_devt)) \
KEEP(*(___ksymtab+blk_max_low_pfn)) \
KEEP(*(___ksymtab+blk_mq_alloc_tag_set)) \
KEEP(*(___ksymtab+blk_mq_complete_request)) \
KEEP(*(___ksymtab+blk_mq_delay_queue)) \
KEEP(*(___ksymtab+__blk_mq_end_request)) \
KEEP(*(___ksymtab+blk_mq_free_tag_set)) \
KEEP(*(___ksymtab+blk_mq_freeze_queue)) \
KEEP(*(___ksymtab+blk_mq_freeze_queue_start)) \
KEEP(*(___ksymtab+blk_mq_init_queue)) \
KEEP(*(___ksymtab+blk_mq_kick_requeue_list)) \
KEEP(*(___ksymtab+blk_mq_map_queue)) \
KEEP(*(___ksymtab+blk_mq_requeue_request)) \
KEEP(*(___ksymtab+blk_mq_start_hw_queues)) \
KEEP(*(___ksymtab+blk_mq_start_request)) \
KEEP(*(___ksymtab+blk_mq_start_stopped_hw_queues)) \
KEEP(*(___ksymtab+blk_mq_stop_hw_queue)) \
KEEP(*(___ksymtab+blk_mq_stop_hw_queues)) \
KEEP(*(___ksymtab+blk_mq_unfreeze_queue)) \
KEEP(*(___ksymtab+blk_peek_request)) \
KEEP(*(___ksymtab+blk_put_queue)) \
KEEP(*(___ksymtab+__blk_put_request)) \
KEEP(*(___ksymtab+blk_put_request)) \
KEEP(*(___ksymtab+blk_queue_alignment_offset)) \
KEEP(*(___ksymtab+blk_queue_bounce_limit)) \
KEEP(*(___ksymtab+blk_queue_dma_alignment)) \
KEEP(*(___ksymtab+blk_queue_flush)) \
KEEP(*(___ksymtab+blk_queue_flush_queueable)) \
KEEP(*(___ksymtab+blk_queue_init_tags)) \
KEEP(*(___ksymtab+blk_queue_io_min)) \
KEEP(*(___ksymtab+blk_queue_lld_busy)) \
KEEP(*(___ksymtab+blk_queue_logical_block_size)) \
KEEP(*(___ksymtab+blk_queue_max_discard_sectors)) \
KEEP(*(___ksymtab+blk_queue_max_hw_sectors)) \
KEEP(*(___ksymtab+blk_queue_max_segments)) \
KEEP(*(___ksymtab+blk_queue_max_segment_size)) \
KEEP(*(___ksymtab+blk_queue_max_write_same_sectors)) \
KEEP(*(___ksymtab+blk_queue_physical_block_size)) \
KEEP(*(___ksymtab+blk_queue_prep_rq)) \
KEEP(*(___ksymtab+blk_queue_rq_timed_out)) \
KEEP(*(___ksymtab+blk_queue_rq_timeout)) \
KEEP(*(___ksymtab+blk_queue_segment_boundary)) \
KEEP(*(___ksymtab+blk_queue_softirq_done)) \
KEEP(*(___ksymtab+blk_queue_start_tag)) \
KEEP(*(___ksymtab+blk_queue_unprep_rq)) \
KEEP(*(___ksymtab+blk_queue_update_dma_alignment)) \
KEEP(*(___ksymtab+blk_queue_update_dma_pad)) \
KEEP(*(___ksymtab+blk_register_region)) \
KEEP(*(___ksymtab+blk_requeue_request)) \
KEEP(*(___ksymtab+blk_rq_err_bytes)) \
KEEP(*(___ksymtab+blk_rq_init)) \
KEEP(*(___ksymtab+blk_rq_map_kern)) \
KEEP(*(___ksymtab+blk_rq_map_sg)) \
KEEP(*(___ksymtab+blk_rq_map_user)) \
KEEP(*(___ksymtab+blk_rq_map_user_iov)) \
KEEP(*(___ksymtab+blk_rq_set_block_pc)) \
KEEP(*(___ksymtab+blk_rq_unmap_user)) \
KEEP(*(___ksymtab+__blk_run_queue)) \
KEEP(*(___ksymtab+blk_run_queue)) \
KEEP(*(___ksymtab+blk_run_queue_async)) \
KEEP(*(___ksymtab+__blk_run_queue_uncond)) \
KEEP(*(___ksymtab+blk_start_plug)) \
KEEP(*(___ksymtab+blk_start_queue)) \
KEEP(*(___ksymtab+blk_start_queue_async)) \
KEEP(*(___ksymtab+blk_start_request)) \
KEEP(*(___ksymtab+blk_stop_queue)) \
KEEP(*(___ksymtab+blk_unprep_request)) \
KEEP(*(___ksymtab+blk_unregister_region)) \
KEEP(*(___ksymtab+blk_update_request)) \
KEEP(*(___ksymtab+blk_verify_command)) \
KEEP(*(___ksymtab+block_commit_write)) \
KEEP(*(___ksymtab+__blockdev_direct_IO)) \
KEEP(*(___ksymtab+blockdev_superblock)) \
KEEP(*(___ksymtab+__blocking_notifier_call_chain)) \
KEEP(*(___ksymtab+blocking_notifier_call_chain)) \
KEEP(*(___ksymtab+blocking_notifier_chain_register)) \
KEEP(*(___ksymtab+blocking_notifier_chain_unregister)) \
KEEP(*(___ksymtab+block_invalidatepage)) \
KEEP(*(___ksymtab+block_is_partially_uptodate)) \
KEEP(*(___ksymtab+block_page_mkwrite)) \
KEEP(*(___ksymtab+block_read_full_page)) \
KEEP(*(___ksymtab+block_truncate_page)) \
KEEP(*(___ksymtab+__block_write_begin)) \
KEEP(*(___ksymtab+block_write_begin)) \
KEEP(*(___ksymtab+block_write_end)) \
KEEP(*(___ksymtab+block_write_full_page)) \
KEEP(*(___ksymtab+bmap)) \
KEEP(*(___ksymtab+br_dev_update_stats)) \
KEEP(*(___ksymtab+__breadahead)) \
KEEP(*(___ksymtab+__bread_gfp)) \
KEEP(*(___ksymtab+__break_lease)) \
KEEP(*(___ksymtab+__brelse)) \
KEEP(*(___ksymtab+brnf_call_ebtables)) \
KEEP(*(___ksymtab+br_should_route_hook)) \
KEEP(*(___ksymtab+bsearch)) \
KEEP(*(___ksymtab+bus_find_device)) \
KEEP(*(___ksymtab+bus_find_device_by_name)) \
KEEP(*(___ksymtab+bus_for_each_dev)) \
KEEP(*(___ksymtab+bus_get_device_klist)) \
KEEP(*(___ksymtab+bus_register)) \
KEEP(*(___ksymtab+bus_register_notifier)) \
KEEP(*(___ksymtab+bus_sort_breadthfirst)) \
KEEP(*(___ksymtab+bus_unregister)) \
KEEP(*(___ksymtab+bus_unregister_notifier)) \
KEEP(*(___ksymtab+call_netdevice_notifiers)) \
KEEP(*(___ksymtab+call_netevent_notifiers)) \
KEEP(*(___ksymtab+call_rcu_sched)) \
KEEP(*(___ksymtab+call_usermodehelper_setup)) \
KEEP(*(___ksymtab+cancel_delayed_work)) \
KEEP(*(___ksymtab+cancel_delayed_work_sync)) \
KEEP(*(___ksymtab+cancel_work_sync)) \
KEEP(*(___ksymtab+capable)) \
KEEP(*(___ksymtab+capable_wrt_inode_uidgid)) \
KEEP(*(___ksymtab+cdev_add)) \
KEEP(*(___ksymtab+cdev_alloc)) \
KEEP(*(___ksymtab+cdev_del)) \
KEEP(*(___ksymtab+cdev_device_add)) \
KEEP(*(___ksymtab+cdev_device_del)) \
KEEP(*(___ksymtab+cdev_init)) \
KEEP(*(___ksymtab+cfi_fixup)) \
KEEP(*(___ksymtab+check_disk_change)) \
KEEP(*(___ksymtab+__class_create)) \
KEEP(*(___ksymtab+class_destroy)) \
KEEP(*(___ksymtab+class_find_device)) \
KEEP(*(___ksymtab+class_interface_register)) \
KEEP(*(___ksymtab+class_interface_unregister)) \
KEEP(*(___ksymtab+__class_register)) \
KEEP(*(___ksymtab+class_unregister)) \
KEEP(*(___ksymtab+cleanup_srcu_struct)) \
KEEP(*(___ksymtab+_clear_bit)) \
KEEP(*(___ksymtab+clear_inode)) \
KEEP(*(___ksymtab+clear_nlink)) \
KEEP(*(___ksymtab+clear_page_dirty_for_io)) \
KEEP(*(___ksymtab+clear_wb_congested)) \
KEEP(*(___ksymtab+clk_disable)) \
KEEP(*(___ksymtab+clk_enable)) \
KEEP(*(___ksymtab+clk_get_rate)) \
KEEP(*(___ksymtab+clk_get_sys)) \
KEEP(*(___ksymtab+clk_put)) \
KEEP(*(___ksymtab+__clocksource_update_freq_scale)) \
KEEP(*(___ksymtab+clock_t_to_jiffies)) \
KEEP(*(___ksymtab+complete)) \
KEEP(*(___ksymtab+complete_all)) \
KEEP(*(___ksymtab+complete_and_exit)) \
KEEP(*(___ksymtab+complete_request_key)) \
KEEP(*(___ksymtab+_cond_resched)) \
KEEP(*(___ksymtab+__cond_resched_lock)) \
KEEP(*(___ksymtab+__cond_resched_softirq)) \
KEEP(*(___ksymtab+cond_synchronize_sched)) \
KEEP(*(___ksymtab+congestion_wait)) \
KEEP(*(___ksymtab+console_conditional_schedule)) \
KEEP(*(___ksymtab+consume_skb)) \
KEEP(*(___ksymtab+contig_page_data)) \
KEEP(*(___ksymtab+cont_write_begin)) \
KEEP(*(___ksymtab+cookie_ecn_ok)) \
KEEP(*(___ksymtab+cookie_timestamp_decode)) \
KEEP(*(___ksymtab+copy_from_iter)) \
KEEP(*(___ksymtab+copy_from_iter_nocache)) \
KEEP(*(___ksymtab+copy_page)) \
KEEP(*(___ksymtab+copy_page_from_iter)) \
KEEP(*(___ksymtab+copy_page_to_iter)) \
KEEP(*(___ksymtab+copy_to_iter)) \
KEEP(*(___ksymtab+cpu_device_create)) \
KEEP(*(___ksymtab+cpu_maps_update_begin)) \
KEEP(*(___ksymtab+cpu_maps_update_done)) \
KEEP(*(___ksymtab+cpu_online_mask)) \
KEEP(*(___ksymtab+cpu_possible_mask)) \
KEEP(*(___ksymtab+cpu_rmap_update)) \
KEEP(*(___ksymtab+cpu_up)) \
KEEP(*(___ksymtab+crc32_be)) \
KEEP(*(___ksymtab+crc32c)) \
KEEP(*(___ksymtab+__crc32c_le)) \
KEEP(*(___ksymtab+__crc32c_le_shift)) \
KEEP(*(___ksymtab+crc32_le)) \
KEEP(*(___ksymtab+crc32_le_shift)) \
KEEP(*(___ksymtab+create_empty_buffers)) \
KEEP(*(___ksymtab+crypto_ablkcipher_type)) \
KEEP(*(___ksymtab+crypto_aead_setauthsize)) \
KEEP(*(___ksymtab+crypto_aead_setkey)) \
KEEP(*(___ksymtab+crypto_ahash_digest)) \
KEEP(*(___ksymtab+crypto_ahash_finup)) \
KEEP(*(___ksymtab+crypto_ahash_setkey)) \
KEEP(*(___ksymtab+crypto_ahash_type)) \
KEEP(*(___ksymtab+crypto_alg_lookup)) \
KEEP(*(___ksymtab+crypto_alg_mod_lookup)) \
KEEP(*(___ksymtab+crypto_alloc_aead)) \
KEEP(*(___ksymtab+crypto_alloc_ahash)) \
KEEP(*(___ksymtab+crypto_alloc_base)) \
KEEP(*(___ksymtab+crypto_alloc_instance)) \
KEEP(*(___ksymtab+crypto_alloc_instance2)) \
KEEP(*(___ksymtab+crypto_alloc_rng)) \
KEEP(*(___ksymtab+crypto_alloc_shash)) \
KEEP(*(___ksymtab+crypto_attr_alg2)) \
KEEP(*(___ksymtab+crypto_attr_alg_name)) \
KEEP(*(___ksymtab+crypto_blkcipher_type)) \
KEEP(*(___ksymtab+crypto_check_attr_type)) \
KEEP(*(___ksymtab+crypto_default_rng)) \
KEEP(*(___ksymtab+crypto_destroy_tfm)) \
KEEP(*(___ksymtab+crypto_drop_spawn)) \
KEEP(*(___ksymtab+crypto_find_alg)) \
KEEP(*(___ksymtab+crypto_get_attr_type)) \
KEEP(*(___ksymtab+crypto_get_default_null_skcipher)) \
KEEP(*(___ksymtab+crypto_get_default_rng)) \
KEEP(*(___ksymtab+crypto_grab_aead)) \
KEEP(*(___ksymtab+crypto_grab_skcipher)) \
KEEP(*(___ksymtab+crypto_has_alg)) \
KEEP(*(___ksymtab+crypto_inc)) \
KEEP(*(___ksymtab+crypto_init_ahash_spawn)) \
KEEP(*(___ksymtab+crypto_init_spawn)) \
KEEP(*(___ksymtab+crypto_init_spawn2)) \
KEEP(*(___ksymtab+crypto_larval_lookup)) \
KEEP(*(___ksymtab+crypto_lookup_skcipher)) \
KEEP(*(___ksymtab+crypto_lookup_template)) \
KEEP(*(___ksymtab+__crypto_memneq)) \
KEEP(*(___ksymtab+crypto_mod_put)) \
KEEP(*(___ksymtab+crypto_put_default_null_skcipher)) \
KEEP(*(___ksymtab+crypto_put_default_rng)) \
KEEP(*(___ksymtab+crypto_register_alg)) \
KEEP(*(___ksymtab+crypto_register_algs)) \
KEEP(*(___ksymtab+crypto_register_instance)) \
KEEP(*(___ksymtab+crypto_register_rng)) \
KEEP(*(___ksymtab+crypto_register_rngs)) \
KEEP(*(___ksymtab+crypto_register_shash)) \
KEEP(*(___ksymtab+crypto_register_shashes)) \
KEEP(*(___ksymtab+crypto_register_template)) \
KEEP(*(___ksymtab+crypto_sha1_finup)) \
KEEP(*(___ksymtab+crypto_sha1_update)) \
KEEP(*(___ksymtab+crypto_sha256_arm_finup)) \
KEEP(*(___ksymtab+crypto_sha256_arm_update)) \
KEEP(*(___ksymtab+crypto_sha256_finup)) \
KEEP(*(___ksymtab+crypto_sha256_update)) \
KEEP(*(___ksymtab+crypto_shash_final)) \
KEEP(*(___ksymtab+crypto_shash_finup)) \
KEEP(*(___ksymtab+crypto_shash_setkey)) \
KEEP(*(___ksymtab+crypto_shash_update)) \
KEEP(*(___ksymtab+crypto_spawn_tfm)) \
KEEP(*(___ksymtab+crypto_spawn_tfm2)) \
KEEP(*(___ksymtab+crypto_unregister_alg)) \
KEEP(*(___ksymtab+crypto_unregister_algs)) \
KEEP(*(___ksymtab+crypto_unregister_rng)) \
KEEP(*(___ksymtab+crypto_unregister_rngs)) \
KEEP(*(___ksymtab+crypto_unregister_shash)) \
KEEP(*(___ksymtab+crypto_unregister_shashes)) \
KEEP(*(___ksymtab+crypto_unregister_template)) \
KEEP(*(___ksymtab+crypto_xor)) \
KEEP(*(___ksymtab+csum_and_copy_from_iter)) \
KEEP(*(___ksymtab+csum_and_copy_to_iter)) \
KEEP(*(___ksymtab+__csum_ipv6_magic)) \
KEEP(*(___ksymtab+csum_partial)) \
KEEP(*(___ksymtab+csum_partial_copy_from_user)) \
KEEP(*(___ksymtab+csum_partial_copy_nocheck)) \
KEEP(*(___ksymtab+_ctype)) \
KEEP(*(___ksymtab+current_fs_time)) \
KEEP(*(___ksymtab+current_kernel_time64)) \
KEEP(*(___ksymtab+current_umask)) \
KEEP(*(___ksymtab+d_alloc)) \
KEEP(*(___ksymtab+d_alloc_name)) \
KEEP(*(___ksymtab+d_alloc_pseudo)) \
KEEP(*(___ksymtab+datagram_poll)) \
KEEP(*(___ksymtab+d_delete)) \
KEEP(*(___ksymtab+__d_drop)) \
KEEP(*(___ksymtab+d_drop)) \
KEEP(*(___ksymtab+deactivate_locked_super)) \
KEEP(*(___ksymtab+deactivate_super)) \
KEEP(*(___ksymtab+debugfs_create_bool)) \
KEEP(*(___ksymtab+debugfs_create_dir)) \
KEEP(*(___ksymtab+debugfs_create_file)) \
KEEP(*(___ksymtab+debugfs_create_file_size)) \
KEEP(*(___ksymtab+debugfs_read_file_bool)) \
KEEP(*(___ksymtab+debugfs_remove)) \
KEEP(*(___ksymtab+debugfs_remove_recursive)) \
KEEP(*(___ksymtab+debugfs_rename)) \
KEEP(*(___ksymtab+debugfs_write_file_bool)) \
KEEP(*(___ksymtab+__dec_zone_page_state)) \
KEEP(*(___ksymtab+dec_zone_page_state)) \
KEEP(*(___ksymtab+default_llseek)) \
KEEP(*(___ksymtab+default_wake_function)) \
KEEP(*(___ksymtab+delayed_work_timer_fn)) \
KEEP(*(___ksymtab+del_gendisk)) \
KEEP(*(___ksymtab+del_random_ready_callback)) \
KEEP(*(___ksymtab+del_timer)) \
KEEP(*(___ksymtab+del_timer_sync)) \
KEEP(*(___ksymtab+dentry_unhash)) \
KEEP(*(___ksymtab+dentry_update_name_case)) \
KEEP(*(___ksymtab+dequeue_signal)) \
KEEP(*(___ksymtab+destroy_workqueue)) \
KEEP(*(___ksymtab+dev_add_pack)) \
KEEP(*(___ksymtab+dev_alloc_name)) \
KEEP(*(___ksymtab+dev_change_proto_down)) \
KEEP(*(___ksymtab+dev_close)) \
KEEP(*(___ksymtab+dev_close_many)) \
KEEP(*(___ksymtab+dev_crit)) \
KEEP(*(___ksymtab+dev_disable_lro)) \
KEEP(*(___ksymtab+dev_err)) \
KEEP(*(___ksymtab+__dev_forward_skb)) \
KEEP(*(___ksymtab+dev_forward_skb)) \
KEEP(*(___ksymtab+__dev_get_by_flags)) \
KEEP(*(___ksymtab+__dev_get_by_index)) \
KEEP(*(___ksymtab+dev_get_by_index)) \
KEEP(*(___ksymtab+dev_get_by_index_rcu)) \
KEEP(*(___ksymtab+__dev_get_by_name)) \
KEEP(*(___ksymtab+dev_get_by_name)) \
KEEP(*(___ksymtab+dev_get_by_name_rcu)) \
KEEP(*(___ksymtab+dev_get_flags)) \
KEEP(*(___ksymtab+dev_get_iflink)) \
KEEP(*(___ksymtab+dev_get_stats)) \
KEEP(*(___ksymtab+dev_get_valid_name)) \
KEEP(*(___ksymtab+dev_hard_start_xmit)) \
KEEP(*(___ksymtab+device_add)) \
KEEP(*(___ksymtab+device_add_property_set)) \
KEEP(*(___ksymtab+device_attach)) \
KEEP(*(___ksymtab+device_bind_driver)) \
KEEP(*(___ksymtab+device_create)) \
KEEP(*(___ksymtab+device_create_bin_file)) \
KEEP(*(___ksymtab+device_create_file)) \
KEEP(*(___ksymtab+device_create_vargs)) \
KEEP(*(___ksymtab+device_create_with_groups)) \
KEEP(*(___ksymtab+device_del)) \
KEEP(*(___ksymtab+device_destroy)) \
KEEP(*(___ksymtab+device_dma_supported)) \
KEEP(*(___ksymtab+device_for_each_child)) \
KEEP(*(___ksymtab+device_for_each_child_reverse)) \
KEEP(*(___ksymtab+device_initialize)) \
KEEP(*(___ksymtab+device_property_read_string)) \
KEEP(*(___ksymtab+device_property_read_string_array)) \
KEEP(*(___ksymtab+device_register)) \
KEEP(*(___ksymtab+device_release_driver)) \
KEEP(*(___ksymtab+device_remove_bin_file)) \
KEEP(*(___ksymtab+device_remove_file)) \
KEEP(*(___ksymtab+device_remove_file_self)) \
KEEP(*(___ksymtab+device_unregister)) \
KEEP(*(___ksymtab+_dev_info)) \
KEEP(*(___ksymtab+__dev_kfree_skb_any)) \
KEEP(*(___ksymtab+__dev_kfree_skb_irq)) \
KEEP(*(___ksymtab+dev_loopback_xmit)) \
KEEP(*(___ksymtab+dev_mc_add)) \
KEEP(*(___ksymtab+dev_mc_add_excl)) \
KEEP(*(___ksymtab+dev_mc_add_global)) \
KEEP(*(___ksymtab+dev_mc_del)) \
KEEP(*(___ksymtab+dev_mc_del_global)) \
KEEP(*(___ksymtab+dev_mc_flush)) \
KEEP(*(___ksymtab+devm_clk_get)) \
KEEP(*(___ksymtab+devm_clk_put)) \
KEEP(*(___ksymtab+dev_mc_sync)) \
KEEP(*(___ksymtab+dev_mc_sync_multiple)) \
KEEP(*(___ksymtab+dev_mc_unsync)) \
KEEP(*(___ksymtab+devm_free_irq)) \
KEEP(*(___ksymtab+devm_free_pages)) \
KEEP(*(___ksymtab+devm_get_free_pages)) \
KEEP(*(___ksymtab+devm_ioremap)) \
KEEP(*(___ksymtab+devm_ioremap_nocache)) \
KEEP(*(___ksymtab+devm_ioremap_resource)) \
KEEP(*(___ksymtab+devm_ioremap_wc)) \
KEEP(*(___ksymtab+devm_iounmap)) \
KEEP(*(___ksymtab+devm_kasprintf)) \
KEEP(*(___ksymtab+devm_kfree)) \
KEEP(*(___ksymtab+devm_kmalloc)) \
KEEP(*(___ksymtab+devm_kmemdup)) \
KEEP(*(___ksymtab+devm_kstrdup)) \
KEEP(*(___ksymtab+devm_kvasprintf)) \
KEEP(*(___ksymtab+devm_of_phy_get)) \
KEEP(*(___ksymtab+devm_of_phy_get_by_index)) \
KEEP(*(___ksymtab+devm_phy_get)) \
KEEP(*(___ksymtab+devm_phy_put)) \
KEEP(*(___ksymtab+devm_request_threaded_irq)) \
KEEP(*(___ksymtab+devm_spi_register_master)) \
KEEP(*(___ksymtab+dev_notice)) \
KEEP(*(___ksymtab+dev_open)) \
KEEP(*(___ksymtab+dev_printk)) \
KEEP(*(___ksymtab+dev_printk_emit)) \
KEEP(*(___ksymtab+dev_queue_xmit)) \
KEEP(*(___ksymtab+dev_queue_xmit_accel)) \
KEEP(*(___ksymtab+__dev_remove_pack)) \
KEEP(*(___ksymtab+dev_remove_pack)) \
KEEP(*(___ksymtab+devres_add)) \
KEEP(*(___ksymtab+devres_alloc_node)) \
KEEP(*(___ksymtab+devres_close_group)) \
KEEP(*(___ksymtab+devres_find)) \
KEEP(*(___ksymtab+devres_free)) \
KEEP(*(___ksymtab+devres_open_group)) \
KEEP(*(___ksymtab+devres_release_group)) \
KEEP(*(___ksymtab+devres_remove_group)) \
KEEP(*(___ksymtab+dev_set_allmulti)) \
KEEP(*(___ksymtab+dev_set_group)) \
KEEP(*(___ksymtab+dev_set_mac_address)) \
KEEP(*(___ksymtab+dev_set_mtu)) \
KEEP(*(___ksymtab+dev_set_name)) \
KEEP(*(___ksymtab+dev_set_promiscuity)) \
KEEP(*(___ksymtab+dev_trans_start)) \
KEEP(*(___ksymtab+dev_uc_flush)) \
KEEP(*(___ksymtab+dev_uc_sync)) \
KEEP(*(___ksymtab+dev_uc_sync_multiple)) \
KEEP(*(___ksymtab+dev_uc_unsync)) \
KEEP(*(___ksymtab+dev_valid_name)) \
KEEP(*(___ksymtab+dev_vprintk_emit)) \
KEEP(*(___ksymtab+dev_warn)) \
KEEP(*(___ksymtab+d_find_alias)) \
KEEP(*(___ksymtab+d_find_any_alias)) \
KEEP(*(___ksymtab+dget_parent)) \
KEEP(*(___ksymtab+d_hash_and_lookup)) \
KEEP(*(___ksymtab+d_instantiate)) \
KEEP(*(___ksymtab+d_instantiate_new)) \
KEEP(*(___ksymtab+d_instantiate_no_diralias)) \
KEEP(*(___ksymtab+d_instantiate_unique)) \
KEEP(*(___ksymtab+d_invalidate)) \
KEEP(*(___ksymtab+dirty_writeback_interval)) \
KEEP(*(___ksymtab+div64_u64)) \
KEEP(*(___ksymtab+div64_u64_rem)) \
KEEP(*(___ksymtab+d_lookup)) \
KEEP(*(___ksymtab+dma_addrwidth)) \
KEEP(*(___ksymtab+dma_alloc_from_coherent)) \
KEEP(*(___ksymtab+dma_attach)) \
KEEP(*(___ksymtab+d_make_root)) \
KEEP(*(___ksymtab+dma_mark_declared_memory_occupied)) \
KEEP(*(___ksymtab+dma_pool_alloc)) \
KEEP(*(___ksymtab+dma_pool_create)) \
KEEP(*(___ksymtab+dma_pool_destroy)) \
KEEP(*(___ksymtab+dma_pool_free)) \
KEEP(*(___ksymtab+dma_release_from_coherent)) \
KEEP(*(___ksymtab+dma_supported)) \
KEEP(*(___ksymtab+d_move)) \
KEEP(*(___ksymtab+do_4360_pcie2_war)) \
KEEP(*(___ksymtab+d_obtain_alias)) \
KEEP(*(___ksymtab+__do_div64)) \
KEEP(*(___ksymtab+__do_once_done)) \
KEEP(*(___ksymtab+__do_once_start)) \
KEEP(*(___ksymtab+down)) \
KEEP(*(___ksymtab+downgrade_write)) \
KEEP(*(___ksymtab+down_interruptible)) \
KEEP(*(___ksymtab+down_killable)) \
KEEP(*(___ksymtab+down_read)) \
KEEP(*(___ksymtab+down_read_trylock)) \
KEEP(*(___ksymtab+down_timeout)) \
KEEP(*(___ksymtab+down_trylock)) \
KEEP(*(___ksymtab+down_write)) \
KEEP(*(___ksymtab+down_write_trylock)) \
KEEP(*(___ksymtab+d_path)) \
KEEP(*(___ksymtab+dput)) \
KEEP(*(___ksymtab+dql_completed)) \
KEEP(*(___ksymtab+d_rehash)) \
KEEP(*(___ksymtab+driver_attach)) \
KEEP(*(___ksymtab+driver_create_file)) \
KEEP(*(___ksymtab+driver_register)) \
KEEP(*(___ksymtab+driver_remove_file)) \
KEEP(*(___ksymtab+driver_unregister)) \
KEEP(*(___ksymtab+drop_nlink)) \
KEEP(*(___ksymtab+drop_super)) \
KEEP(*(___ksymtab+d_splice_alias)) \
KEEP(*(___ksymtab+dst_alloc)) \
KEEP(*(___ksymtab+dst_cache_destroy)) \
KEEP(*(___ksymtab+dst_cache_get)) \
KEEP(*(___ksymtab+dst_cache_get_ip4)) \
KEEP(*(___ksymtab+dst_cache_get_ip6)) \
KEEP(*(___ksymtab+dst_cache_init)) \
KEEP(*(___ksymtab+dst_cache_set_ip4)) \
KEEP(*(___ksymtab+dst_cache_set_ip6)) \
KEEP(*(___ksymtab+dst_cow_metrics_generic)) \
KEEP(*(___ksymtab+dst_destroy)) \
KEEP(*(___ksymtab+__dst_destroy_metrics_generic)) \
KEEP(*(___ksymtab+dst_discard_out)) \
KEEP(*(___ksymtab+__dst_free)) \
KEEP(*(___ksymtab+dst_release)) \
KEEP(*(___ksymtab+d_tmpfile)) \
KEEP(*(___ksymtab+dump_stack)) \
KEEP(*(___ksymtab+dup_iter)) \
KEEP(*(___ksymtab+elv_dispatch_sort)) \
KEEP(*(___ksymtab+emergency_restart)) \
KEEP(*(___ksymtab+end_buffer_read_sync)) \
KEEP(*(___ksymtab+end_buffer_write_sync)) \
KEEP(*(___ksymtab+end_page_writeback)) \
KEEP(*(___ksymtab+eth_commit_mac_addr_change)) \
KEEP(*(___ksymtab+ether_setup)) \
KEEP(*(___ksymtab+eth_gro_complete)) \
KEEP(*(___ksymtab+eth_header)) \
KEEP(*(___ksymtab+eth_header_cache)) \
KEEP(*(___ksymtab+eth_header_cache_update)) \
KEEP(*(___ksymtab+eth_header_parse)) \
KEEP(*(___ksymtab+eth_mac_addr)) \
KEEP(*(___ksymtab+eth_prepare_mac_addr_change)) \
KEEP(*(___ksymtab+__ethtool_get_settings)) \
KEEP(*(___ksymtab+ethtool_op_get_link)) \
KEEP(*(___ksymtab+ethtool_op_get_ts_info)) \
KEEP(*(___ksymtab+eth_type_trans)) \
KEEP(*(___ksymtab+eth_validate_addr)) \
KEEP(*(___ksymtab+eventfd_ctx_remove_wait_queue)) \
KEEP(*(___ksymtab+eventfd_fget)) \
KEEP(*(___ksymtab+execute_in_process_context)) \
KEEP(*(___ksymtab+fast_nat_recv)) \
KEEP(*(___ksymtab+fasync_helper)) \
KEEP(*(___ksymtab+__fdget)) \
KEEP(*(___ksymtab+fget)) \
KEEP(*(___ksymtab+fget_raw)) \
KEEP(*(___ksymtab+__fib6_flush_trees)) \
KEEP(*(___ksymtab+fib_default_rule_add)) \
KEEP(*(___ksymtab+__fib_lookup)) \
KEEP(*(___ksymtab+fib_rules_lookup)) \
KEEP(*(___ksymtab+fib_rules_register)) \
KEEP(*(___ksymtab+fib_rules_unregister)) \
KEEP(*(___ksymtab+fib_table_lookup)) \
KEEP(*(___ksymtab+fiemap_check_flags)) \
KEEP(*(___ksymtab+fiemap_fill_next_extent)) \
KEEP(*(___ksymtab+filemap_fault)) \
KEEP(*(___ksymtab+filemap_fdatawait)) \
KEEP(*(___ksymtab+filemap_fdatawait_range)) \
KEEP(*(___ksymtab+filemap_fdatawrite)) \
KEEP(*(___ksymtab+filemap_fdatawrite_range)) \
KEEP(*(___ksymtab+filemap_flush)) \
KEEP(*(___ksymtab+filemap_map_pages)) \
KEEP(*(___ksymtab+filemap_write_and_wait)) \
KEEP(*(___ksymtab+filemap_write_and_wait_range)) \
KEEP(*(___ksymtab+file_ns_capable)) \
KEEP(*(___ksymtab+file_path)) \
KEEP(*(___ksymtab+file_remove_privs)) \
KEEP(*(___ksymtab+file_update_time)) \
KEEP(*(___ksymtab+filp_close)) \
KEEP(*(___ksymtab+filp_open)) \
KEEP(*(___ksymtab+_find_first_bit_le)) \
KEEP(*(___ksymtab+_find_first_zero_bit_le)) \
KEEP(*(___ksymtab+__find_get_block)) \
KEEP(*(___ksymtab+find_get_pages_tag)) \
KEEP(*(___ksymtab+find_inode_nowait)) \
KEEP(*(___ksymtab+_find_next_bit_le)) \
KEEP(*(___ksymtab+_find_next_zero_bit_le)) \
KEEP(*(___ksymtab+finish_no_open)) \
KEEP(*(___ksymtab+finish_open)) \
KEEP(*(___ksymtab+finish_wait)) \
KEEP(*(___ksymtab+flow_cache_lookup)) \
KEEP(*(___ksymtab+flow_get_u32_dst)) \
KEEP(*(___ksymtab+flow_get_u32_src)) \
KEEP(*(___ksymtab+flow_keys_dissector)) \
KEEP(*(___ksymtab+flush_dcache_page)) \
KEEP(*(___ksymtab+flush_delayed_work)) \
KEEP(*(___ksymtab+flush_work)) \
KEEP(*(___ksymtab+flush_workqueue)) \
KEEP(*(___ksymtab+follow_down)) \
KEEP(*(___ksymtab+follow_down_one)) \
KEEP(*(___ksymtab+follow_up)) \
KEEP(*(___ksymtab+fput)) \
KEEP(*(___ksymtab+free_buffer_head)) \
KEEP(*(___ksymtab+free_irq)) \
KEEP(*(___ksymtab+free_irq_cpu_rmap)) \
KEEP(*(___ksymtab+free_netdev)) \
KEEP(*(___ksymtab+free_page_put_link)) \
KEEP(*(___ksymtab+__free_pages)) \
KEEP(*(___ksymtab+free_pages)) \
KEEP(*(___ksymtab+free_pages_exact)) \
KEEP(*(___ksymtab+free_percpu)) \
KEEP(*(___ksymtab+free_percpu_irq)) \
KEEP(*(___ksymtab+freeze_super)) \
KEEP(*(___ksymtab+fs_bio_set)) \
KEEP(*(___ksymtab+__f_setown)) \
KEEP(*(___ksymtab+fs_kobj)) \
KEEP(*(___ksymtab+fsnotify)) \
KEEP(*(___ksymtab+fsnotify_get_cookie)) \
KEEP(*(___ksymtab+__fsnotify_inode_delete)) \
KEEP(*(___ksymtab+__fsnotify_parent)) \
KEEP(*(___ksymtab+fs_overflowgid)) \
KEEP(*(___ksymtab+fs_overflowuid)) \
KEEP(*(___ksymtab+full_name_hash)) \
KEEP(*(___ksymtab+g_assert_type)) \
KEEP(*(___ksymtab+gcd)) \
KEEP(*(___ksymtab+generate_random_uuid)) \
KEEP(*(___ksymtab+generic_block_bmap)) \
KEEP(*(___ksymtab+__generic_block_fiemap)) \
KEEP(*(___ksymtab+generic_block_fiemap)) \
KEEP(*(___ksymtab+generic_check_addressable)) \
KEEP(*(___ksymtab+generic_cont_expand_simple)) \
KEEP(*(___ksymtab+generic_delete_inode)) \
KEEP(*(___ksymtab+generic_error_remove_page)) \
KEEP(*(___ksymtab+generic_fh_to_dentry)) \
KEEP(*(___ksymtab+generic_fh_to_parent)) \
KEEP(*(___ksymtab+generic_file_direct_write)) \
KEEP(*(___ksymtab+__generic_file_fsync)) \
KEEP(*(___ksymtab+generic_file_fsync)) \
KEEP(*(___ksymtab+generic_file_llseek)) \
KEEP(*(___ksymtab+generic_file_llseek_size)) \
KEEP(*(___ksymtab+generic_file_mmap)) \
KEEP(*(___ksymtab+generic_file_open)) \
KEEP(*(___ksymtab+generic_file_read_iter)) \
KEEP(*(___ksymtab+generic_file_readonly_mmap)) \
KEEP(*(___ksymtab+generic_file_splice_read)) \
KEEP(*(___ksymtab+__generic_file_write_iter)) \
KEEP(*(___ksymtab+generic_file_write_iter)) \
KEEP(*(___ksymtab+generic_fillattr)) \
KEEP(*(___ksymtab+generic_getxattr)) \
KEEP(*(___ksymtab+generic_key_instantiate)) \
KEEP(*(___ksymtab+generic_permission)) \
KEEP(*(___ksymtab+generic_read_dir)) \
KEEP(*(___ksymtab+generic_readlink)) \
KEEP(*(___ksymtab+generic_removexattr)) \
KEEP(*(___ksymtab+generic_ro_fops)) \
KEEP(*(___ksymtab+generic_setlease)) \
KEEP(*(___ksymtab+generic_setxattr)) \
KEEP(*(___ksymtab+generic_show_options)) \
KEEP(*(___ksymtab+generic_shutdown_super)) \
KEEP(*(___ksymtab+generic_update_time)) \
KEEP(*(___ksymtab+generic_write_checks)) \
KEEP(*(___ksymtab+generic_write_end)) \
KEEP(*(___ksymtab+generic_writepages)) \
KEEP(*(___ksymtab+genl_lock)) \
KEEP(*(___ksymtab+genlmsg_multicast_allns)) \
KEEP(*(___ksymtab+genlmsg_put)) \
KEEP(*(___ksymtab+__genl_register_family)) \
KEEP(*(___ksymtab+genl_unlock)) \
KEEP(*(___ksymtab+genl_unregister_family)) \
KEEP(*(___ksymtab+genphy_config_aneg)) \
KEEP(*(___ksymtab+genphy_read_status)) \
KEEP(*(___ksymtab+genphy_resume)) \
KEEP(*(___ksymtab+genphy_setup_forced)) \
KEEP(*(___ksymtab+genphy_suspend)) \
KEEP(*(___ksymtab+genphy_update_link)) \
KEEP(*(___ksymtab+__getblk_gfp)) \
KEEP(*(___ksymtab+get_device)) \
KEEP(*(___ksymtab+__get_free_pages)) \
KEEP(*(___ksymtab+getgpiopin)) \
KEEP(*(___ksymtab+__get_hash_from_flowi6)) \
KEEP(*(___ksymtab+getintvar)) \
KEEP(*(___ksymtab+getintvararray)) \
KEEP(*(___ksymtab+getintvararraysize)) \
KEEP(*(___ksymtab+get_jiffies_64)) \
KEEP(*(___ksymtab+get_next_ino)) \
KEEP(*(___ksymtab+getnstimeofday64)) \
KEEP(*(___ksymtab+__getnstimeofday64)) \
KEEP(*(___ksymtab+__get_page_tail)) \
KEEP(*(___ksymtab+get_random_bytes)) \
KEEP(*(___ksymtab+get_random_bytes_arch)) \
KEEP(*(___ksymtab+get_seconds)) \
KEEP(*(___ksymtab+get_state_synchronize_sched)) \
KEEP(*(___ksymtab+get_super)) \
KEEP(*(___ksymtab+get_super_thawed)) \
KEEP(*(___ksymtab+get_task_pid)) \
KEEP(*(___ksymtab+__get_user_1)) \
KEEP(*(___ksymtab+__get_user_4)) \
KEEP(*(___ksymtab+getvar)) \
KEEP(*(___ksymtab+get_zeroed_page)) \
KEEP(*(___ksymtab+gnet_stats_copy_app)) \
KEEP(*(___ksymtab+_gpio_ctrl)) \
KEEP(*(___ksymtab+gpio_kernel_api)) \
KEEP(*(___ksymtab+grab_cache_page_write_begin)) \
KEEP(*(___ksymtab+gre_add_protocol)) \
KEEP(*(___ksymtab+gre_del_protocol)) \
KEEP(*(___ksymtab+gro_find_complete_by_type)) \
KEEP(*(___ksymtab+groups_alloc)) \
KEEP(*(___ksymtab+groups_free)) \
KEEP(*(___ksymtab+groups_sort)) \
KEEP(*(___ksymtab+half_md4_transform)) \
KEEP(*(___ksymtab+handle_sysrq)) \
KEEP(*(___ksymtab+hex2bin)) \
KEEP(*(___ksymtab+hex_asc)) \
KEEP(*(___ksymtab+hex_asc_upper)) \
KEEP(*(___ksymtab+hex_dump_to_buffer)) \
KEEP(*(___ksymtab+high_memory)) \
KEEP(*(___ksymtab+hndcrc16)) \
KEEP(*(___ksymtab+hndcrc32)) \
KEEP(*(___ksymtab+hrtimer_active)) \
KEEP(*(___ksymtab+hrtimer_cancel)) \
KEEP(*(___ksymtab+hrtimer_init)) \
KEEP(*(___ksymtab+hrtimer_init_sleeper)) \
KEEP(*(___ksymtab+hrtimer_start_range_ns)) \
KEEP(*(___ksymtab+hsiphash_1u32)) \
KEEP(*(___ksymtab+i2c_add_adapter)) \
KEEP(*(___ksymtab+i2c_add_numbered_adapter)) \
KEEP(*(___ksymtab+i2c_del_adapter)) \
KEEP(*(___ksymtab+i2c_lock_adapter)) \
KEEP(*(___ksymtab+i2c_master_send)) \
KEEP(*(___ksymtab+i2c_smbus_read_byte_data)) \
KEEP(*(___ksymtab+i2c_smbus_read_i2c_block_data)) \
KEEP(*(___ksymtab+i2c_smbus_read_i2c_block_data_or_emulated)) \
KEEP(*(___ksymtab+i2c_smbus_read_word_data)) \
KEEP(*(___ksymtab+i2c_smbus_write_byte_data)) \
KEEP(*(___ksymtab+i2c_smbus_write_i2c_block_data)) \
KEEP(*(___ksymtab+i2c_smbus_write_word_data)) \
KEEP(*(___ksymtab+__i2c_transfer)) \
KEEP(*(___ksymtab+i2c_transfer)) \
KEEP(*(___ksymtab+i2c_unlock_adapter)) \
KEEP(*(___ksymtab+I_BDEV)) \
KEEP(*(___ksymtab+icmp_global_allow)) \
KEEP(*(___ksymtab+__icmp_send)) \
KEEP(*(___ksymtab+icmpv6_send)) \
KEEP(*(___ksymtab+ida_get_new_above)) \
KEEP(*(___ksymtab+ida_pre_get)) \
KEEP(*(___ksymtab+ida_remove)) \
KEEP(*(___ksymtab+idr_alloc)) \
KEEP(*(___ksymtab+idr_alloc_cyclic)) \
KEEP(*(___ksymtab+idr_destroy)) \
KEEP(*(___ksymtab+idr_find_slowpath)) \
KEEP(*(___ksymtab+idr_for_each)) \
KEEP(*(___ksymtab+idr_preload)) \
KEEP(*(___ksymtab+idr_remove)) \
KEEP(*(___ksymtab+iget5_locked)) \
KEEP(*(___ksymtab+iget_failed)) \
KEEP(*(___ksymtab+iget_locked)) \
KEEP(*(___ksymtab+igrab)) \
KEEP(*(___ksymtab+ihold)) \
KEEP(*(___ksymtab+ilookup)) \
KEEP(*(___ksymtab+ilookup5)) \
KEEP(*(___ksymtab+ilookup5_nowait)) \
KEEP(*(___ksymtab+import_iovec)) \
KEEP(*(___ksymtab+in4_pton)) \
KEEP(*(___ksymtab+in6addr_any)) \
KEEP(*(___ksymtab+in6addr_interfacelocal_allnodes)) \
KEEP(*(___ksymtab+in6addr_interfacelocal_allrouters)) \
KEEP(*(___ksymtab+in6addr_linklocal_allnodes)) \
KEEP(*(___ksymtab+in6addr_linklocal_allrouters)) \
KEEP(*(___ksymtab+in6addr_loopback)) \
KEEP(*(___ksymtab+in6addr_sitelocal_allrouters)) \
KEEP(*(___ksymtab+in6_dev_finish_destroy)) \
KEEP(*(___ksymtab+in6_pton)) \
KEEP(*(___ksymtab+inc_nlink)) \
KEEP(*(___ksymtab+__inc_zone_page_state)) \
KEEP(*(___ksymtab+inc_zone_page_state)) \
KEEP(*(___ksymtab+in_egroup_p)) \
KEEP(*(___ksymtab+inet6_add_protocol)) \
KEEP(*(___ksymtab+inet6addr_notifier_call_chain)) \
KEEP(*(___ksymtab+inet6_del_protocol)) \
KEEP(*(___ksymtab+inet6_hash_connect)) \
KEEP(*(___ksymtab+inet6_lookup)) \
KEEP(*(___ksymtab+__inet6_lookup_established)) \
KEEP(*(___ksymtab+inet6_lookup_listener)) \
KEEP(*(___ksymtab+inet6_offloads)) \
KEEP(*(___ksymtab+inet6_protos)) \
KEEP(*(___ksymtab+inet6_register_icmp_sender)) \
KEEP(*(___ksymtab+inet6_unregister_icmp_sender)) \
KEEP(*(___ksymtab+inet_accept)) \
KEEP(*(___ksymtab+inet_add_protocol)) \
KEEP(*(___ksymtab+inet_addr_type)) \
KEEP(*(___ksymtab+inet_addr_type_dev_table)) \
KEEP(*(___ksymtab+inet_addr_type_table)) \
KEEP(*(___ksymtab+inet_bind)) \
KEEP(*(___ksymtab+inet_confirm_addr)) \
KEEP(*(___ksymtab+inet_csk_accept)) \
KEEP(*(___ksymtab+inet_csk_complete_hashdance)) \
KEEP(*(___ksymtab+inet_csk_get_port)) \
KEEP(*(___ksymtab+inet_csk_prepare_forced_close)) \
KEEP(*(___ksymtab+inet_csk_reqsk_queue_drop_and_put)) \
KEEP(*(___ksymtab+inet_csk_update_pmtu)) \
KEEP(*(___ksymtab+inet_ctl_sock_create)) \
KEEP(*(___ksymtab+inet_del_protocol)) \
KEEP(*(___ksymtab+inet_dev_addr_type)) \
KEEP(*(___ksymtab+inet_dgram_connect)) \
KEEP(*(___ksymtab+inet_dgram_ops)) \
KEEP(*(___ksymtab+inet_ehash_nolisten)) \
KEEP(*(___ksymtab+inet_frag_destroy)) \
KEEP(*(___ksymtab+inet_frag_find)) \
KEEP(*(___ksymtab+inet_frag_kill)) \
KEEP(*(___ksymtab+inet_frags_exit_net)) \
KEEP(*(___ksymtab+inet_frags_fini)) \
KEEP(*(___ksymtab+inet_frags_init)) \
KEEP(*(___ksymtab+inet_get_local_port_range)) \
KEEP(*(___ksymtab+inet_getpeer)) \
KEEP(*(___ksymtab+__inet_hash)) \
KEEP(*(___ksymtab+inet_hash)) \
KEEP(*(___ksymtab+inet_hash_connect)) \
KEEP(*(___ksymtab+inet_hashinfo_init)) \
KEEP(*(___ksymtab+__inet_inherit_port)) \
KEEP(*(___ksymtab+inet_ioctl)) \
KEEP(*(___ksymtab+inet_listen)) \
KEEP(*(___ksymtab+__inet_lookup_established)) \
KEEP(*(___ksymtab+__inet_lookup_listener)) \
KEEP(*(___ksymtab+inet_offloads)) \
KEEP(*(___ksymtab+inet_peer_base_init)) \
KEEP(*(___ksymtab+inetpeer_invalidate_tree)) \
KEEP(*(___ksymtab+inet_peer_xrlim_allow)) \
KEEP(*(___ksymtab+inet_proto_csum_replace16)) \
KEEP(*(___ksymtab+inet_proto_csum_replace4)) \
KEEP(*(___ksymtab+inet_proto_csum_replace_by_diff)) \
KEEP(*(___ksymtab+inet_putpeer)) \
KEEP(*(___ksymtab+inet_recvmsg)) \
KEEP(*(___ksymtab+inet_register_protosw)) \
KEEP(*(___ksymtab+inet_release)) \
KEEP(*(___ksymtab+inet_reqsk_alloc)) \
KEEP(*(___ksymtab+inet_select_addr)) \
KEEP(*(___ksymtab+inet_sendmsg)) \
KEEP(*(___ksymtab+inet_sendpage)) \
KEEP(*(___ksymtab+inet_shutdown)) \
KEEP(*(___ksymtab+inet_sk_rebuild_header)) \
KEEP(*(___ksymtab+inet_sk_rx_dst_set)) \
KEEP(*(___ksymtab+inet_sock_destruct)) \
KEEP(*(___ksymtab+__inet_stream_connect)) \
KEEP(*(___ksymtab+inet_stream_connect)) \
KEEP(*(___ksymtab+inet_stream_ops)) \
KEEP(*(___ksymtab+inet_twsk_alloc)) \
KEEP(*(___ksymtab+inet_twsk_deschedule_put)) \
KEEP(*(___ksymtab+inet_twsk_purge)) \
KEEP(*(___ksymtab+inet_twsk_put)) \
KEEP(*(___ksymtab+__inet_twsk_schedule)) \
KEEP(*(___ksymtab+inet_unhash)) \
KEEP(*(___ksymtab+inet_unregister_protosw)) \
KEEP(*(___ksymtab+in_group_p)) \
KEEP(*(___ksymtab+init_net)) \
KEEP(*(___ksymtab+__init_rwsem)) \
KEEP(*(___ksymtab+init_special_inode)) \
KEEP(*(___ksymtab+init_task)) \
KEEP(*(___ksymtab+init_timer_key)) \
KEEP(*(___ksymtab+init_user_ns)) \
KEEP(*(___ksymtab+init_uts_ns)) \
KEEP(*(___ksymtab+__init_waitqueue_head)) \
KEEP(*(___ksymtab+__inode_add_bytes)) \
KEEP(*(___ksymtab+inode_add_bytes)) \
KEEP(*(___ksymtab+inode_change_ok)) \
KEEP(*(___ksymtab+inode_dio_wait)) \
KEEP(*(___ksymtab+inode_init_once)) \
KEEP(*(___ksymtab+inode_init_owner)) \
KEEP(*(___ksymtab+inode_needs_sync)) \
KEEP(*(___ksymtab+inode_newsize_ok)) \
KEEP(*(___ksymtab+inode_nohighmem)) \
KEEP(*(___ksymtab+inode_owner_or_capable)) \
KEEP(*(___ksymtab+__inode_permission)) \
KEEP(*(___ksymtab+inode_permission)) \
KEEP(*(___ksymtab+inode_set_bytes)) \
KEEP(*(___ksymtab+inode_set_flags)) \
KEEP(*(___ksymtab+__inode_sub_bytes)) \
KEEP(*(___ksymtab+inode_sub_bytes)) \
KEEP(*(___ksymtab+input_ff_upload)) \
KEEP(*(___ksymtab+__insert_inode_hash)) \
KEEP(*(___ksymtab+insert_inode_locked)) \
KEEP(*(___ksymtab+insert_inode_locked4)) \
KEEP(*(___ksymtab+invalidate_bdev)) \
KEEP(*(___ksymtab+invalidate_inode_buffers)) \
KEEP(*(___ksymtab+invalidate_inode_pages2)) \
KEEP(*(___ksymtab+invalidate_inode_pages2_range)) \
KEEP(*(___ksymtab+invalidate_mapping_pages)) \
KEEP(*(___ksymtab+ioc_lookup_icq)) \
KEEP(*(___ksymtab+ioctl_by_bdev)) \
KEEP(*(___ksymtab+iomem_resource)) \
KEEP(*(___ksymtab+ioport_resource)) \
KEEP(*(___ksymtab+ioremap)) \
KEEP(*(___ksymtab+ioremap_cache)) \
KEEP(*(___ksymtab+ioremap_page)) \
KEEP(*(___ksymtab+ioremap_page_range)) \
KEEP(*(___ksymtab+ioremap_wc)) \
KEEP(*(___ksymtab+io_schedule_timeout)) \
KEEP(*(___ksymtab+iounmap)) \
KEEP(*(___ksymtab+iov_iter_advance)) \
KEEP(*(___ksymtab+iov_iter_alignment)) \
KEEP(*(___ksymtab+iov_iter_copy_from_user_atomic)) \
KEEP(*(___ksymtab+iov_iter_fault_in_readable)) \
KEEP(*(___ksymtab+iov_iter_get_pages)) \
KEEP(*(___ksymtab+iov_iter_get_pages_alloc)) \
KEEP(*(___ksymtab+iov_iter_init)) \
KEEP(*(___ksymtab+iov_iter_npages)) \
KEEP(*(___ksymtab+iov_iter_single_seg_count)) \
KEEP(*(___ksymtab+__ip4_datagram_connect)) \
KEEP(*(___ksymtab+ip6_dst_hoplimit)) \
KEEP(*(___ksymtab+ip6_find_1stfragopt)) \
KEEP(*(___ksymtab+__ip6_local_out)) \
KEEP(*(___ksymtab+ip6_local_out)) \
KEEP(*(___ksymtab+ip_cmsg_recv_offset)) \
KEEP(*(___ksymtab+ip_defrag)) \
KEEP(*(___ksymtab+ip_frag_ecn_table)) \
KEEP(*(___ksymtab+ip_generic_getfrag)) \
KEEP(*(___ksymtab+ip_getsockopt)) \
KEEP(*(___ksymtab+ip_local_out)) \
KEEP(*(___ksymtab+ip_mc_dec_group)) \
KEEP(*(___ksymtab+ip_mc_inc_group)) \
KEEP(*(___ksymtab+ip_mc_join_group)) \
KEEP(*(___ksymtab+ip_mc_leave_group)) \
KEEP(*(___ksymtab+ip_queue_xmit)) \
KEEP(*(___ksymtab+ip_route_input_noref)) \
KEEP(*(___ksymtab+ip_route_me_harder)) \
KEEP(*(___ksymtab+ip_route_output_flow)) \
KEEP(*(___ksymtab+__ip_select_ident)) \
KEEP(*(___ksymtab+ip_send_check)) \
KEEP(*(___ksymtab+ip_setsockopt)) \
KEEP(*(___ksymtab+ip_tunnel_get_stats64)) \
KEEP(*(___ksymtab+iptunnel_handle_offloads)) \
KEEP(*(___ksymtab+iptunnel_pull_header)) \
KEEP(*(___ksymtab+iptunnel_xmit)) \
KEEP(*(___ksymtab+iput)) \
KEEP(*(___ksymtab+ipv4_redirect)) \
KEEP(*(___ksymtab+ipv4_sk_update_pmtu)) \
KEEP(*(___ksymtab+ipv4_specific)) \
KEEP(*(___ksymtab+ipv4_update_pmtu)) \
KEEP(*(___ksymtab+__ipv6_addr_type)) \
KEEP(*(___ksymtab+ipv6_ext_hdr)) \
KEEP(*(___ksymtab+ipv6_find_hdr)) \
KEEP(*(___ksymtab+ipv6_find_tlv)) \
KEEP(*(___ksymtab+ipv6_select_ident)) \
KEEP(*(___ksymtab+ipv6_skip_exthdr)) \
KEEP(*(___ksymtab+ipv6_stub)) \
KEEP(*(___ksymtab+is_bad_inode)) \
KEEP(*(___ksymtab+iterate_supers_type)) \
KEEP(*(___ksymtab+iter_file_splice_write)) \
KEEP(*(___ksymtab+iunique)) \
KEEP(*(___ksymtab+jiffies)) \
KEEP(*(___ksymtab+jiffies_64)) \
KEEP(*(___ksymtab+jiffies_64_to_clock_t)) \
KEEP(*(___ksymtab+jiffies_to_clock_t)) \
KEEP(*(___ksymtab+jiffies_to_msecs)) \
KEEP(*(___ksymtab+jiffies_to_timespec64)) \
KEEP(*(___ksymtab+jiffies_to_timeval)) \
KEEP(*(___ksymtab+jiffies_to_usecs)) \
KEEP(*(___ksymtab+kallsyms_lookup_name)) \
KEEP(*(___ksymtab+kasprintf)) \
KEEP(*(___ksymtab+kblockd_schedule_delayed_work)) \
KEEP(*(___ksymtab+kblockd_schedule_delayed_work_on)) \
KEEP(*(___ksymtab+kblockd_schedule_work)) \
KEEP(*(___ksymtab+kernel_bind)) \
KEEP(*(___ksymtab+kernel_connect)) \
KEEP(*(___ksymtab+kernel_kobj)) \
KEEP(*(___ksymtab+kernel_read)) \
KEEP(*(___ksymtab+kernel_recvmsg)) \
KEEP(*(___ksymtab+kernel_sendmsg)) \
KEEP(*(___ksymtab+kernel_setsockopt)) \
KEEP(*(___ksymtab+kernel_sigaction)) \
KEEP(*(___ksymtab+kernel_sock_ip_overhead)) \
KEEP(*(___ksymtab+kernel_sock_shutdown)) \
KEEP(*(___ksymtab+kern_path)) \
KEEP(*(___ksymtab+kern_path_create)) \
KEEP(*(___ksymtab+kern_path_mountpoint)) \
KEEP(*(___ksymtab+key_create_or_update)) \
KEEP(*(___ksymtab+key_put)) \
KEEP(*(___ksymtab+key_revoke)) \
KEEP(*(___ksymtab+keyring_alloc)) \
KEEP(*(___ksymtab+key_type_logon)) \
KEEP(*(___ksymtab+key_update)) \
KEEP(*(___ksymtab+key_validate)) \
KEEP(*(___ksymtab+__kfifo_alloc)) \
KEEP(*(___ksymtab+__kfifo_free)) \
KEEP(*(___ksymtab+__kfifo_in)) \
KEEP(*(___ksymtab+__kfifo_init)) \
KEEP(*(___ksymtab+__kfifo_in_r)) \
KEEP(*(___ksymtab+__kfifo_out)) \
KEEP(*(___ksymtab+__kfifo_out_peek)) \
KEEP(*(___ksymtab+__kfifo_out_peek_r)) \
KEEP(*(___ksymtab+__kfifo_out_r)) \
KEEP(*(___ksymtab+kfree)) \
KEEP(*(___ksymtab+kfree_call_rcu)) \
KEEP(*(___ksymtab+kfree_const)) \
KEEP(*(___ksymtab+kfree_put_link)) \
KEEP(*(___ksymtab+__kfree_skb)) \
KEEP(*(___ksymtab+kfree_skb)) \
KEEP(*(___ksymtab+kfree_skb_list)) \
KEEP(*(___ksymtab+kfree_skb_partial)) \
KEEP(*(___ksymtab+kill_anon_super)) \
KEEP(*(___ksymtab+kill_block_super)) \
KEEP(*(___ksymtab+kill_fasync)) \
KEEP(*(___ksymtab+kill_litter_super)) \
KEEP(*(___ksymtab+kill_mtd_super)) \
KEEP(*(___ksymtab+kill_pid_info_as_cred)) \
KEEP(*(___ksymtab+__kmalloc)) \
KEEP(*(___ksymtab+kmalloc_caches)) \
KEEP(*(___ksymtab+__kmalloc_track_caller)) \
KEEP(*(___ksymtab+kmap)) \
KEEP(*(___ksymtab+kmap_atomic)) \
KEEP(*(___ksymtab+__kmap_atomic_idx)) \
KEEP(*(___ksymtab+kmap_high)) \
KEEP(*(___ksymtab+kmap_to_page)) \
KEEP(*(___ksymtab+kmem_cache_alloc)) \
KEEP(*(___ksymtab+kmem_cache_alloc_bulk)) \
KEEP(*(___ksymtab+kmem_cache_create)) \
KEEP(*(___ksymtab+kmem_cache_destroy)) \
KEEP(*(___ksymtab+kmem_cache_free)) \
KEEP(*(___ksymtab+kmem_cache_free_bulk)) \
KEEP(*(___ksymtab+kmemdup)) \
KEEP(*(___ksymtab+kmemdup_nul)) \
KEEP(*(___ksymtab+km_report)) \
KEEP(*(___ksymtab+kobject_create_and_add)) \
KEEP(*(___ksymtab+kobject_del)) \
KEEP(*(___ksymtab+kobject_init_and_add)) \
KEEP(*(___ksymtab+kobject_put)) \
KEEP(*(___ksymtab+kobject_set_name)) \
KEEP(*(___ksymtab+kobject_uevent)) \
KEEP(*(___ksymtab+kobject_uevent_env)) \
KEEP(*(___ksymtab+krealloc)) \
KEEP(*(___ksymtab+__krealloc)) \
KEEP(*(___ksymtab+kset_register)) \
KEEP(*(___ksymtab+kset_unregister)) \
KEEP(*(___ksymtab+kstrdup)) \
KEEP(*(___ksymtab+kstrdup_const)) \
KEEP(*(___ksymtab+kstrndup)) \
KEEP(*(___ksymtab+kstrtobool)) \
KEEP(*(___ksymtab+kstrtobool_from_user)) \
KEEP(*(___ksymtab+kstrtoint)) \
KEEP(*(___ksymtab+kstrtoint_from_user)) \
KEEP(*(___ksymtab+_kstrtol)) \
KEEP(*(___ksymtab+kstrtouint)) \
KEEP(*(___ksymtab+kstrtouint_from_user)) \
KEEP(*(___ksymtab+_kstrtoul)) \
KEEP(*(___ksymtab+kstrtoul_from_user)) \
KEEP(*(___ksymtab+kstrtoull)) \
KEEP(*(___ksymtab+kstrtoull_from_user)) \
KEEP(*(___ksymtab+kthread_create_on_node)) \
KEEP(*(___ksymtab+kthread_should_stop)) \
KEEP(*(___ksymtab+kthread_stop)) \
KEEP(*(___ksymtab+ktime_get)) \
KEEP(*(___ksymtab+ktime_get_mono_fast_ns)) \
KEEP(*(___ksymtab+ktime_get_raw)) \
KEEP(*(___ksymtab+ktime_get_raw_fast_ns)) \
KEEP(*(___ksymtab+ktime_get_real_seconds)) \
KEEP(*(___ksymtab+ktime_get_resolution_ns)) \
KEEP(*(___ksymtab+ktime_get_seconds)) \
KEEP(*(___ksymtab+ktime_get_ts64)) \
KEEP(*(___ksymtab+ktime_get_with_offset)) \
KEEP(*(___ksymtab+kunmap)) \
KEEP(*(___ksymtab+__kunmap_atomic)) \
KEEP(*(___ksymtab+kunmap_high)) \
KEEP(*(___ksymtab+kvasprintf)) \
KEEP(*(___ksymtab+kvasprintf_const)) \
KEEP(*(___ksymtab+kvfree)) \
KEEP(*(___ksymtab+kvmalloc_node)) \
KEEP(*(___ksymtab+kzfree)) \
KEEP(*(___ksymtab+list_sort)) \
KEEP(*(___ksymtab+ll_rw_block)) \
KEEP(*(___ksymtab+load_nls)) \
KEEP(*(___ksymtab+load_nls_default)) \
KEEP(*(___ksymtab+__local_bh_enable_ip)) \
KEEP(*(___ksymtab+__lock_buffer)) \
KEEP(*(___ksymtab+__lock_page)) \
KEEP(*(___ksymtab+__lock_page_killable)) \
KEEP(*(___ksymtab+lockref_get)) \
KEEP(*(___ksymtab+lockref_get_not_dead)) \
KEEP(*(___ksymtab+lockref_get_not_zero)) \
KEEP(*(___ksymtab+lockref_get_or_lock)) \
KEEP(*(___ksymtab+locks_lock_inode_wait)) \
KEEP(*(___ksymtab+lock_sock_fast)) \
KEEP(*(___ksymtab+lock_sock_nested)) \
KEEP(*(___ksymtab+lock_two_nondirectories)) \
KEEP(*(___ksymtab+lookup_bdev)) \
KEEP(*(___ksymtab+lookup_one_len)) \
KEEP(*(___ksymtab+lru_cache_add_file)) \
KEEP(*(___ksymtab+lwtunnel_build_state)) \
KEEP(*(___ksymtab+lwtunnel_cmp_encap)) \
KEEP(*(___ksymtab+lwtunnel_encap_add_ops)) \
KEEP(*(___ksymtab+lwtunnel_encap_del_ops)) \
KEEP(*(___ksymtab+lwtunnel_fill_encap)) \
KEEP(*(___ksymtab+lwtunnel_get_encap_size)) \
KEEP(*(___ksymtab+lwtunnel_input)) \
KEEP(*(___ksymtab+lwtunnel_output)) \
KEEP(*(___ksymtab+lwtunnel_state_alloc)) \
KEEP(*(___ksymtab+make_bad_inode)) \
KEEP(*(___ksymtab+mapping_tagged)) \
KEEP(*(___ksymtab+mark_buffer_dirty)) \
KEEP(*(___ksymtab+mark_buffer_dirty_inode)) \
KEEP(*(___ksymtab+__mark_inode_dirty)) \
KEEP(*(___ksymtab+mark_page_accessed)) \
KEEP(*(___ksymtab+match_int)) \
KEEP(*(___ksymtab+match_octal)) \
KEEP(*(___ksymtab+match_strdup)) \
KEEP(*(___ksymtab+match_strlcpy)) \
KEEP(*(___ksymtab+match_token)) \
KEEP(*(___ksymtab+md5_transform)) \
KEEP(*(___ksymtab+mdiobus_read)) \
KEEP(*(___ksymtab+mdiobus_read_nested)) \
KEEP(*(___ksymtab+__mdiobus_register)) \
KEEP(*(___ksymtab+mdiobus_unregister)) \
KEEP(*(___ksymtab+mdiobus_write)) \
KEEP(*(___ksymtab+mdiobus_write_nested)) \
KEEP(*(___ksymtab+memchr)) \
KEEP(*(___ksymtab+memchr_inv)) \
KEEP(*(___ksymtab+memcmp)) \
KEEP(*(___ksymtab+memcpy)) \
KEEP(*(___ksymtab+_memcpy_fromio)) \
KEEP(*(___ksymtab+_memcpy_toio)) \
KEEP(*(___ksymtab+memdup_user)) \
KEEP(*(___ksymtab+mem_map)) \
KEEP(*(___ksymtab+memmove)) \
KEEP(*(___ksymtab+memory_read_from_buffer)) \
KEEP(*(___ksymtab+mempool_alloc)) \
KEEP(*(___ksymtab+mempool_alloc_pages)) \
KEEP(*(___ksymtab+mempool_alloc_slab)) \
KEEP(*(___ksymtab+mempool_create)) \
KEEP(*(___ksymtab+mempool_create_node)) \
KEEP(*(___ksymtab+mempool_destroy)) \
KEEP(*(___ksymtab+mempool_free)) \
KEEP(*(___ksymtab+mempool_free_pages)) \
KEEP(*(___ksymtab+mempool_free_slab)) \
KEEP(*(___ksymtab+mempool_kfree)) \
KEEP(*(___ksymtab+mempool_resize)) \
KEEP(*(___ksymtab+memscan)) \
KEEP(*(___ksymtab+memset)) \
KEEP(*(___ksymtab+_memset_io)) \
KEEP(*(___ksymtab+memweight)) \
KEEP(*(___ksymtab+__memzero)) \
KEEP(*(___ksymtab+memzero_explicit)) \
KEEP(*(___ksymtab+metadata_dst_alloc)) \
KEEP(*(___ksymtab+metadata_dst_alloc_percpu)) \
KEEP(*(___ksymtab+mii_check_gmii_support)) \
KEEP(*(___ksymtab+mii_ethtool_gset)) \
KEEP(*(___ksymtab+mii_ethtool_sset)) \
KEEP(*(___ksymtab+mii_link_ok)) \
KEEP(*(___ksymtab+mii_nway_restart)) \
KEEP(*(___ksymtab+misc_deregister)) \
KEEP(*(___ksymtab+misc_register)) \
KEEP(*(___ksymtab+mktime64)) \
KEEP(*(___ksymtab+mnt_drop_write_file)) \
KEEP(*(___ksymtab+mnt_want_write_file)) \
KEEP(*(___ksymtab+mod_delayed_work_on)) \
KEEP(*(___ksymtab+mod_timer)) \
KEEP(*(___ksymtab+mod_timer_pending)) \
KEEP(*(___ksymtab+mod_timer_pinned)) \
KEEP(*(___ksymtab+__module_get)) \
KEEP(*(___ksymtab+module_put)) \
KEEP(*(___ksymtab+__module_put_and_exit)) \
KEEP(*(___ksymtab+mount_bdev)) \
KEEP(*(___ksymtab+mount_mtd)) \
KEEP(*(___ksymtab+mount_nodev)) \
KEEP(*(___ksymtab+mount_single)) \
KEEP(*(___ksymtab+mpage_readpage)) \
KEEP(*(___ksymtab+mpage_readpages)) \
KEEP(*(___ksymtab+mpage_writepages)) \
KEEP(*(___ksymtab+__msecs_to_jiffies)) \
KEEP(*(___ksymtab+msleep)) \
KEEP(*(___ksymtab+msleep_interruptible)) \
KEEP(*(___ksymtab+mtd_block_isbad)) \
KEEP(*(___ksymtab+mtd_block_markbad)) \
KEEP(*(___ksymtab+mtd_device_unregister)) \
KEEP(*(___ksymtab+mtd_erase)) \
KEEP(*(___ksymtab+mtd_erase_callback)) \
KEEP(*(___ksymtab+mtd_get_device_size)) \
KEEP(*(___ksymtab+mtd_kmalloc_up_to)) \
KEEP(*(___ksymtab+mtd_panic_write)) \
KEEP(*(___ksymtab+mtd_point)) \
KEEP(*(___ksymtab+mtd_read)) \
KEEP(*(___ksymtab+mtd_read_fact_prot_reg)) \
KEEP(*(___ksymtab+mtd_read_oob)) \
KEEP(*(___ksymtab+mtd_read_user_prot_reg)) \
KEEP(*(___ksymtab+mtd_unpoint)) \
KEEP(*(___ksymtab+mtd_write)) \
KEEP(*(___ksymtab+mtd_write_user_prot_reg)) \
KEEP(*(___ksymtab+mtd_writev)) \
KEEP(*(___ksymtab+__mutex_init)) \
KEEP(*(___ksymtab+mutex_lock)) \
KEEP(*(___ksymtab+mutex_lock_interruptible)) \
KEEP(*(___ksymtab+mutex_lock_killable)) \
KEEP(*(___ksymtab+mutex_trylock)) \
KEEP(*(___ksymtab+mutex_unlock)) \
KEEP(*(___ksymtab+names_cachep)) \
KEEP(*(___ksymtab+__napi_complete)) \
KEEP(*(___ksymtab+napi_complete_done)) \
KEEP(*(___ksymtab+napi_disable)) \
KEEP(*(___ksymtab+napi_gro_receive)) \
KEEP(*(___ksymtab+__napi_schedule)) \
KEEP(*(___ksymtab+__napi_schedule_irqoff)) \
KEEP(*(___ksymtab+need_conntrack)) \
KEEP(*(___ksymtab+neigh_app_ns)) \
KEEP(*(___ksymtab+neigh_changeaddr)) \
KEEP(*(___ksymtab+neigh_connected_output)) \
KEEP(*(___ksymtab+__neigh_create)) \
KEEP(*(___ksymtab+neigh_destroy)) \
KEEP(*(___ksymtab+neigh_direct_output)) \
KEEP(*(___ksymtab+neigh_ifdown)) \
KEEP(*(___ksymtab+neigh_lookup)) \
KEEP(*(___ksymtab+neigh_lookup_nodev)) \
KEEP(*(___ksymtab+neigh_parms_alloc)) \
KEEP(*(___ksymtab+neigh_parms_release)) \
KEEP(*(___ksymtab+neigh_proc_dointvec)) \
KEEP(*(___ksymtab+neigh_proc_dointvec_jiffies)) \
KEEP(*(___ksymtab+neigh_proc_dointvec_ms_jiffies)) \
KEEP(*(___ksymtab+neigh_rand_reach_time)) \
KEEP(*(___ksymtab+neigh_resolve_output)) \
KEEP(*(___ksymtab+__neigh_set_probe_once)) \
KEEP(*(___ksymtab+neigh_sysctl_register)) \
KEEP(*(___ksymtab+neigh_sysctl_unregister)) \
KEEP(*(___ksymtab+neigh_table_clear)) \
KEEP(*(___ksymtab+neigh_table_init)) \
KEEP(*(___ksymtab+neigh_update)) \
KEEP(*(___ksymtab+neigh_xmit)) \
KEEP(*(___ksymtab+netdev_adjacent_get_private)) \
KEEP(*(___ksymtab+__netdev_alloc_skb)) \
KEEP(*(___ksymtab+__netdev_alloc_skb_ip_align)) \
KEEP(*(___ksymtab+netdev_all_upper_get_next_dev_rcu)) \
KEEP(*(___ksymtab+netdev_bonding_info_change)) \
KEEP(*(___ksymtab+netdev_boot_setup_check)) \
KEEP(*(___ksymtab+netdev_change_features)) \
KEEP(*(___ksymtab+netdev_class_create_file_ns)) \
KEEP(*(___ksymtab+netdev_class_remove_file_ns)) \
KEEP(*(___ksymtab+netdev_crit)) \
KEEP(*(___ksymtab+netdev_err)) \
KEEP(*(___ksymtab+netdev_has_upper_dev)) \
KEEP(*(___ksymtab+netdev_increment_features)) \
KEEP(*(___ksymtab+netdev_info)) \
KEEP(*(___ksymtab+netdev_is_rx_handler_busy)) \
KEEP(*(___ksymtab+netdev_lower_dev_get_private)) \
KEEP(*(___ksymtab+netdev_lower_get_first_private_rcu)) \
KEEP(*(___ksymtab+netdev_lower_get_next_private)) \
KEEP(*(___ksymtab+netdev_lower_get_next_private_rcu)) \
KEEP(*(___ksymtab+netdev_master_upper_dev_get)) \
KEEP(*(___ksymtab+netdev_master_upper_dev_get_rcu)) \
KEEP(*(___ksymtab+netdev_master_upper_dev_link)) \
KEEP(*(___ksymtab+netdev_master_upper_dev_link_private)) \
KEEP(*(___ksymtab+netdev_max_backlog)) \
KEEP(*(___ksymtab+netdev_notice)) \
KEEP(*(___ksymtab+netdev_printk)) \
KEEP(*(___ksymtab+netdev_rx_handler_register)) \
KEEP(*(___ksymtab+netdev_rx_handler_unregister)) \
KEEP(*(___ksymtab+netdev_state_change)) \
KEEP(*(___ksymtab+netdev_update_features)) \
KEEP(*(___ksymtab+netdev_upper_dev_link)) \
KEEP(*(___ksymtab+netdev_upper_dev_unlink)) \
KEEP(*(___ksymtab+netdev_upper_get_next_dev_rcu)) \
KEEP(*(___ksymtab+netdev_warn)) \
KEEP(*(___ksymtab+__netdev_watchdog_up)) \
KEEP(*(___ksymtab+netif_carrier_off)) \
KEEP(*(___ksymtab+netif_carrier_on)) \
KEEP(*(___ksymtab+netif_device_attach)) \
KEEP(*(___ksymtab+netif_device_detach)) \
KEEP(*(___ksymtab+netif_napi_add)) \
KEEP(*(___ksymtab+netif_napi_del)) \
KEEP(*(___ksymtab+netif_rx)) \
KEEP(*(___ksymtab+netif_rx_ni)) \
KEEP(*(___ksymtab+__netif_schedule)) \
KEEP(*(___ksymtab+netif_schedule_queue)) \
KEEP(*(___ksymtab+netif_set_real_num_rx_queues)) \
KEEP(*(___ksymtab+netif_set_real_num_tx_queues)) \
KEEP(*(___ksymtab+netif_tx_stop_all_queues)) \
KEEP(*(___ksymtab+netif_tx_wake_queue)) \
KEEP(*(___ksymtab+netlink_broadcast)) \
KEEP(*(___ksymtab+netlink_broadcast_filtered)) \
KEEP(*(___ksymtab+netlink_capable)) \
KEEP(*(___ksymtab+netlink_has_listeners)) \
KEEP(*(___ksymtab+__netlink_kernel_create)) \
KEEP(*(___ksymtab+netlink_kernel_release)) \
KEEP(*(___ksymtab+netlink_net_capable)) \
KEEP(*(___ksymtab+__netlink_ns_capable)) \
KEEP(*(___ksymtab+netlink_ns_capable)) \
KEEP(*(___ksymtab+netlink_unicast)) \
KEEP(*(___ksymtab+net_namespace_list)) \
KEEP(*(___ksymtab+net_ratelimit)) \
KEEP(*(___ksymtab+new_inode)) \
KEEP(*(___ksymtab+nf_afinfo)) \
KEEP(*(___ksymtab+nf_conntrack_alter_reply)) \
KEEP(*(___ksymtab+__nf_conntrack_confirm)) \
KEEP(*(___ksymtab+nf_conntrack_destroy)) \
KEEP(*(___ksymtab+nf_conntrack_dscpremark_ext_set_dscp_rule_valid)) \
KEEP(*(___ksymtab+nf_conntrack_expect_lock)) \
KEEP(*(___ksymtab+nf_conntrack_find_get)) \
KEEP(*(___ksymtab+nf_conntrack_helper_register)) \
KEEP(*(___ksymtab+nf_conntrack_helper_try_module_get)) \
KEEP(*(___ksymtab+nf_conntrack_helper_unregister)) \
KEEP(*(___ksymtab+nf_conntrack_in)) \
KEEP(*(___ksymtab+nf_conntrack_l4proto_tcp6)) \
KEEP(*(___ksymtab+nf_conntrack_l4proto_udp6)) \
KEEP(*(___ksymtab+nf_conntrack_register_notifier)) \
KEEP(*(___ksymtab+nf_conntrack_tuple_taken)) \
KEEP(*(___ksymtab+nf_conntrack_unregister_notifier)) \
KEEP(*(___ksymtab+nf_conntrack_untracked)) \
KEEP(*(___ksymtab+nf_ct_attach)) \
KEEP(*(___ksymtab+nf_ct_deliver_cached_events)) \
KEEP(*(___ksymtab+nf_ct_expect_alloc)) \
KEEP(*(___ksymtab+__nf_ct_expect_find)) \
KEEP(*(___ksymtab+nf_ct_expect_find_get)) \
KEEP(*(___ksymtab+nf_ct_expect_init)) \
KEEP(*(___ksymtab+nf_ct_expect_put)) \
KEEP(*(___ksymtab+nf_ct_expect_related_report)) \
KEEP(*(___ksymtab+__nf_ct_ext_add_length)) \
KEEP(*(___ksymtab+nf_ct_extend_custom_register)) \
KEEP(*(___ksymtab+nf_ct_extend_register)) \
KEEP(*(___ksymtab+nf_ct_extend_unregister)) \
KEEP(*(___ksymtab+nf_ct_get_tuple)) \
KEEP(*(___ksymtab+nf_ct_get_tuplepr)) \
KEEP(*(___ksymtab+nf_ct_helper_expectfn_register)) \
KEEP(*(___ksymtab+nf_ct_helper_expectfn_unregister)) \
KEEP(*(___ksymtab+nf_ct_helper_log)) \
KEEP(*(___ksymtab+nf_ct_invert_tuple)) \
KEEP(*(___ksymtab+nf_ct_invert_tuplepr)) \
KEEP(*(___ksymtab+nf_ct_iterate_cleanup)) \
KEEP(*(___ksymtab+__nf_ct_kill_acct)) \
KEEP(*(___ksymtab+nf_ct_l3proto_module_put)) \
KEEP(*(___ksymtab+nf_ct_l3proto_pernet_register)) \
KEEP(*(___ksymtab+nf_ct_l3proto_pernet_unregister)) \
KEEP(*(___ksymtab+nf_ct_l3proto_register)) \
KEEP(*(___ksymtab+nf_ct_l3proto_try_module_get)) \
KEEP(*(___ksymtab+nf_ct_l3proto_unregister)) \
KEEP(*(___ksymtab+__nf_ct_l4proto_find)) \
KEEP(*(___ksymtab+nf_ct_l4proto_pernet_register)) \
KEEP(*(___ksymtab+nf_ct_l4proto_pernet_unregister)) \
KEEP(*(___ksymtab+nf_ct_l4proto_register)) \
KEEP(*(___ksymtab+nf_ct_l4proto_unregister)) \
KEEP(*(___ksymtab+nf_ct_nat_ext_add)) \
KEEP(*(___ksymtab+__nf_ct_refresh_acct)) \
KEEP(*(___ksymtab+nf_ct_seqadj_init)) \
KEEP(*(___ksymtab+nf_ct_seqadj_set)) \
KEEP(*(___ksymtab+nf_ct_seq_adjust)) \
KEEP(*(___ksymtab+nf_ct_tcp_no_window_check)) \
KEEP(*(___ksymtab+nf_ct_tmpl_alloc)) \
KEEP(*(___ksymtab+nf_ct_tmpl_free)) \
KEEP(*(___ksymtab+nf_ct_unexpect_related)) \
KEEP(*(___ksymtab+nf_ct_unlink_expect_report)) \
KEEP(*(___ksymtab+nf_ct_zone_dflt)) \
KEEP(*(___ksymtab+nf_getsockopt)) \
KEEP(*(___ksymtab+nf_hook_slow)) \
KEEP(*(___ksymtab+nf_hooks_needed)) \
KEEP(*(___ksymtab+nf_ipv6_ops)) \
KEEP(*(___ksymtab+nf_log_buf_add)) \
KEEP(*(___ksymtab+nf_log_buf_close)) \
KEEP(*(___ksymtab+nf_log_buf_open)) \
KEEP(*(___ksymtab+nf_log_dump_packet_common)) \
KEEP(*(___ksymtab+nf_log_dump_sk_uid_gid)) \
KEEP(*(___ksymtab+nf_log_dump_tcp_header)) \
KEEP(*(___ksymtab+nf_log_dump_udp_header)) \
KEEP(*(___ksymtab+nf_log_packet)) \
KEEP(*(___ksymtab+nf_log_register)) \
KEEP(*(___ksymtab+nf_log_set)) \
KEEP(*(___ksymtab+nf_log_unregister)) \
KEEP(*(___ksymtab+nf_log_unset)) \
KEEP(*(___ksymtab+nf_nat_alloc_null_binding)) \
KEEP(*(___ksymtab+nf_nat_l3proto_register)) \
KEEP(*(___ksymtab+nf_nat_l3proto_unregister)) \
KEEP(*(___ksymtab+__nf_nat_l4proto_find)) \
KEEP(*(___ksymtab+nf_nat_l4proto_in_range)) \
KEEP(*(___ksymtab+nf_nat_l4proto_register)) \
KEEP(*(___ksymtab+nf_nat_l4proto_unique_tuple)) \
KEEP(*(___ksymtab+nf_nat_l4proto_unregister)) \
KEEP(*(___ksymtab+__nf_nat_mangle_tcp_packet)) \
KEEP(*(___ksymtab+nf_nat_mangle_udp_packet)) \
KEEP(*(___ksymtab+nf_nat_packet)) \
KEEP(*(___ksymtab+nf_nat_setup_info)) \
KEEP(*(___ksymtab+nf_nat_used_tuple)) \
KEEP(*(___ksymtab+nfnetlink_has_listeners)) \
KEEP(*(___ksymtab+nfnetlink_parse_nat_setup_hook)) \
KEEP(*(___ksymtab+nfnetlink_unicast)) \
KEEP(*(___ksymtab+nf_queue_entry_get_refs)) \
KEEP(*(___ksymtab+nf_queue_entry_release_refs)) \
KEEP(*(___ksymtab+nf_register_afinfo)) \
KEEP(*(___ksymtab+nf_register_hooks)) \
KEEP(*(___ksymtab+nf_register_net_hooks)) \
KEEP(*(___ksymtab+nf_register_queue_imq_handler)) \
KEEP(*(___ksymtab+nf_register_sockopt)) \
KEEP(*(___ksymtab+nf_reinject)) \
KEEP(*(___ksymtab+nf_setsockopt)) \
KEEP(*(___ksymtab+nf_skb_duplicated)) \
KEEP(*(___ksymtab+nf_unregister_afinfo)) \
KEEP(*(___ksymtab+nf_unregister_hooks)) \
KEEP(*(___ksymtab+nf_unregister_net_hooks)) \
KEEP(*(___ksymtab+nf_unregister_queue_imq_handler)) \
KEEP(*(___ksymtab+nf_unregister_sockopt)) \
KEEP(*(___ksymtab+nf_xfrm_me_harder)) \
KEEP(*(___ksymtab+nla_find)) \
KEEP(*(___ksymtab+nla_memcmp)) \
KEEP(*(___ksymtab+nla_memcpy)) \
KEEP(*(___ksymtab+nla_parse)) \
KEEP(*(___ksymtab+__nla_put)) \
KEEP(*(___ksymtab+nla_put)) \
KEEP(*(___ksymtab+__nla_put_nohdr)) \
KEEP(*(___ksymtab+nla_put_nohdr)) \
KEEP(*(___ksymtab+__nla_reserve)) \
KEEP(*(___ksymtab+nla_reserve)) \
KEEP(*(___ksymtab+__nla_reserve_nohdr)) \
KEEP(*(___ksymtab+nla_reserve_nohdr)) \
KEEP(*(___ksymtab+nla_strcmp)) \
KEEP(*(___ksymtab+nla_strlcpy)) \
KEEP(*(___ksymtab+__nlmsg_put)) \
KEEP(*(___ksymtab+no_llseek)) \
KEEP(*(___ksymtab+nonseekable_open)) \
KEEP(*(___ksymtab+noop_backing_dev_info)) \
KEEP(*(___ksymtab+noop_llseek)) \
KEEP(*(___ksymtab+noop_qdisc)) \
KEEP(*(___ksymtab+nosteal_pipe_buf_ops)) \
KEEP(*(___ksymtab+nr_cpu_ids)) \
KEEP(*(___ksymtab+nr_free_buffer_pages)) \
KEEP(*(___ksymtab+ns_capable)) \
KEEP(*(___ksymtab+ns_capable_noaudit)) \
KEEP(*(___ksymtab+nsecs_to_jiffies)) \
KEEP(*(___ksymtab+nsecs_to_jiffies64)) \
KEEP(*(___ksymtab+nvram_get)) \
KEEP(*(___ksymtab+nvram_getall)) \
KEEP(*(___ksymtab+of_phy_get)) \
KEEP(*(___ksymtab+osl_acp_war_enab)) \
KEEP(*(___ksymtab+osl_arch_is_coherent)) \
KEEP(*(___ksymtab+osl_attach)) \
KEEP(*(___ksymtab+osl_cache_flush)) \
KEEP(*(___ksymtab+osl_cache_inv)) \
KEEP(*(___ksymtab+osl_cpu_relax)) \
KEEP(*(___ksymtab+osl_delay)) \
KEEP(*(___ksymtab+osl_detach)) \
KEEP(*(___ksymtab+osl_dma_alloc_consistent)) \
KEEP(*(___ksymtab+osl_dma_free_consistent)) \
KEEP(*(___ksymtab+osl_dma_map)) \
KEEP(*(___ksymtab+osl_dma_unmap)) \
KEEP(*(___ksymtab+osl_error)) \
KEEP(*(___ksymtab+osl_flag_set)) \
KEEP(*(___ksymtab+osl_malloc)) \
KEEP(*(___ksymtab+osl_malloced)) \
KEEP(*(___ksymtab+osl_malloc_failed)) \
KEEP(*(___ksymtab+osl_mallocz)) \
KEEP(*(___ksymtab+osl_mfree)) \
KEEP(*(___ksymtab+osl_pci_bus)) \
KEEP(*(___ksymtab+osl_pci_device)) \
KEEP(*(___ksymtab+osl_pcie_bus)) \
KEEP(*(___ksymtab+osl_pcie_domain)) \
KEEP(*(___ksymtab+osl_pcie_rreg)) \
KEEP(*(___ksymtab+osl_pci_read_config)) \
KEEP(*(___ksymtab+osl_pci_slot)) \
KEEP(*(___ksymtab+osl_pci_write_config)) \
KEEP(*(___ksymtab+osl_pcmcia_read_attr)) \
KEEP(*(___ksymtab+osl_pcmcia_write_attr)) \
KEEP(*(___ksymtab+osl_pktalloced)) \
KEEP(*(___ksymtab+osl_pktdup)) \
KEEP(*(___ksymtab+osl_pktfree)) \
KEEP(*(___ksymtab+osl_pkt_frmnative)) \
KEEP(*(___ksymtab+osl_pktget)) \
KEEP(*(___ksymtab+osl_pkt_tonative)) \
KEEP(*(___ksymtab+osl_prefetch)) \
KEEP(*(___ksymtab+osl_sleep)) \
KEEP(*(___ksymtab+osl_static_mem_init)) \
KEEP(*(___ksymtab+otp_read_word)) \
KEEP(*(___ksymtab+out_of_line_wait_on_atomic_t)) \
KEEP(*(___ksymtab+out_of_line_wait_on_bit)) \
KEEP(*(___ksymtab+out_of_line_wait_on_bit_lock)) \
KEEP(*(___ksymtab+out_of_line_wait_on_bit_timeout)) \
KEEP(*(___ksymtab+overflowgid)) \
KEEP(*(___ksymtab+overflowuid)) \
KEEP(*(___ksymtab+override_creds)) \
KEEP(*(___ksymtab+page_address)) \
KEEP(*(___ksymtab+pagecache_get_page)) \
KEEP(*(___ksymtab+pagecache_isize_extended)) \
KEEP(*(___ksymtab+page_cache_sync_readahead)) \
KEEP(*(___ksymtab+pagecache_write_begin)) \
KEEP(*(___ksymtab+pagecache_write_end)) \
KEEP(*(___ksymtab+page_follow_link_light)) \
KEEP(*(___ksymtab+page_put_link)) \
KEEP(*(___ksymtab+__page_symlink)) \
KEEP(*(___ksymtab+page_symlink)) \
KEEP(*(___ksymtab+page_symlink_inode_operations)) \
KEEP(*(___ksymtab+pagevec_lookup)) \
KEEP(*(___ksymtab+pagevec_lookup_tag)) \
KEEP(*(___ksymtab+__pagevec_release)) \
KEEP(*(___ksymtab+panic)) \
KEEP(*(___ksymtab+panic_blink)) \
KEEP(*(___ksymtab+panic_notifier_list)) \
KEEP(*(___ksymtab+panic_timeout)) \
KEEP(*(___ksymtab+param_array_ops)) \
KEEP(*(___ksymtab+param_get_string)) \
KEEP(*(___ksymtab+param_get_uint)) \
KEEP(*(___ksymtab+param_ops_bool)) \
KEEP(*(___ksymtab+param_ops_bool_enable_only)) \
KEEP(*(___ksymtab+param_ops_charp)) \
KEEP(*(___ksymtab+param_ops_int)) \
KEEP(*(___ksymtab+param_ops_string)) \
KEEP(*(___ksymtab+param_ops_uint)) \
KEEP(*(___ksymtab+param_ops_ullong)) \
KEEP(*(___ksymtab+param_ops_ulong)) \
KEEP(*(___ksymtab+param_ops_ushort)) \
KEEP(*(___ksymtab+param_set_copystring)) \
KEEP(*(___ksymtab+param_set_uint)) \
KEEP(*(___ksymtab+passthru_features_check)) \
KEEP(*(___ksymtab+path_put)) \
KEEP(*(___ksymtab+pcibios_fixup_bus)) \
KEEP(*(___ksymtab+pci_bus_read_config_byte)) \
KEEP(*(___ksymtab+pci_bus_read_config_dword)) \
KEEP(*(___ksymtab+pci_bus_read_config_word)) \
KEEP(*(___ksymtab+pci_bus_write_config_byte)) \
KEEP(*(___ksymtab+pci_bus_write_config_dword)) \
KEEP(*(___ksymtab+pci_cleanup_aer_uncorrect_error_status)) \
KEEP(*(___ksymtab+__pci_complete_power_transition)) \
KEEP(*(___ksymtab+pcicore_down)) \
KEEP(*(___ksymtab+pcicore_hwup)) \
KEEP(*(___ksymtab+pcicore_up)) \
KEEP(*(___ksymtab+pci_dev_put)) \
KEEP(*(___ksymtab+pci_dev_run_wake)) \
KEEP(*(___ksymtab+pci_disable_device)) \
KEEP(*(___ksymtab+pci_enable_device)) \
KEEP(*(___ksymtab+pci_enable_device_io)) \
KEEP(*(___ksymtab+pci_enable_device_mem)) \
KEEP(*(___ksymtab+__pci_enable_wake)) \
KEEP(*(___ksymtab+pcie_update_link_speed)) \
KEEP(*(___ksymtab+pcie_war_ovr_aspm_update)) \
KEEP(*(___ksymtab+pci_find_capability)) \
KEEP(*(___ksymtab+pci_fixup_cardbus)) \
KEEP(*(___ksymtab+pci_fixup_device)) \
KEEP(*(___ksymtab+pci_fixup_irqs)) \
KEEP(*(___ksymtab+pci_get_device)) \
KEEP(*(___ksymtab+pci_get_slot)) \
KEEP(*(___ksymtab+pci_intx_mask_supported)) \
KEEP(*(___ksymtab+pci_ioremap_bar)) \
KEEP(*(___ksymtab+pci_ioremap_io)) \
KEEP(*(___ksymtab+pci_ioremap_wc_bar)) \
KEEP(*(___ksymtab+pci_iounmap)) \
KEEP(*(___ksymtab+pci_lost_interrupt)) \
KEEP(*(___ksymtab+pci_match_id)) \
KEEP(*(___ksymtab+pcim_iounmap)) \
KEEP(*(___ksymtab+pcim_iounmap_regions)) \
KEEP(*(___ksymtab+pci_pme_capable)) \
KEEP(*(___ksymtab+__pci_register_driver)) \
KEEP(*(___ksymtab+pci_restore_state)) \
KEEP(*(___ksymtab+pci_save_state)) \
KEEP(*(___ksymtab+pci_set_master)) \
KEEP(*(___ksymtab+pci_set_mwi)) \
KEEP(*(___ksymtab+pci_set_power_state)) \
KEEP(*(___ksymtab+pci_setup_cardbus)) \
KEEP(*(___ksymtab+pci_unregister_driver)) \
KEEP(*(___ksymtab+pci_user_read_config_byte)) \
KEEP(*(___ksymtab+pci_user_read_config_dword)) \
KEEP(*(___ksymtab+pci_user_read_config_word)) \
KEEP(*(___ksymtab+PDE_DATA)) \
KEEP(*(___ksymtab+peernet2id_alloc)) \
KEEP(*(___ksymtab+__percpu_counter_add)) \
KEEP(*(___ksymtab+percpu_counter_batch)) \
KEEP(*(___ksymtab+percpu_counter_destroy)) \
KEEP(*(___ksymtab+__percpu_counter_init)) \
KEEP(*(___ksymtab+__percpu_counter_sum)) \
KEEP(*(___ksymtab+percpu_down_read)) \
KEEP(*(___ksymtab+percpu_down_write)) \
KEEP(*(___ksymtab+__per_cpu_offset)) \
KEEP(*(___ksymtab+percpu_up_read)) \
KEEP(*(___ksymtab+percpu_up_write)) \
KEEP(*(___ksymtab+phy_create_lookup)) \
KEEP(*(___ksymtab+phy_device_create)) \
KEEP(*(___ksymtab+phy_device_register)) \
KEEP(*(___ksymtab+phy_driver_register)) \
KEEP(*(___ksymtab+phy_drivers_register)) \
KEEP(*(___ksymtab+phy_drivers_unregister)) \
KEEP(*(___ksymtab+phy_driver_unregister)) \
KEEP(*(___ksymtab+phy_exit)) \
KEEP(*(___ksymtab+phy_get)) \
KEEP(*(___ksymtab+phy_get_eee_err)) \
KEEP(*(___ksymtab+phy_init)) \
KEEP(*(___ksymtab+phy_init_eee)) \
KEEP(*(___ksymtab+phy_init_hw)) \
KEEP(*(___ksymtab+phy_mac_interrupt)) \
KEEP(*(___ksymtab+phy_power_off)) \
KEEP(*(___ksymtab+phy_power_on)) \
KEEP(*(___ksymtab+phy_put)) \
KEEP(*(___ksymtab+phy_register_fixup)) \
KEEP(*(___ksymtab+phy_register_fixup_for_id)) \
KEEP(*(___ksymtab+phy_register_fixup_for_uid)) \
KEEP(*(___ksymtab+phy_remove_lookup)) \
KEEP(*(___ksymtab+phy_start_interrupts)) \
KEEP(*(___ksymtab+phy_stop_interrupts)) \
KEEP(*(___ksymtab+pid_nr_ns)) \
KEEP(*(___ksymtab+ping_bind)) \
KEEP(*(___ksymtab+ping_close)) \
KEEP(*(___ksymtab+ping_common_sendmsg)) \
KEEP(*(___ksymtab+ping_err)) \
KEEP(*(___ksymtab+ping_getfrag)) \
KEEP(*(___ksymtab+ping_get_port)) \
KEEP(*(___ksymtab+ping_hash)) \
KEEP(*(___ksymtab+ping_init_sock)) \
KEEP(*(___ksymtab+ping_proc_register)) \
KEEP(*(___ksymtab+ping_proc_unregister)) \
KEEP(*(___ksymtab+ping_queue_rcv_skb)) \
KEEP(*(___ksymtab+ping_rcv)) \
KEEP(*(___ksymtab+ping_recvmsg)) \
KEEP(*(___ksymtab+ping_seq_fops)) \
KEEP(*(___ksymtab+ping_seq_next)) \
KEEP(*(___ksymtab+ping_seq_start)) \
KEEP(*(___ksymtab+ping_seq_stop)) \
KEEP(*(___ksymtab+ping_unhash)) \
KEEP(*(___ksymtab+pingv6_ops)) \
KEEP(*(___ksymtab+pipe_lock)) \
KEEP(*(___ksymtab+pipe_unlock)) \
KEEP(*(___ksymtab+pktcopy)) \
KEEP(*(___ksymtab+pktgetdscp)) \
KEEP(*(___ksymtab+pktlast)) \
KEEP(*(___ksymtab+pktq_deq)) \
KEEP(*(___ksymtab+pktq_deq_tail)) \
KEEP(*(___ksymtab+pktq_flush)) \
KEEP(*(___ksymtab+pktq_init)) \
KEEP(*(___ksymtab+pktq_mdeq)) \
KEEP(*(___ksymtab+pktq_mlen)) \
KEEP(*(___ksymtab+pktq_pdeq)) \
KEEP(*(___ksymtab+pktq_pdeq_prev)) \
KEEP(*(___ksymtab+pktq_pdeq_tail)) \
KEEP(*(___ksymtab+pktq_pdeq_with_fn)) \
KEEP(*(___ksymtab+pktq_peek_tail)) \
KEEP(*(___ksymtab+pktq_penq)) \
KEEP(*(___ksymtab+pktq_penq_head)) \
KEEP(*(___ksymtab+pktq_pflush)) \
KEEP(*(___ksymtab+pktq_set_max_plen)) \
KEEP(*(___ksymtab+pktsegcnt)) \
KEEP(*(___ksymtab+pktsegcnt_war)) \
KEEP(*(___ksymtab+pktsetprio)) \
KEEP(*(___ksymtab+pkttotlen)) \
KEEP(*(___ksymtab+platform_bus)) \
KEEP(*(___ksymtab+platform_bus_type)) \
KEEP(*(___ksymtab+platform_device_add)) \
KEEP(*(___ksymtab+platform_device_add_data)) \
KEEP(*(___ksymtab+platform_device_add_resources)) \
KEEP(*(___ksymtab+platform_device_del)) \
KEEP(*(___ksymtab+platform_device_register)) \
KEEP(*(___ksymtab+platform_device_register_full)) \
KEEP(*(___ksymtab+platform_device_unregister)) \
KEEP(*(___ksymtab+__platform_driver_probe)) \
KEEP(*(___ksymtab+__platform_driver_register)) \
KEEP(*(___ksymtab+platform_driver_unregister)) \
KEEP(*(___ksymtab+platform_get_irq)) \
KEEP(*(___ksymtab+platform_get_irq_byname)) \
KEEP(*(___ksymtab+platform_get_resource)) \
KEEP(*(___ksymtab+platform_get_resource_byname)) \
KEEP(*(___ksymtab+pm_qos_update_request)) \
KEEP(*(___ksymtab+pneigh_enqueue)) \
KEEP(*(___ksymtab+__pneigh_lookup)) \
KEEP(*(___ksymtab+pneigh_lookup)) \
KEEP(*(___ksymtab+poll_schedule_timeout)) \
KEEP(*(___ksymtab+posix_acl_access_xattr_handler)) \
KEEP(*(___ksymtab+posix_acl_alloc)) \
KEEP(*(___ksymtab+__posix_acl_chmod)) \
KEEP(*(___ksymtab+posix_acl_chmod)) \
KEEP(*(___ksymtab+__posix_acl_create)) \
KEEP(*(___ksymtab+posix_acl_create)) \
KEEP(*(___ksymtab+posix_acl_default_xattr_handler)) \
KEEP(*(___ksymtab+posix_acl_update_mode)) \
KEEP(*(___ksymtab+posix_lock_file)) \
KEEP(*(___ksymtab+posix_test_lock)) \
KEEP(*(___ksymtab+posix_unblock_lock)) \
KEEP(*(___ksymtab+ppp_dev_name)) \
KEEP(*(___ksymtab+ppp_input)) \
KEEP(*(___ksymtab+ppp_input_error)) \
KEEP(*(___ksymtab+ppp_output_wakeup)) \
KEEP(*(___ksymtab+pppox_ioctl)) \
KEEP(*(___ksymtab+pppox_unbind_sock)) \
KEEP(*(___ksymtab+ppp_register_channel)) \
KEEP(*(___ksymtab+ppp_register_net_channel)) \
KEEP(*(___ksymtab+prandom_seed)) \
KEEP(*(___ksymtab+prandom_u32)) \
KEEP(*(___ksymtab+prandom_u32_state)) \
KEEP(*(___ksymtab+prepare_kernel_cred)) \
KEEP(*(___ksymtab+prepare_to_wait)) \
KEEP(*(___ksymtab+prepare_to_wait_event)) \
KEEP(*(___ksymtab+prepare_to_wait_exclusive)) \
KEEP(*(___ksymtab+prhex)) \
KEEP(*(___ksymtab+print_hex_dump)) \
KEEP(*(___ksymtab+print_hex_dump_bytes)) \
KEEP(*(___ksymtab+printk)) \
KEEP(*(___ksymtab+printk_emit)) \
KEEP(*(___ksymtab+__printk_ratelimit)) \
KEEP(*(___ksymtab+printk_timed_ratelimit)) \
KEEP(*(___ksymtab+print_tuple)) \
KEEP(*(___ksymtab+probe_kernel_read)) \
KEEP(*(___ksymtab+probe_user_read)) \
KEEP(*(___ksymtab+proc_create_data)) \
KEEP(*(___ksymtab+proc_dointvec)) \
KEEP(*(___ksymtab+proc_dointvec_jiffies)) \
KEEP(*(___ksymtab+proc_dointvec_minmax)) \
KEEP(*(___ksymtab+proc_dointvec_ms_jiffies)) \
KEEP(*(___ksymtab+proc_dointvec_userhz_jiffies)) \
KEEP(*(___ksymtab+proc_dostring)) \
KEEP(*(___ksymtab+proc_doulongvec_minmax)) \
KEEP(*(___ksymtab+proc_doulongvec_ms_jiffies_minmax)) \
KEEP(*(___ksymtab+proc_mkdir)) \
KEEP(*(___ksymtab+proc_mkdir_data)) \
KEEP(*(___ksymtab+proc_mkdir_mode)) \
KEEP(*(___ksymtab+proc_remove)) \
KEEP(*(___ksymtab+proto_register)) \
KEEP(*(___ksymtab+proto_unregister)) \
KEEP(*(___ksymtab+__pskb_copy_fclone)) \
KEEP(*(___ksymtab+pskb_expand_head)) \
KEEP(*(___ksymtab+__pskb_pull_tail)) \
KEEP(*(___ksymtab+pskb_put)) \
KEEP(*(___ksymtab+___pskb_trim)) \
KEEP(*(___ksymtab+pskb_trim_rcsum_slow)) \
KEEP(*(___ksymtab+put_cmsg)) \
KEEP(*(___ksymtab+__put_cred)) \
KEEP(*(___ksymtab+put_device)) \
KEEP(*(___ksymtab+put_disk)) \
KEEP(*(___ksymtab+put_page)) \
KEEP(*(___ksymtab+put_pages_list)) \
KEEP(*(___ksymtab+put_pid)) \
KEEP(*(___ksymtab+__put_task_struct)) \
KEEP(*(___ksymtab+put_tty_driver)) \
KEEP(*(___ksymtab+__put_user_1)) \
KEEP(*(___ksymtab+__put_user_2)) \
KEEP(*(___ksymtab+__put_user_4)) \
KEEP(*(___ksymtab+__qdisc_calculate_pkt_len)) \
KEEP(*(___ksymtab+qdisc_dequeue_skb)) \
KEEP(*(___ksymtab+qdisc_tree_reduce_backlog)) \
KEEP(*(___ksymtab+qdisc_watchdog_schedule_ns)) \
KEEP(*(___ksymtab+queue_delayed_work_on)) \
KEEP(*(___ksymtab+queue_work_on)) \
KEEP(*(___ksymtab+radix_tree_delete)) \
KEEP(*(___ksymtab+radix_tree_delete_item)) \
KEEP(*(___ksymtab+radix_tree_gang_lookup)) \
KEEP(*(___ksymtab+radix_tree_gang_lookup_slot)) \
KEEP(*(___ksymtab+radix_tree_gang_lookup_tag)) \
KEEP(*(___ksymtab+radix_tree_gang_lookup_tag_slot)) \
KEEP(*(___ksymtab+radix_tree_insert)) \
KEEP(*(___ksymtab+radix_tree_lookup)) \
KEEP(*(___ksymtab+radix_tree_lookup_slot)) \
KEEP(*(___ksymtab+radix_tree_maybe_preload)) \
KEEP(*(___ksymtab+radix_tree_tag_clear)) \
KEEP(*(___ksymtab+radix_tree_tag_get)) \
KEEP(*(___ksymtab+radix_tree_tag_set)) \
KEEP(*(___ksymtab+___ratelimit)) \
KEEP(*(___ksymtab+raw_hash_sk)) \
KEEP(*(___ksymtab+_raw_read_lock)) \
KEEP(*(___ksymtab+_raw_read_lock_bh)) \
KEEP(*(___ksymtab+_raw_read_lock_irq)) \
KEEP(*(___ksymtab+_raw_read_lock_irqsave)) \
KEEP(*(___ksymtab+_raw_read_trylock)) \
KEEP(*(___ksymtab+_raw_read_unlock_bh)) \
KEEP(*(___ksymtab+_raw_read_unlock_irqrestore)) \
KEEP(*(___ksymtab+raw_seq_next)) \
KEEP(*(___ksymtab+raw_seq_open)) \
KEEP(*(___ksymtab+raw_seq_start)) \
KEEP(*(___ksymtab+raw_seq_stop)) \
KEEP(*(___ksymtab+_raw_spin_lock)) \
KEEP(*(___ksymtab+_raw_spin_lock_bh)) \
KEEP(*(___ksymtab+_raw_spin_lock_irq)) \
KEEP(*(___ksymtab+_raw_spin_lock_irqsave)) \
KEEP(*(___ksymtab+_raw_spin_trylock)) \
KEEP(*(___ksymtab+_raw_spin_trylock_bh)) \
KEEP(*(___ksymtab+_raw_spin_unlock_bh)) \
KEEP(*(___ksymtab+_raw_spin_unlock_irqrestore)) \
KEEP(*(___ksymtab+raw_unhash_sk)) \
KEEP(*(___ksymtab+_raw_write_lock)) \
KEEP(*(___ksymtab+_raw_write_lock_bh)) \
KEEP(*(___ksymtab+_raw_write_lock_irq)) \
KEEP(*(___ksymtab+_raw_write_lock_irqsave)) \
KEEP(*(___ksymtab+_raw_write_trylock)) \
KEEP(*(___ksymtab+_raw_write_unlock_bh)) \
KEEP(*(___ksymtab+_raw_write_unlock_irqrestore)) \
KEEP(*(___ksymtab+rb_erase)) \
KEEP(*(___ksymtab+__rb_erase_color)) \
KEEP(*(___ksymtab+rb_first)) \
KEEP(*(___ksymtab+rb_first_postorder)) \
KEEP(*(___ksymtab+rb_insert_color)) \
KEEP(*(___ksymtab+rb_last)) \
KEEP(*(___ksymtab+rb_next)) \
KEEP(*(___ksymtab+rb_next_postorder)) \
KEEP(*(___ksymtab+rb_prev)) \
KEEP(*(___ksymtab+rb_replace_node)) \
KEEP(*(___ksymtab+rcu_barrier)) \
KEEP(*(___ksymtab+rcu_barrier_bh)) \
KEEP(*(___ksymtab+rcu_barrier_sched)) \
KEEP(*(___ksymtab+rcu_batches_completed)) \
KEEP(*(___ksymtab+rcu_batches_completed_bh)) \
KEEP(*(___ksymtab+rcu_batches_completed_sched)) \
KEEP(*(___ksymtab+rcu_scheduler_active)) \
KEEP(*(___ksymtab+read_cache_page)) \
KEEP(*(___ksymtab+read_cache_page_gfp)) \
KEEP(*(___ksymtab+read_cache_pages)) \
KEEP(*(___ksymtab+read_current_timer)) \
KEEP(*(___ksymtab+read_dev_sector)) \
KEEP(*(___ksymtab+reciprocal_value)) \
KEEP(*(___ksymtab+redirty_page_for_writepage)) \
KEEP(*(___ksymtab+register_blkdev)) \
KEEP(*(___ksymtab+__register_chrdev)) \
KEEP(*(___ksymtab+register_chrdev_region)) \
KEEP(*(___ksymtab+register_filesystem)) \
KEEP(*(___ksymtab+register_inetaddr_notifier)) \
KEEP(*(___ksymtab+register_key_type)) \
KEEP(*(___ksymtab+register_netdev)) \
KEEP(*(___ksymtab+register_netdevice)) \
KEEP(*(___ksymtab+register_netdevice_notifier)) \
KEEP(*(___ksymtab+register_net_sysctl)) \
KEEP(*(___ksymtab+__register_nls)) \
KEEP(*(___ksymtab+register_pernet_device)) \
KEEP(*(___ksymtab+register_pernet_subsys)) \
KEEP(*(___ksymtab+register_pppox_proto)) \
KEEP(*(___ksymtab+register_qdisc)) \
KEEP(*(___ksymtab+register_reboot_notifier)) \
KEEP(*(___ksymtab+register_shrinker)) \
KEEP(*(___ksymtab+register_sysctl_table)) \
KEEP(*(___ksymtab+release_pages)) \
KEEP(*(___ksymtab+__release_region)) \
KEEP(*(___ksymtab+release_sock)) \
KEEP(*(___ksymtab+remap_vmalloc_range)) \
KEEP(*(___ksymtab+remap_vmalloc_range_partial)) \
KEEP(*(___ksymtab+remove_proc_entry)) \
KEEP(*(___ksymtab+remove_wait_queue)) \
KEEP(*(___ksymtab+rename_lock)) \
KEEP(*(___ksymtab+replace_page_cache_page)) \
KEEP(*(___ksymtab+request_key)) \
KEEP(*(___ksymtab+request_key_async)) \
KEEP(*(___ksymtab+request_key_async_with_auxdata)) \
KEEP(*(___ksymtab+request_key_with_auxdata)) \
KEEP(*(___ksymtab+__request_module)) \
KEEP(*(___ksymtab+__request_region)) \
KEEP(*(___ksymtab+request_threaded_irq)) \
KEEP(*(___ksymtab+revalidate_disk)) \
KEEP(*(___ksymtab+revert_creds)) \
KEEP(*(___ksymtab+rfkill_alloc)) \
KEEP(*(___ksymtab+rfkill_destroy)) \
KEEP(*(___ksymtab+rfkill_init_sw_state)) \
KEEP(*(___ksymtab+rfkill_register)) \
KEEP(*(___ksymtab+rfkill_set_hw_state)) \
KEEP(*(___ksymtab+rfkill_unregister)) \
KEEP(*(___ksymtab+rhashtable_init)) \
KEEP(*(___ksymtab+robo_power_save_mode_get)) \
KEEP(*(___ksymtab+robo_power_save_mode_set)) \
KEEP(*(___ksymtab+robo_power_save_mode_update)) \
KEEP(*(___ksymtab+robo_power_save_toggle)) \
KEEP(*(___ksymtab+robo_watchdog)) \
KEEP(*(___ksymtab+__root_device_register)) \
KEEP(*(___ksymtab+root_device_unregister)) \
KEEP(*(___ksymtab+__round_jiffies)) \
KEEP(*(___ksymtab+round_jiffies)) \
KEEP(*(___ksymtab+__round_jiffies_relative)) \
KEEP(*(___ksymtab+round_jiffies_relative)) \
KEEP(*(___ksymtab+__round_jiffies_up)) \
KEEP(*(___ksymtab+round_jiffies_up)) \
KEEP(*(___ksymtab+__round_jiffies_up_relative)) \
KEEP(*(___ksymtab+round_jiffies_up_relative)) \
KEEP(*(___ksymtab+rps_cpu_mask)) \
KEEP(*(___ksymtab+rps_sock_flow_table)) \
KEEP(*(___ksymtab+rq_flush_dcache_pages)) \
KEEP(*(___ksymtab+rtc_ktime_to_tm)) \
KEEP(*(___ksymtab+rt_dst_alloc)) \
KEEP(*(___ksymtab+rtmsg_ifinfo)) \
KEEP(*(___ksymtab+rt_mutex_lock)) \
KEEP(*(___ksymtab+rt_mutex_lock_interruptible)) \
KEEP(*(___ksymtab+rt_mutex_trylock)) \
KEEP(*(___ksymtab+rt_mutex_unlock)) \
KEEP(*(___ksymtab+rtnetlink_put_metrics)) \
KEEP(*(___ksymtab+rtnl_af_register)) \
KEEP(*(___ksymtab+__rtnl_af_unregister)) \
KEEP(*(___ksymtab+rtnl_af_unregister)) \
KEEP(*(___ksymtab+__rtnl_link_register)) \
KEEP(*(___ksymtab+rtnl_link_register)) \
KEEP(*(___ksymtab+__rtnl_link_unregister)) \
KEEP(*(___ksymtab+rtnl_link_unregister)) \
KEEP(*(___ksymtab+rtnl_lock)) \
KEEP(*(___ksymtab+rtnl_nla_parse_ifla)) \
KEEP(*(___ksymtab+rtnl_notify)) \
KEEP(*(___ksymtab+rtnl_put_cacheinfo)) \
KEEP(*(___ksymtab+__rtnl_register)) \
KEEP(*(___ksymtab+rtnl_register)) \
KEEP(*(___ksymtab+rtnl_set_sk_err)) \
KEEP(*(___ksymtab+rtnl_trylock)) \
KEEP(*(___ksymtab+rtnl_unicast)) \
KEEP(*(___ksymtab+rtnl_unlock)) \
KEEP(*(___ksymtab+rtnl_unregister)) \
KEEP(*(___ksymtab+rtnl_unregister_all)) \
KEEP(*(___ksymtab+rwsem_downgrade_wake)) \
KEEP(*(___ksymtab+rwsem_down_read_failed)) \
KEEP(*(___ksymtab+rwsem_down_write_failed)) \
KEEP(*(___ksymtab+save_mount_options)) \
KEEP(*(___ksymtab+sb800_prefetch)) \
KEEP(*(___ksymtab+__sb_end_write)) \
KEEP(*(___ksymtab+sb_iscoreup)) \
KEEP(*(___ksymtab+sb_min_blocksize)) \
KEEP(*(___ksymtab+sb_set_blocksize)) \
KEEP(*(___ksymtab+__sb_start_write)) \
KEEP(*(___ksymtab+scatterwalk_ffwd)) \
KEEP(*(___ksymtab+scatterwalk_map_and_copy)) \
KEEP(*(___ksymtab+sched_setscheduler)) \
KEEP(*(___ksymtab+sched_setscheduler_nocheck)) \
KEEP(*(___ksymtab+schedule)) \
KEEP(*(___ksymtab+schedule_hrtimeout)) \
KEEP(*(___ksymtab+schedule_hrtimeout_range)) \
KEEP(*(___ksymtab+schedule_timeout)) \
KEEP(*(___ksymtab+schedule_timeout_interruptible)) \
KEEP(*(___ksymtab+schedule_timeout_killable)) \
KEEP(*(___ksymtab+schedule_timeout_uninterruptible)) \
KEEP(*(___ksymtab+scm_fp_dup)) \
KEEP(*(___ksymtab+scnprintf)) \
KEEP(*(___ksymtab+scsi_cmd_blk_ioctl)) \
KEEP(*(___ksymtab+scsi_command_size_tbl)) \
KEEP(*(___ksymtab+scsi_verify_blk_ioctl)) \
KEEP(*(___ksymtab+__secpath_destroy)) \
KEEP(*(___ksymtab+secpath_dup)) \
KEEP(*(___ksymtab+secure_ipv6_port_ephemeral)) \
KEEP(*(___ksymtab+secure_tcpv6_sequence_number)) \
KEEP(*(___ksymtab+send_sig)) \
KEEP(*(___ksymtab+send_sig_info)) \
KEEP(*(___ksymtab+seq_escape)) \
KEEP(*(___ksymtab+seq_file_path)) \
KEEP(*(___ksymtab+seq_lseek)) \
KEEP(*(___ksymtab+seq_open)) \
KEEP(*(___ksymtab+seq_open_net)) \
KEEP(*(___ksymtab+__seq_open_private)) \
KEEP(*(___ksymtab+seq_open_private)) \
KEEP(*(___ksymtab+seq_printf)) \
KEEP(*(___ksymtab+seq_putc)) \
KEEP(*(___ksymtab+seq_puts)) \
KEEP(*(___ksymtab+seq_read)) \
KEEP(*(___ksymtab+seq_release)) \
KEEP(*(___ksymtab+seq_release_net)) \
KEEP(*(___ksymtab+seq_release_private)) \
KEEP(*(___ksymtab+serial8250_do_shutdown)) \
KEEP(*(___ksymtab+serial8250_do_startup)) \
KEEP(*(___ksymtab+set_anon_super)) \
KEEP(*(___ksymtab+setattr_copy)) \
KEEP(*(___ksymtab+set_bh_page)) \
KEEP(*(___ksymtab+_set_bit)) \
KEEP(*(___ksymtab+set_blocksize)) \
KEEP(*(___ksymtab+set_cached_acl)) \
KEEP(*(___ksymtab+set_current_groups)) \
KEEP(*(___ksymtab+set_disk_ro)) \
KEEP(*(___ksymtab+set_groups)) \
KEEP(*(___ksymtab+set_nlink)) \
KEEP(*(___ksymtab+set_page_dirty)) \
KEEP(*(___ksymtab+__set_page_dirty_buffers)) \
KEEP(*(___ksymtab+set_page_dirty_lock)) \
KEEP(*(___ksymtab+__set_page_dirty_nobuffers)) \
KEEP(*(___ksymtab+set_task_ioprio)) \
KEEP(*(___ksymtab+set_timer_slack)) \
KEEP(*(___ksymtab+setup_arg_pages)) \
KEEP(*(___ksymtab+setup_irq)) \
KEEP(*(___ksymtab+setup_max_cpus)) \
KEEP(*(___ksymtab+setup_new_exec)) \
KEEP(*(___ksymtab+set_user_nice)) \
KEEP(*(___ksymtab+set_wb_congested)) \
KEEP(*(___ksymtab+__sg_alloc_table)) \
KEEP(*(___ksymtab+sget)) \
KEEP(*(___ksymtab+__sg_free_table)) \
KEEP(*(___ksymtab+sg_init_one)) \
KEEP(*(___ksymtab+sg_init_table)) \
KEEP(*(___ksymtab+sg_miter_next)) \
KEEP(*(___ksymtab+sg_miter_skip)) \
KEEP(*(___ksymtab+sg_miter_start)) \
KEEP(*(___ksymtab+sg_miter_stop)) \
KEEP(*(___ksymtab+sg_nents)) \
KEEP(*(___ksymtab+sg_nents_for_len)) \
KEEP(*(___ksymtab+sg_next)) \
KEEP(*(___ksymtab+sg_scsi_ioctl)) \
KEEP(*(___ksymtab+sha1_finup_arm)) \
KEEP(*(___ksymtab+sha1_update_arm)) \
KEEP(*(___ksymtab+sha_init)) \
KEEP(*(___ksymtab+shash_ahash_finup)) \
KEEP(*(___ksymtab+shash_ahash_update)) \
KEEP(*(___ksymtab+shash_free_instance)) \
KEEP(*(___ksymtab+shash_register_instance)) \
KEEP(*(___ksymtab+sha_transform)) \
KEEP(*(___ksymtab+shmem_file_setup)) \
KEEP(*(___ksymtab+should_remove_suid)) \
KEEP(*(___ksymtab+shrink_dcache_parent)) \
KEEP(*(___ksymtab+si_alp_clock)) \
KEEP(*(___ksymtab+si_attach)) \
KEEP(*(___ksymtab+si_btc_enable_chipcontrol)) \
KEEP(*(___ksymtab+si_btcgpiowar)) \
KEEP(*(___ksymtab+si_btcombo_43228_war)) \
KEEP(*(___ksymtab+si_btcombo_p250_4313_war)) \
KEEP(*(___ksymtab+si_ccreg)) \
KEEP(*(___ksymtab+si_chipcontrl_btshd0_4331)) \
KEEP(*(___ksymtab+si_chipcontrl_epa4331)) \
KEEP(*(___ksymtab+si_chipcontrl_epa4331_wowl)) \
KEEP(*(___ksymtab+si_chipcontrl_srom4360)) \
KEEP(*(___ksymtab+si_clkctl_cc)) \
KEEP(*(___ksymtab+si_clkctl_fast_pwrup_delay)) \
KEEP(*(___ksymtab+si_clkctl_init)) \
KEEP(*(___ksymtab+si_clkctl_xtal)) \
KEEP(*(___ksymtab+si_clk_pmu_htavail_set)) \
KEEP(*(___ksymtab+si_clock)) \
KEEP(*(___ksymtab+si_clock_rate)) \
KEEP(*(___ksymtab+si_core_cflags)) \
KEEP(*(___ksymtab+si_core_cflags_wo)) \
KEEP(*(___ksymtab+si_core_disable)) \
KEEP(*(___ksymtab+si_coreid)) \
KEEP(*(___ksymtab+si_coreidx)) \
KEEP(*(___ksymtab+si_corereg)) \
KEEP(*(___ksymtab+si_corereg_addr)) \
KEEP(*(___ksymtab+si_corereg_ifup)) \
KEEP(*(___ksymtab+si_coreregs)) \
KEEP(*(___ksymtab+si_corereg_unit_ifup)) \
KEEP(*(___ksymtab+si_core_reset)) \
KEEP(*(___ksymtab+si_corerev)) \
KEEP(*(___ksymtab+si_core_sflags)) \
KEEP(*(___ksymtab+si_coreunit)) \
KEEP(*(___ksymtab+si_deregister_intr_callback)) \
KEEP(*(___ksymtab+si_detach)) \
KEEP(*(___ksymtab+si_deviceremoved)) \
KEEP(*(___ksymtab+si_epa_4313war)) \
KEEP(*(___ksymtab+si_fabid)) \
KEEP(*(___ksymtab+si_force_islanding)) \
KEEP(*(___ksymtab+si_gci_chipcontrol)) \
KEEP(*(___ksymtab+si_gci_enable_gpio)) \
KEEP(*(___ksymtab+si_gci_preinit_upd_indirect)) \
KEEP(*(___ksymtab+si_get_sromctl)) \
KEEP(*(___ksymtab+si_gpiocontrol)) \
KEEP(*(___ksymtab+si_gpioin)) \
KEEP(*(___ksymtab+si_gpiointmask)) \
KEEP(*(___ksymtab+si_gpiointpolarity)) \
KEEP(*(___ksymtab+si_gpioled)) \
KEEP(*(___ksymtab+si_gpioout)) \
KEEP(*(___ksymtab+si_gpioout2)) \
KEEP(*(___ksymtab+si_gpioouten)) \
KEEP(*(___ksymtab+si_gpioouten2)) \
KEEP(*(___ksymtab+si_gpiopull)) \
KEEP(*(___ksymtab+si_gpiosetcore)) \
KEEP(*(___ksymtab+si_gpiotimerval)) \
KEEP(*(___ksymtab+sigprocmask)) \
KEEP(*(___ksymtab+si_iscoreup)) \
KEEP(*(___ksymtab+si_is_sprom_available)) \
KEEP(*(___ksymtab+si_is_sprom_enabled)) \
KEEP(*(___ksymtab+si_kattach)) \
KEEP(*(___ksymtab+si_ldo_war)) \
KEEP(*(___ksymtab+si_lowpwr_opt)) \
KEEP(*(___ksymtab+si_mac_clk)) \
KEEP(*(___ksymtab+si_meminfo)) \
KEEP(*(___ksymtab+simple_attr_open)) \
KEEP(*(___ksymtab+simple_attr_read)) \
KEEP(*(___ksymtab+simple_attr_release)) \
KEEP(*(___ksymtab+simple_attr_write)) \
KEEP(*(___ksymtab+simple_dir_inode_operations)) \
KEEP(*(___ksymtab+simple_dir_operations)) \
KEEP(*(___ksymtab+simple_empty)) \
KEEP(*(___ksymtab+simple_fill_super)) \
KEEP(*(___ksymtab+simple_follow_link)) \
KEEP(*(___ksymtab+simple_lookup)) \
KEEP(*(___ksymtab+simple_open)) \
KEEP(*(___ksymtab+simple_pin_fs)) \
KEEP(*(___ksymtab+simple_read_from_buffer)) \
KEEP(*(___ksymtab+simple_release_fs)) \
KEEP(*(___ksymtab+simple_statfs)) \
KEEP(*(___ksymtab+simple_strtoul)) \
KEEP(*(___ksymtab+simple_strtoull)) \
KEEP(*(___ksymtab+simple_write_end)) \
KEEP(*(___ksymtab+single_open)) \
KEEP(*(___ksymtab+single_open_net)) \
KEEP(*(___ksymtab+single_open_size)) \
KEEP(*(___ksymtab+single_release)) \
KEEP(*(___ksymtab+single_release_net)) \
KEEP(*(___ksymtab+si_osh)) \
KEEP(*(___ksymtab+si_pci_down)) \
KEEP(*(___ksymtab+si_pcieclkreq)) \
KEEP(*(___ksymtab+si_pcie_configspace_cache)) \
KEEP(*(___ksymtab+si_pcie_configspace_restore)) \
KEEP(*(___ksymtab+si_pciedev_crwlpciegen2)) \
KEEP(*(___ksymtab+si_pciedev_reg_pm_clk_period)) \
KEEP(*(___ksymtab+si_pcie_get_L1substate)) \
KEEP(*(___ksymtab+si_pcie_get_request_size)) \
KEEP(*(___ksymtab+si_pcie_hw_LTR_war)) \
KEEP(*(___ksymtab+si_pcielcreg)) \
KEEP(*(___ksymtab+si_pcieltrenable)) \
KEEP(*(___ksymtab+si_pcie_ltr_war)) \
KEEP(*(___ksymtab+si_pcieobffenable)) \
KEEP(*(___ksymtab+si_pcie_power_save_enable)) \
KEEP(*(___ksymtab+si_pciereg)) \
KEEP(*(___ksymtab+si_pcieserdesreg)) \
KEEP(*(___ksymtab+si_pcie_set_ctrlreg)) \
KEEP(*(___ksymtab+si_pcie_set_L1substate)) \
KEEP(*(___ksymtab+si_pcie_set_maxpayload_size)) \
KEEP(*(___ksymtab+si_pcie_set_request_size)) \
KEEP(*(___ksymtab+si_pcie_war_ovr_update)) \
KEEP(*(___ksymtab+si_pci_fixcfg)) \
KEEP(*(___ksymtab+si_pci_setup)) \
KEEP(*(___ksymtab+si_pci_sleep)) \
KEEP(*(___ksymtab+si_pci_up)) \
KEEP(*(___ksymtab+si_pci_war16165)) \
KEEP(*(___ksymtab+si_pcmcia_init)) \
KEEP(*(___ksymtab+si_pmu_chipcontrol)) \
KEEP(*(___ksymtab+si_pmu_chip_init)) \
KEEP(*(___ksymtab+si_pmu_fast_pwrup_delay)) \
KEEP(*(___ksymtab+si_pmu_gband_spurwar)) \
KEEP(*(___ksymtab+si_pmu_get_bb_vcofreq)) \
KEEP(*(___ksymtab+si_pmu_is_autoresetphyclk_disabled)) \
KEEP(*(___ksymtab+si_pmu_pllcontrol)) \
KEEP(*(___ksymtab+si_pmu_pllupd)) \
KEEP(*(___ksymtab+si_pmu_radio_enable)) \
KEEP(*(___ksymtab+si_pmu_regcontrol)) \
KEEP(*(___ksymtab+si_pmu_res_init)) \
KEEP(*(___ksymtab+si_pmu_res_minmax_update)) \
KEEP(*(___ksymtab+si_pmu_rfldo)) \
KEEP(*(___ksymtab+si_pmu_set_ldo_voltage)) \
KEEP(*(___ksymtab+si_pmu_si_clock)) \
KEEP(*(___ksymtab+si_pmu_slow_clk_reinit)) \
KEEP(*(___ksymtab+si_pmu_spuravoid)) \
KEEP(*(___ksymtab+si_pmu_spuravoid_isdone)) \
KEEP(*(___ksymtab+si_pmu_switch_on_PARLDO)) \
KEEP(*(___ksymtab+si_pmu_synth_pwrsw_4313_war)) \
KEEP(*(___ksymtab+si_pmu_update_pllcontrol)) \
KEEP(*(___ksymtab+si_read_pmu_autopll)) \
KEEP(*(___ksymtab+si_register_intr_callback)) \
KEEP(*(___ksymtab+si_restore_core)) \
KEEP(*(___ksymtab+si_seci_init)) \
KEEP(*(___ksymtab+si_setcore)) \
KEEP(*(___ksymtab+si_setcoreidx)) \
KEEP(*(___ksymtab+si_set_sromctl)) \
KEEP(*(___ksymtab+si_sprom_enable)) \
KEEP(*(___ksymtab+si_switch_core)) \
KEEP(*(___ksymtab+si_update_macclk_mul_fact)) \
KEEP(*(___ksymtab+si_update_masks)) \
KEEP(*(___ksymtab+si_watchdog)) \
KEEP(*(___ksymtab+si_watchdog_ms)) \
KEEP(*(___ksymtab+si_watchdog_msticks)) \
KEEP(*(___ksymtab+sk_alloc)) \
KEEP(*(___ksymtab+__sk_attach_filter)) \
KEEP(*(___ksymtab+skb_abort_seq_read)) \
KEEP(*(___ksymtab+skb_append_datato_frags)) \
KEEP(*(___ksymtab+__skb_checksum)) \
KEEP(*(___ksymtab+skb_checksum)) \
KEEP(*(___ksymtab+__skb_checksum_complete)) \
KEEP(*(___ksymtab+__skb_checksum_complete_head)) \
KEEP(*(___ksymtab+skb_checksum_help)) \
KEEP(*(___ksymtab+skb_checksum_setup)) \
KEEP(*(___ksymtab+skb_checksum_trimmed)) \
KEEP(*(___ksymtab+skb_clone)) \
KEEP(*(___ksymtab+skb_clone_sk)) \
KEEP(*(___ksymtab+skb_complete_tx_timestamp)) \
KEEP(*(___ksymtab+skb_complete_wifi_ack)) \
KEEP(*(___ksymtab+skb_copy)) \
KEEP(*(___ksymtab+skb_copy_and_csum_bits)) \
KEEP(*(___ksymtab+skb_copy_and_csum_datagram_msg)) \
KEEP(*(___ksymtab+skb_copy_and_csum_dev)) \
KEEP(*(___ksymtab+skb_copy_bits)) \
KEEP(*(___ksymtab+skb_copy_datagram_from_iter)) \
KEEP(*(___ksymtab+skb_copy_datagram_iter)) \
KEEP(*(___ksymtab+skb_copy_expand)) \
KEEP(*(___ksymtab+skb_copy_ubufs)) \
KEEP(*(___ksymtab+skb_cow_data)) \
KEEP(*(___ksymtab+skb_dequeue)) \
KEEP(*(___ksymtab+skb_dequeue_tail)) \
KEEP(*(___ksymtab+__skb_flow_dissect)) \
KEEP(*(___ksymtab+__skb_flow_get_ports)) \
KEEP(*(___ksymtab+skb_free_datagram)) \
KEEP(*(___ksymtab+skb_free_datagram_locked)) \
KEEP(*(___ksymtab+__skb_get_hash)) \
KEEP(*(___ksymtab+__skb_get_hash_flowi4)) \
KEEP(*(___ksymtab+__skb_get_hash_flowi6)) \
KEEP(*(___ksymtab+__skb_get_hash_symmetric)) \
KEEP(*(___ksymtab+__skb_gro_checksum_complete)) \
KEEP(*(___ksymtab+__skb_gso_segment)) \
KEEP(*(___ksymtab+skb_gso_transport_seglen)) \
KEEP(*(___ksymtab+skb_kill_datagram)) \
KEEP(*(___ksymtab+skb_make_writable)) \
KEEP(*(___ksymtab+skb_morph)) \
KEEP(*(___ksymtab+skb_partial_csum_set)) \
KEEP(*(___ksymtab+skb_prepare_seq_read)) \
KEEP(*(___ksymtab+skb_pull)) \
KEEP(*(___ksymtab+skb_pull_rcsum)) \
KEEP(*(___ksymtab+skb_push)) \
KEEP(*(___ksymtab+skb_put)) \
KEEP(*(___ksymtab+skb_queue_head)) \
KEEP(*(___ksymtab+skb_queue_purge)) \
KEEP(*(___ksymtab+skb_queue_tail)) \
KEEP(*(___ksymtab+skb_realloc_headroom)) \
KEEP(*(___ksymtab+__skb_recv_datagram)) \
KEEP(*(___ksymtab+skb_recv_datagram)) \
KEEP(*(___ksymtab+skb_restore_cb)) \
KEEP(*(___ksymtab+skb_save_cb)) \
KEEP(*(___ksymtab+skb_scrub_packet)) \
KEEP(*(___ksymtab+skb_seq_read)) \
KEEP(*(___ksymtab+skb_set_owner_w)) \
KEEP(*(___ksymtab+skb_split)) \
KEEP(*(___ksymtab+skb_store_bits)) \
KEEP(*(___ksymtab+skb_to_sgvec)) \
KEEP(*(___ksymtab+skb_to_sgvec_nomark)) \
KEEP(*(___ksymtab+skb_trim)) \
KEEP(*(___ksymtab+skb_try_coalesce)) \
KEEP(*(___ksymtab+__skb_tstamp_tx)) \
KEEP(*(___ksymtab+skb_tstamp_tx)) \
KEEP(*(___ksymtab+skb_tx_error)) \
KEEP(*(___ksymtab+skb_unlink)) \
KEEP(*(___ksymtab+__skb_warn_lro_forwarding)) \
KEEP(*(___ksymtab+sk_capable)) \
KEEP(*(___ksymtab+skcipher_geniv_alloc)) \
KEEP(*(___ksymtab+skcipher_geniv_exit)) \
KEEP(*(___ksymtab+skcipher_geniv_free)) \
KEEP(*(___ksymtab+skcipher_geniv_init)) \
KEEP(*(___ksymtab+sk_common_release)) \
KEEP(*(___ksymtab+__sk_detach_filter)) \
KEEP(*(___ksymtab+__sk_dst_check)) \
KEEP(*(___ksymtab+sk_dst_check)) \
KEEP(*(___ksymtab+sk_filter_trim_cap)) \
KEEP(*(___ksymtab+sk_free)) \
KEEP(*(___ksymtab+skip_spaces)) \
KEEP(*(___ksymtab+sk_mc_loop)) \
KEEP(*(___ksymtab+__sk_mem_schedule)) \
KEEP(*(___ksymtab+sk_net_capable)) \
KEEP(*(___ksymtab+sk_ns_capable)) \
KEEP(*(___ksymtab+sk_page_frag_refill)) \
KEEP(*(___ksymtab+sk_prot_clear_portaddr_nulls)) \
KEEP(*(___ksymtab+__sk_receive_skb)) \
KEEP(*(___ksymtab+sk_send_sigurg)) \
KEEP(*(___ksymtab+sk_setup_caps)) \
KEEP(*(___ksymtab+smpboot_update_cpumask_percpu_thread)) \
KEEP(*(___ksymtab+snmp_fold_field)) \
KEEP(*(___ksymtab+snmp_fold_field64)) \
KEEP(*(___ksymtab+snmp_get_cpu_field64)) \
KEEP(*(___ksymtab+snprintf)) \
KEEP(*(___ksymtab+sock_alloc_send_pskb)) \
KEEP(*(___ksymtab+sock_alloc_send_skb)) \
KEEP(*(___ksymtab+sock_common_getsockopt)) \
KEEP(*(___ksymtab+sock_common_recvmsg)) \
KEEP(*(___ksymtab+sock_common_setsockopt)) \
KEEP(*(___ksymtab+__sock_create)) \
KEEP(*(___ksymtab+sock_create_kern)) \
KEEP(*(___ksymtab+sock_dequeue_err_skb)) \
KEEP(*(___ksymtab+sock_edemux)) \
KEEP(*(___ksymtab+sockfd_lookup)) \
KEEP(*(___ksymtab+sock_get_timestamp)) \
KEEP(*(___ksymtab+sock_get_timestampns)) \
KEEP(*(___ksymtab+sock_i_ino)) \
KEEP(*(___ksymtab+sock_init_data)) \
KEEP(*(___ksymtab+sock_i_uid)) \
KEEP(*(___ksymtab+sock_kfree_s)) \
KEEP(*(___ksymtab+sock_kmalloc)) \
KEEP(*(___ksymtab+sock_kzfree_s)) \
KEEP(*(___ksymtab+sock_no_accept)) \
KEEP(*(___ksymtab+sock_no_bind)) \
KEEP(*(___ksymtab+sock_no_getsockopt)) \
KEEP(*(___ksymtab+sock_no_listen)) \
KEEP(*(___ksymtab+sock_no_mmap)) \
KEEP(*(___ksymtab+sock_no_poll)) \
KEEP(*(___ksymtab+sock_no_recvmsg)) \
KEEP(*(___ksymtab+sock_no_sendmsg)) \
KEEP(*(___ksymtab+sock_no_sendpage)) \
KEEP(*(___ksymtab+sock_no_setsockopt)) \
KEEP(*(___ksymtab+sock_no_shutdown)) \
KEEP(*(___ksymtab+sock_no_socketpair)) \
KEEP(*(___ksymtab+sock_prot_inuse_add)) \
KEEP(*(___ksymtab+sock_prot_inuse_get)) \
KEEP(*(___ksymtab+sock_queue_err_skb)) \
KEEP(*(___ksymtab+sock_queue_rcv_skb)) \
KEEP(*(___ksymtab+sock_recv_errqueue)) \
KEEP(*(___ksymtab+__sock_recv_timestamp)) \
KEEP(*(___ksymtab+__sock_recv_ts_and_drops)) \
KEEP(*(___ksymtab+__sock_recv_wifi_status)) \
KEEP(*(___ksymtab+sock_register)) \
KEEP(*(___ksymtab+sock_release)) \
KEEP(*(___ksymtab+sock_rfree)) \
KEEP(*(___ksymtab+__sock_tx_timestamp)) \
KEEP(*(___ksymtab+sock_unregister)) \
KEEP(*(___ksymtab+sock_wfree)) \
KEEP(*(___ksymtab+sock_wmalloc)) \
KEEP(*(___ksymtab+sort)) \
KEEP(*(___ksymtab+spi_alloc_master)) \
KEEP(*(___ksymtab+spi_async)) \
KEEP(*(___ksymtab+spi_async_locked)) \
KEEP(*(___ksymtab+spi_get_device_id)) \
KEEP(*(___ksymtab+spi_register_master)) \
KEEP(*(___ksymtab+spi_setup)) \
KEEP(*(___ksymtab+spi_sync)) \
KEEP(*(___ksymtab+spi_sync_locked)) \
KEEP(*(___ksymtab+spi_unregister_master)) \
KEEP(*(___ksymtab+spi_write_then_read)) \
KEEP(*(___ksymtab+sprintf)) \
KEEP(*(___ksymtab+srcu_barrier)) \
KEEP(*(___ksymtab+srcu_batches_completed)) \
KEEP(*(___ksymtab+srom_read)) \
KEEP(*(___ksymtab+sscanf)) \
KEEP(*(___ksymtab+static_key_slow_inc)) \
KEEP(*(___ksymtab+stp_proto_register)) \
KEEP(*(___ksymtab+stp_proto_unregister)) \
KEEP(*(___ksymtab+strcasecmp)) \
KEEP(*(___ksymtab+strcat)) \
KEEP(*(___ksymtab+strchr)) \
KEEP(*(___ksymtab+strchrnul)) \
KEEP(*(___ksymtab+strcmp)) \
KEEP(*(___ksymtab+strcpy)) \
KEEP(*(___ksymtab+strcspn)) \
KEEP(*(___ksymtab+stream_open)) \
KEEP(*(___ksymtab+string_get_size)) \
KEEP(*(___ksymtab+strlcpy)) \
KEEP(*(___ksymtab+strlen)) \
KEEP(*(___ksymtab+strlen_user)) \
KEEP(*(___ksymtab+strncasecmp)) \
KEEP(*(___ksymtab+strncat)) \
KEEP(*(___ksymtab+strnchr)) \
KEEP(*(___ksymtab+strncmp)) \
KEEP(*(___ksymtab+strncpy)) \
KEEP(*(___ksymtab+strncpy_from_user)) \
KEEP(*(___ksymtab+strndup_user)) \
KEEP(*(___ksymtab+strnlen)) \
KEEP(*(___ksymtab+strnlen_user)) \
KEEP(*(___ksymtab+strpbrk)) \
KEEP(*(___ksymtab+strrchr)) \
KEEP(*(___ksymtab+strreplace)) \
KEEP(*(___ksymtab+strscpy)) \
KEEP(*(___ksymtab+strsep)) \
KEEP(*(___ksymtab+strspn)) \
KEEP(*(___ksymtab+strstr)) \
KEEP(*(___ksymtab+_submit_bh)) \
KEEP(*(___ksymtab+submit_bh)) \
KEEP(*(___ksymtab+submit_bio)) \
KEEP(*(___ksymtab+submit_bio_wait)) \
KEEP(*(___ksymtab+__sw_hweight32)) \
KEEP(*(___ksymtab+swiotlb_dma_mapping_error)) \
KEEP(*(___ksymtab+swiotlb_dma_supported)) \
KEEP(*(___ksymtab+sync_blockdev)) \
KEEP(*(___ksymtab+__sync_dirty_buffer)) \
KEEP(*(___ksymtab+sync_dirty_buffer)) \
KEEP(*(___ksymtab+sync_filesystem)) \
KEEP(*(___ksymtab+synchronize_irq)) \
KEEP(*(___ksymtab+synchronize_net)) \
KEEP(*(___ksymtab+synchronize_sched)) \
KEEP(*(___ksymtab+synchronize_sched_expedited)) \
KEEP(*(___ksymtab+sync_inode_metadata)) \
KEEP(*(___ksymtab+sync_mapping_buffers)) \
KEEP(*(___ksymtab+sysctl_ip_default_ttl)) \
KEEP(*(___ksymtab+sysctl_ip_early_demux)) \
KEEP(*(___ksymtab+sysctl_optmem_max)) \
KEEP(*(___ksymtab+sysctl_rmem_max)) \
KEEP(*(___ksymtab+sysctl_tcp_adv_win_scale)) \
KEEP(*(___ksymtab+sysctl_tcp_mem)) \
KEEP(*(___ksymtab+sysctl_tcp_notsent_lowat)) \
KEEP(*(___ksymtab+sysctl_tcp_rmem)) \
KEEP(*(___ksymtab+sysctl_tcp_syncookies)) \
KEEP(*(___ksymtab+sysctl_tcp_wmem)) \
KEEP(*(___ksymtab+sysctl_udp_mem)) \
KEEP(*(___ksymtab+sysctl_udp_rmem_min)) \
KEEP(*(___ksymtab+sysctl_udp_wmem_min)) \
KEEP(*(___ksymtab+sysctl_vfs_cache_pressure)) \
KEEP(*(___ksymtab+sysctl_wmem_max)) \
KEEP(*(___ksymtab+sys_dup)) \
KEEP(*(___ksymtab+sysfs_add_file_to_group)) \
KEEP(*(___ksymtab+sysfs_add_link_to_group)) \
KEEP(*(___ksymtab+sysfs_break_active_protection)) \
KEEP(*(___ksymtab+sysfs_create_file_ns)) \
KEEP(*(___ksymtab+sysfs_create_group)) \
KEEP(*(___ksymtab+sysfs_create_groups)) \
KEEP(*(___ksymtab+sysfs_create_link)) \
KEEP(*(___ksymtab+sysfs_create_mount_point)) \
KEEP(*(___ksymtab+sysfs_merge_group)) \
KEEP(*(___ksymtab+sysfs_remove_file_from_group)) \
KEEP(*(___ksymtab+sysfs_remove_file_ns)) \
KEEP(*(___ksymtab+sysfs_remove_group)) \
KEEP(*(___ksymtab+sysfs_remove_groups)) \
KEEP(*(___ksymtab+sysfs_remove_link)) \
KEEP(*(___ksymtab+sysfs_remove_link_from_group)) \
KEEP(*(___ksymtab+sysfs_remove_mount_point)) \
KEEP(*(___ksymtab+sysfs_streq)) \
KEEP(*(___ksymtab+sysfs_unbreak_active_protection)) \
KEEP(*(___ksymtab+sysfs_unmerge_group)) \
KEEP(*(___ksymtab+sysfs_update_group)) \
KEEP(*(___ksymtab+system_freezable_wq)) \
KEEP(*(___ksymtab+system_long_wq)) \
KEEP(*(___ksymtab+system_power_efficient_wq)) \
KEEP(*(___ksymtab+system_state)) \
KEEP(*(___ksymtab+system_wq)) \
KEEP(*(___ksymtab+sys_tz)) \
KEEP(*(___ksymtab+tag_pages_for_writeback)) \
KEEP(*(___ksymtab+task_active_pid_ns)) \
KEEP(*(___ksymtab+__tasklet_hi_schedule)) \
KEEP(*(___ksymtab+__tasklet_hi_schedule_first)) \
KEEP(*(___ksymtab+tasklet_hrtimer_init)) \
KEEP(*(___ksymtab+tasklet_init)) \
KEEP(*(___ksymtab+tasklet_kill)) \
KEEP(*(___ksymtab+__tasklet_schedule)) \
KEEP(*(___ksymtab+__task_pid_nr_ns)) \
KEEP(*(___ksymtab+tcf_hash_cleanup)) \
KEEP(*(___ksymtab+tcp_ca_get_key_by_name)) \
KEEP(*(___ksymtab+tcp_ca_openreq_child)) \
KEEP(*(___ksymtab+tcp_check_req)) \
KEEP(*(___ksymtab+tcp_child_process)) \
KEEP(*(___ksymtab+tcp_close)) \
KEEP(*(___ksymtab+tcp_connect)) \
KEEP(*(___ksymtab+tcp_conn_request)) \
KEEP(*(___ksymtab+tcp_create_openreq_child)) \
KEEP(*(___ksymtab+tcp_death_row)) \
KEEP(*(___ksymtab+tcp_disconnect)) \
KEEP(*(___ksymtab+tcp_done)) \
KEEP(*(___ksymtab+tcp_enter_memory_pressure)) \
KEEP(*(___ksymtab+tcp_fetch_timewait_stamp)) \
KEEP(*(___ksymtab+tcp_filter)) \
KEEP(*(___ksymtab+tcp_get_cookie_sock)) \
KEEP(*(___ksymtab+tcp_getsockopt)) \
KEEP(*(___ksymtab+tcp_gro_complete)) \
KEEP(*(___ksymtab+tcp_hashinfo)) \
KEEP(*(___ksymtab+tcp_initialize_rcv_mss)) \
KEEP(*(___ksymtab+tcp_init_sock)) \
KEEP(*(___ksymtab+tcp_ioctl)) \
KEEP(*(___ksymtab+tcp_make_synack)) \
KEEP(*(___ksymtab+tcp_memory_allocated)) \
KEEP(*(___ksymtab+tcp_memory_pressure)) \
KEEP(*(___ksymtab+tcp_mtup_init)) \
KEEP(*(___ksymtab+tcp_orphan_count)) \
KEEP(*(___ksymtab+tcp_parse_options)) \
KEEP(*(___ksymtab+tcp_poll)) \
KEEP(*(___ksymtab+tcp_prequeue)) \
KEEP(*(___ksymtab+tcp_proc_register)) \
KEEP(*(___ksymtab+tcp_proc_unregister)) \
KEEP(*(___ksymtab+tcp_prot)) \
KEEP(*(___ksymtab+tcp_rcv_established)) \
KEEP(*(___ksymtab+tcp_rcv_state_process)) \
KEEP(*(___ksymtab+tcp_recvmsg)) \
KEEP(*(___ksymtab+tcp_release_cb)) \
KEEP(*(___ksymtab+tcp_req_err)) \
KEEP(*(___ksymtab+tcp_rtx_synack)) \
KEEP(*(___ksymtab+tcp_select_initial_window)) \
KEEP(*(___ksymtab+tcp_sendmsg)) \
KEEP(*(___ksymtab+tcp_sendpage)) \
KEEP(*(___ksymtab+tcp_seq_open)) \
KEEP(*(___ksymtab+tcp_setsockopt)) \
KEEP(*(___ksymtab+tcp_set_state)) \
KEEP(*(___ksymtab+tcp_shutdown)) \
KEEP(*(___ksymtab+tcp_simple_retransmit)) \
KEEP(*(___ksymtab+tcp_sockets_allocated)) \
KEEP(*(___ksymtab+tcp_splice_read)) \
KEEP(*(___ksymtab+tcp_syn_ack_timeout)) \
KEEP(*(___ksymtab+tcp_sync_mss)) \
KEEP(*(___ksymtab+tcp_timewait_state_process)) \
KEEP(*(___ksymtab+tcp_twsk_destructor)) \
KEEP(*(___ksymtab+tcp_twsk_unique)) \
KEEP(*(___ksymtab+tcp_v4_connect)) \
KEEP(*(___ksymtab+tcp_v4_conn_request)) \
KEEP(*(___ksymtab+tcp_v4_destroy_sock)) \
KEEP(*(___ksymtab+tcp_v4_do_rcv)) \
KEEP(*(___ksymtab+tcp_v4_mtu_reduced)) \
KEEP(*(___ksymtab+tcp_v4_send_check)) \
KEEP(*(___ksymtab+tcp_v4_syn_recv_sock)) \
KEEP(*(___ksymtab+_test_and_clear_bit)) \
KEEP(*(___ksymtab+_test_and_set_bit)) \
KEEP(*(___ksymtab+__test_set_page_writeback)) \
KEEP(*(___ksymtab+thaw_super)) \
KEEP(*(___ksymtab+timespec64_to_jiffies)) \
KEEP(*(___ksymtab+time_to_tm)) \
KEEP(*(___ksymtab+timeval_to_jiffies)) \
KEEP(*(___ksymtab+totalram_pages)) \
KEEP(*(___ksymtab+touch_atime)) \
KEEP(*(___ksymtab+transport_add_device)) \
KEEP(*(___ksymtab+transport_class_unregister)) \
KEEP(*(___ksymtab+transport_configure_device)) \
KEEP(*(___ksymtab+transport_destroy_device)) \
KEEP(*(___ksymtab+transport_remove_device)) \
KEEP(*(___ksymtab+transport_setup_device)) \
KEEP(*(___ksymtab+truncate_inode_pages)) \
KEEP(*(___ksymtab+truncate_inode_pages_final)) \
KEEP(*(___ksymtab+truncate_inode_pages_range)) \
KEEP(*(___ksymtab+truncate_pagecache)) \
KEEP(*(___ksymtab+truncate_pagecache_range)) \
KEEP(*(___ksymtab+truncate_setsize)) \
KEEP(*(___ksymtab+try_module_get)) \
KEEP(*(___ksymtab+try_to_del_timer_sync)) \
KEEP(*(___ksymtab+try_to_free_buffers)) \
KEEP(*(___ksymtab+try_to_release_page)) \
KEEP(*(___ksymtab+try_to_writeback_inodes_sb)) \
KEEP(*(___ksymtab+try_to_writeback_inodes_sb_nr)) \
KEEP(*(___ksymtab+try_wait_for_completion)) \
KEEP(*(___ksymtab+__tty_alloc_driver)) \
KEEP(*(___ksymtab+tty_buffer_request_room)) \
KEEP(*(___ksymtab+tty_encode_baud_rate)) \
KEEP(*(___ksymtab+tty_flip_buffer_push)) \
KEEP(*(___ksymtab+tty_hangup)) \
KEEP(*(___ksymtab+tty_hung_up_p)) \
KEEP(*(___ksymtab+__tty_insert_flip_char)) \
KEEP(*(___ksymtab+tty_insert_flip_string_fixed_flag)) \
KEEP(*(___ksymtab+tty_kref_put)) \
KEEP(*(___ksymtab+tty_ldisc_deref)) \
KEEP(*(___ksymtab+tty_ldisc_ref)) \
KEEP(*(___ksymtab+tty_ldisc_ref_wait)) \
KEEP(*(___ksymtab+tty_port_close)) \
KEEP(*(___ksymtab+tty_port_close_end)) \
KEEP(*(___ksymtab+tty_port_close_start)) \
KEEP(*(___ksymtab+tty_port_destroy)) \
KEEP(*(___ksymtab+tty_port_hangup)) \
KEEP(*(___ksymtab+tty_port_init)) \
KEEP(*(___ksymtab+tty_port_install)) \
KEEP(*(___ksymtab+tty_port_open)) \
KEEP(*(___ksymtab+tty_port_put)) \
KEEP(*(___ksymtab+tty_port_register_device)) \
KEEP(*(___ksymtab+tty_port_register_device_attr)) \
KEEP(*(___ksymtab+tty_port_tty_get)) \
KEEP(*(___ksymtab+tty_port_tty_hangup)) \
KEEP(*(___ksymtab+tty_port_tty_set)) \
KEEP(*(___ksymtab+tty_port_tty_wakeup)) \
KEEP(*(___ksymtab+tty_register_device)) \
KEEP(*(___ksymtab+tty_register_device_attr)) \
KEEP(*(___ksymtab+tty_register_driver)) \
KEEP(*(___ksymtab+tty_schedule_flip)) \
KEEP(*(___ksymtab+tty_set_operations)) \
KEEP(*(___ksymtab+tty_standard_install)) \
KEEP(*(___ksymtab+tty_std_termios)) \
KEEP(*(___ksymtab+tty_termios_baud_rate)) \
KEEP(*(___ksymtab+tty_termios_copy_hw)) \
KEEP(*(___ksymtab+tty_termios_encode_baud_rate)) \
KEEP(*(___ksymtab+tty_termios_hw_change)) \
KEEP(*(___ksymtab+tty_unregister_device)) \
KEEP(*(___ksymtab+tty_unregister_driver)) \
KEEP(*(___ksymtab+tty_vhangup)) \
KEEP(*(___ksymtab+tty_wakeup)) \
KEEP(*(___ksymtab+uart_update_timeout)) \
KEEP(*(___ksymtab+uart_write_wakeup)) \
KEEP(*(___ksymtab+__udp4_lib_lookup)) \
KEEP(*(___ksymtab+udp4_lib_lookup)) \
KEEP(*(___ksymtab+udp6_csum_init)) \
KEEP(*(___ksymtab+udp6_set_csum)) \
KEEP(*(___ksymtab+udp_add_offload)) \
KEEP(*(___ksymtab+udp_del_offload)) \
KEEP(*(___ksymtab+udp_disconnect)) \
KEEP(*(___ksymtab+udp_encap_enable)) \
KEEP(*(___ksymtab+udp_flow_hashrnd)) \
KEEP(*(___ksymtab+udp_flush_pending_frames)) \
KEEP(*(___ksymtab+udp_ioctl)) \
KEEP(*(___ksymtab+udp_lib_get_port)) \
KEEP(*(___ksymtab+udp_lib_getsockopt)) \
KEEP(*(___ksymtab+udp_lib_rehash)) \
KEEP(*(___ksymtab+udp_lib_setsockopt)) \
KEEP(*(___ksymtab+udp_lib_unhash)) \
KEEP(*(___ksymtab+udplite_prot)) \
KEEP(*(___ksymtab+udplite_table)) \
KEEP(*(___ksymtab+udp_memory_allocated)) \
KEEP(*(___ksymtab+udp_poll)) \
KEEP(*(___ksymtab+udp_proc_register)) \
KEEP(*(___ksymtab+udp_proc_unregister)) \
KEEP(*(___ksymtab+udp_prot)) \
KEEP(*(___ksymtab+udp_push_pending_frames)) \
KEEP(*(___ksymtab+udp_sendmsg)) \
KEEP(*(___ksymtab+udp_seq_open)) \
KEEP(*(___ksymtab+udp_set_csum)) \
KEEP(*(___ksymtab+udp_table)) \
KEEP(*(___ksymtab+unload_nls)) \
KEEP(*(___ksymtab+unlock_buffer)) \
KEEP(*(___ksymtab+unlock_new_inode)) \
KEEP(*(___ksymtab+unlock_page)) \
KEEP(*(___ksymtab+unlock_two_nondirectories)) \
KEEP(*(___ksymtab+unmap_underlying_metadata)) \
KEEP(*(___ksymtab+unregister_blkdev)) \
KEEP(*(___ksymtab+__unregister_chrdev)) \
KEEP(*(___ksymtab+unregister_chrdev_region)) \
KEEP(*(___ksymtab+unregister_filesystem)) \
KEEP(*(___ksymtab+unregister_inetaddr_notifier)) \
KEEP(*(___ksymtab+unregister_key_type)) \
KEEP(*(___ksymtab+unregister_netdev)) \
KEEP(*(___ksymtab+unregister_netdevice_many)) \
KEEP(*(___ksymtab+unregister_netdevice_notifier)) \
KEEP(*(___ksymtab+unregister_netdevice_queue)) \
KEEP(*(___ksymtab+unregister_net_sysctl_table)) \
KEEP(*(___ksymtab+unregister_nls)) \
KEEP(*(___ksymtab+unregister_pernet_device)) \
KEEP(*(___ksymtab+unregister_pernet_subsys)) \
KEEP(*(___ksymtab+unregister_pppox_proto)) \
KEEP(*(___ksymtab+unregister_qdisc)) \
KEEP(*(___ksymtab+unregister_reboot_notifier)) \
KEEP(*(___ksymtab+unregister_shrinker)) \
KEEP(*(___ksymtab+unregister_sysctl_table)) \
KEEP(*(___ksymtab+up)) \
KEEP(*(___ksymtab+up_read)) \
KEEP(*(___ksymtab+up_write)) \
KEEP(*(___ksymtab+usb_amd_dev_put)) \
KEEP(*(___ksymtab+usb_amd_find_chipset_info)) \
KEEP(*(___ksymtab+usb_amd_hang_symptom_quirk)) \
KEEP(*(___ksymtab+usb_amd_prefetch_quirk)) \
KEEP(*(___ksymtab+usb_amd_quirk_pll_disable)) \
KEEP(*(___ksymtab+usb_amd_quirk_pll_enable)) \
KEEP(*(___ksymtab+usb_disable_xhci_ports)) \
KEEP(*(___ksymtab+usb_hcd_amd_remote_wakeup_quirk)) \
KEEP(*(___ksymtab+__usecs_to_jiffies)) \
KEEP(*(___ksymtab+user_destroy)) \
KEEP(*(___ksymtab+user_read)) \
KEEP(*(___ksymtab+user_revoke)) \
KEEP(*(___ksymtab+user_update)) \
KEEP(*(___ksymtab+usleep_range)) \
KEEP(*(___ksymtab+utf16s_to_utf8s)) \
KEEP(*(___ksymtab+utf32_to_utf8)) \
KEEP(*(___ksymtab+utf8s_to_utf16s)) \
KEEP(*(___ksymtab+utf8_to_utf32)) \
KEEP(*(___ksymtab+validate_xmit_skb_list)) \
KEEP(*(___ksymtab+valid_bcmerror)) \
KEEP(*(___ksymtab+vfree)) \
KEEP(*(___ksymtab+vfs_fsync_range)) \
KEEP(*(___ksymtab+vfs_path_lookup)) \
KEEP(*(___ksymtab+vfs_setpos)) \
KEEP(*(___ksymtab+vlan_dev_vlan_id)) \
KEEP(*(___ksymtab+vlan_dev_vlan_proto)) \
KEEP(*(___ksymtab+__vlan_find_dev_deep_rcu)) \
KEEP(*(___ksymtab+vlan_uses_dev)) \
KEEP(*(___ksymtab+vlan_vid_add)) \
KEEP(*(___ksymtab+vlan_vid_del)) \
KEEP(*(___ksymtab+vlan_vids_add_by_dev)) \
KEEP(*(___ksymtab+vlan_vids_del_by_dev)) \
KEEP(*(___ksymtab+vmalloc)) \
KEEP(*(___ksymtab+__vmalloc)) \
KEEP(*(___ksymtab+vmalloc_32)) \
KEEP(*(___ksymtab+vmalloc_32_user)) \
KEEP(*(___ksymtab+vmalloc_node)) \
KEEP(*(___ksymtab+vmalloc_to_page)) \
KEEP(*(___ksymtab+vmalloc_to_pfn)) \
KEEP(*(___ksymtab+vmalloc_user)) \
KEEP(*(___ksymtab+vprintk)) \
KEEP(*(___ksymtab+vprintk_default)) \
KEEP(*(___ksymtab+vprintk_emit)) \
KEEP(*(___ksymtab+vscnprintf)) \
KEEP(*(___ksymtab+vsnprintf)) \
KEEP(*(___ksymtab+vsprintf)) \
KEEP(*(___ksymtab+vsscanf)) \
KEEP(*(___ksymtab+vzalloc)) \
KEEP(*(___ksymtab+vzalloc_node)) \
KEEP(*(___ksymtab+wait_for_completion)) \
KEEP(*(___ksymtab+wait_for_completion_interruptible)) \
KEEP(*(___ksymtab+wait_for_completion_interruptible_timeout)) \
KEEP(*(___ksymtab+wait_for_completion_io)) \
KEEP(*(___ksymtab+wait_for_completion_io_timeout)) \
KEEP(*(___ksymtab+wait_for_completion_killable)) \
KEEP(*(___ksymtab+wait_for_completion_killable_timeout)) \
KEEP(*(___ksymtab+wait_for_completion_timeout)) \
KEEP(*(___ksymtab+wait_for_stable_page)) \
KEEP(*(___ksymtab+__wait_on_buffer)) \
KEEP(*(___ksymtab+wait_on_page_bit)) \
KEEP(*(___ksymtab+wait_on_page_bit_killable_timeout)) \
KEEP(*(___ksymtab+wake_bit_function)) \
KEEP(*(___ksymtab+__wake_up)) \
KEEP(*(___ksymtab+wake_up_all_idle_cpus)) \
KEEP(*(___ksymtab+wake_up_atomic_t)) \
KEEP(*(___ksymtab+__wake_up_bit)) \
KEEP(*(___ksymtab+wake_up_bit)) \
KEEP(*(___ksymtab+__wake_up_locked)) \
KEEP(*(___ksymtab+__wake_up_locked_key)) \
KEEP(*(___ksymtab+wake_up_process)) \
KEEP(*(___ksymtab+wake_up_state)) \
KEEP(*(___ksymtab+__wake_up_sync)) \
KEEP(*(___ksymtab+__wake_up_sync_key)) \
KEEP(*(___ksymtab+watchdog_register_device)) \
KEEP(*(___ksymtab+watchdog_unregister_device)) \
KEEP(*(___ksymtab+wb_writeout_inc)) \
KEEP(*(___ksymtab+wireless_send_event)) \
KEEP(*(___ksymtab+wireless_spy_update)) \
KEEP(*(___ksymtab+workqueue_congested)) \
KEEP(*(___ksymtab+workqueue_set_max_active)) \
KEEP(*(___ksymtab+write_cache_pages)) \
KEEP(*(___ksymtab+write_dirty_buffer)) \
KEEP(*(___ksymtab+write_inode_now)) \
KEEP(*(___ksymtab+__ww_mutex_lock)) \
KEEP(*(___ksymtab+__ww_mutex_lock_interruptible)) \
KEEP(*(___ksymtab+ww_mutex_unlock)) \
KEEP(*(___ksymtab+__xfrm_decode_session)) \
KEEP(*(___ksymtab+xfrm_dst_ifdown)) \
KEEP(*(___ksymtab+__xfrm_init_state)) \
KEEP(*(___ksymtab+xfrm_init_state)) \
KEEP(*(___ksymtab+xfrm_inner_extract_output)) \
KEEP(*(___ksymtab+xfrm_input)) \
KEEP(*(___ksymtab+xfrm_input_register_afinfo)) \
KEEP(*(___ksymtab+xfrm_input_resume)) \
KEEP(*(___ksymtab+xfrm_input_unregister_afinfo)) \
KEEP(*(___ksymtab+xfrm_local_error)) \
KEEP(*(___ksymtab+xfrm_lookup)) \
KEEP(*(___ksymtab+xfrm_lookup_route)) \
KEEP(*(___ksymtab+xfrm_output)) \
KEEP(*(___ksymtab+xfrm_output_resume)) \
KEEP(*(___ksymtab+__xfrm_policy_check)) \
KEEP(*(___ksymtab+xfrm_policy_destroy)) \
KEEP(*(___ksymtab+xfrm_policy_register_afinfo)) \
KEEP(*(___ksymtab+xfrm_policy_unregister_afinfo)) \
KEEP(*(___ksymtab+xfrm_prepare_input)) \
KEEP(*(___ksymtab+xfrm_register_mode)) \
KEEP(*(___ksymtab+xfrm_register_type)) \
KEEP(*(___ksymtab+__xfrm_route_forward)) \
KEEP(*(___ksymtab+xfrm_state_alloc)) \
KEEP(*(___ksymtab+xfrm_state_check_expire)) \
KEEP(*(___ksymtab+xfrm_state_delete_tunnel)) \
KEEP(*(___ksymtab+__xfrm_state_destroy)) \
KEEP(*(___ksymtab+xfrm_state_insert)) \
KEEP(*(___ksymtab+xfrm_state_lookup)) \
KEEP(*(___ksymtab+xfrm_state_lookup_byaddr)) \
KEEP(*(___ksymtab+xfrm_state_lookup_byspi)) \
KEEP(*(___ksymtab+xfrm_state_register_afinfo)) \
KEEP(*(___ksymtab+xfrm_state_unregister_afinfo)) \
KEEP(*(___ksymtab+xfrm_state_update)) \
KEEP(*(___ksymtab+xfrm_unregister_mode)) \
KEEP(*(___ksymtab+xfrm_unregister_type)) \
KEEP(*(___ksymtab+xfrm_user_policy)) \
KEEP(*(___ksymtab+xmit_recursion)) \
KEEP(*(___ksymtab+xt_alloc_entry_offsets)) \
KEEP(*(___ksymtab+xt_alloc_table_info)) \
KEEP(*(___ksymtab+xt_check_entry_offsets)) \
KEEP(*(___ksymtab+xt_check_match)) \
KEEP(*(___ksymtab+xt_check_target)) \
KEEP(*(___ksymtab+xt_copy_counters_from_user)) \
KEEP(*(___ksymtab+xt_find_jump_offset)) \
KEEP(*(___ksymtab+xt_find_revision)) \
KEEP(*(___ksymtab+xt_find_table_lock)) \
KEEP(*(___ksymtab+xt_free_table_info)) \
KEEP(*(___ksymtab+xt_hook_link)) \
KEEP(*(___ksymtab+xt_hook_unlink)) \
KEEP(*(___ksymtab+xtnu_skb_make_writable)) \
KEEP(*(___ksymtab+xt_percpu_counter_alloc)) \
KEEP(*(___ksymtab+xt_percpu_counter_free)) \
KEEP(*(___ksymtab+xt_proto_fini)) \
KEEP(*(___ksymtab+xt_proto_init)) \
KEEP(*(___ksymtab+xt_recseq)) \
KEEP(*(___ksymtab+xt_register_match)) \
KEEP(*(___ksymtab+xt_register_matches)) \
KEEP(*(___ksymtab+xt_register_table)) \
KEEP(*(___ksymtab+xt_register_target)) \
KEEP(*(___ksymtab+xt_register_targets)) \
KEEP(*(___ksymtab+xt_replace_table)) \
KEEP(*(___ksymtab+xt_request_find_match)) \
KEEP(*(___ksymtab+xt_request_find_target)) \
KEEP(*(___ksymtab+xt_table_unlock)) \
KEEP(*(___ksymtab+xt_tee_enabled)) \
KEEP(*(___ksymtab+xt_unregister_match)) \
KEEP(*(___ksymtab+xt_unregister_matches)) \
KEEP(*(___ksymtab+xt_unregister_table)) \
KEEP(*(___ksymtab+xt_unregister_target)) \
KEEP(*(___ksymtab+xt_unregister_targets)) \
KEEP(*(___ksymtab+yield)) \
KEEP(*(___ksymtab+yield_to)) \
KEEP(*(___ksymtab+zerocopy_sg_from_iter)) \
KEEP(*(___ksymtab+zlib_deflate)) \
KEEP(*(___ksymtab+zlib_deflateEnd)) \
KEEP(*(___ksymtab+zlib_deflateInit2)) \
KEEP(*(___ksymtab+zlib_deflateReset)) \
KEEP(*(___ksymtab+zlib_deflate_workspacesize)) \
KEEP(*(___ksymtab+zlib_inflate)) \
KEEP(*(___ksymtab+zlib_inflate_blob)) \
KEEP(*(___ksymtab+zlib_inflateEnd)) \
KEEP(*(___ksymtab+zlib_inflateIncomp)) \
KEEP(*(___ksymtab+zlib_inflateInit2)) \
KEEP(*(___ksymtab+zlib_inflateReset)) \
KEEP(*(___ksymtab+zlib_inflate_workspacesize)) \

#define SYMTAB_KEEP_GPL \
KEEP(*(___ksymtab_gpl+__ablkcipher_walk_complete)) \
KEEP(*(___ksymtab_gpl+ablkcipher_walk_done)) \
KEEP(*(___ksymtab_gpl+abort_exclusive_wait)) \
KEEP(*(___ksymtab_gpl+add_device_randomness)) \
KEEP(*(___ksymtab_gpl+add_disk)) \
KEEP(*(___ksymtab_gpl+add_disk_randomness)) \
KEEP(*(___ksymtab_gpl+add_interrupt_randomness)) \
KEEP(*(___ksymtab_gpl+add_random_ready_callback)) \
KEEP(*(___ksymtab_gpl+add_taint)) \
KEEP(*(___ksymtab_gpl+add_timer)) \
KEEP(*(___ksymtab_gpl+add_timer_on)) \
KEEP(*(___ksymtab_gpl+add_to_page_cache_locked)) \
KEEP(*(___ksymtab_gpl+add_to_page_cache_lru)) \
KEEP(*(___ksymtab_gpl+add_uevent_var)) \
KEEP(*(___ksymtab_gpl+add_wait_queue)) \
KEEP(*(___ksymtab_gpl+add_wait_queue_exclusive)) \
KEEP(*(___ksymtab_gpl+__aeabi_idiv)) \
KEEP(*(___ksymtab_gpl+__aeabi_idivmod)) \
KEEP(*(___ksymtab_gpl+__aeabi_uidiv)) \
KEEP(*(___ksymtab_gpl+__aeabi_uidivmod)) \
KEEP(*(___ksymtab_gpl+aead_exit_geniv)) \
KEEP(*(___ksymtab_gpl+aead_geniv_alloc)) \
KEEP(*(___ksymtab_gpl+aead_geniv_free)) \
KEEP(*(___ksymtab_gpl+aead_init_geniv)) \
KEEP(*(___ksymtab_gpl+aead_register_instance)) \
KEEP(*(___ksymtab_gpl+ahash_attr_alg)) \
KEEP(*(___ksymtab_gpl+ai_iscoreup)) \
KEEP(*(___ksymtab_gpl+alloc_buffer_head)) \
KEEP(*(___ksymtab_gpl+alloc_disk)) \
KEEP(*(___ksymtab_gpl+alloc_disk_node)) \
KEEP(*(___ksymtab_gpl+alloc_etherdev_mqs)) \
KEEP(*(___ksymtab_gpl+alloc_netdev_mqs)) \
KEEP(*(___ksymtab_gpl+__alloc_pages_nodemask)) \
KEEP(*(___ksymtab_gpl+__alloc_percpu)) \
KEEP(*(___ksymtab_gpl+__alloc_percpu_gfp)) \
KEEP(*(___ksymtab_gpl+__alloc_skb)) \
KEEP(*(___ksymtab_gpl+__alloc_workqueue_key)) \
KEEP(*(___ksymtab_gpl+anon_transport_class_unregister)) \
KEEP(*(___ksymtab_gpl+arm_copy_from_user)) \
KEEP(*(___ksymtab_gpl+arm_copy_to_user)) \
KEEP(*(___ksymtab_gpl+arm_delay_ops)) \
KEEP(*(___ksymtab_gpl+arm_dma_ops)) \
KEEP(*(___ksymtab_gpl+arm_heavy_mb)) \
KEEP(*(___ksymtab_gpl+__arm_ioremap_pfn)) \
KEEP(*(___ksymtab_gpl+arp_create)) \
KEEP(*(___ksymtab_gpl+arp_send)) \
KEEP(*(___ksymtab_gpl+arp_xmit)) \
KEEP(*(___ksymtab_gpl+async_schedule)) \
KEEP(*(___ksymtab_gpl+async_schedule_domain)) \
KEEP(*(___ksymtab_gpl+async_synchronize_full_domain)) \
KEEP(*(___ksymtab_gpl+async_unregister_domain)) \
KEEP(*(___ksymtab_gpl+_atomic_dec_and_lock)) \
KEEP(*(___ksymtab_gpl+atomic_dec_and_mutex_lock)) \
KEEP(*(___ksymtab_gpl+autoremove_wake_function)) \
KEEP(*(___ksymtab_gpl+bcm947xx_sih)) \
KEEP(*(___ksymtab_gpl+bcm947xx_sih_lock)) \
KEEP(*(___ksymtab_gpl+bcm_atoi)) \
KEEP(*(___ksymtab_gpl+bcm_atoipv4)) \
KEEP(*(___ksymtab_gpl+bcm_binit)) \
KEEP(*(___ksymtab_gpl+bcm_bitcount)) \
KEEP(*(___ksymtab_gpl+bcm_bprhex)) \
KEEP(*(___ksymtab_gpl+bcm_bprintf)) \
KEEP(*(___ksymtab_gpl+bcm_brev_str)) \
KEEP(*(___ksymtab_gpl+bcm_copy_tlv)) \
KEEP(*(___ksymtab_gpl+bcm_copy_tlv_safe)) \
KEEP(*(___ksymtab_gpl+bcm_ctype)) \
KEEP(*(___ksymtab_gpl+bcmerrorstr)) \
KEEP(*(___ksymtab_gpl+bcm_ether_atoe)) \
KEEP(*(___ksymtab_gpl+bcm_ether_ntoa)) \
KEEP(*(___ksymtab_gpl+bcm_find_vendor_ie)) \
KEEP(*(___ksymtab_gpl+bcm_iovar_lencheck)) \
KEEP(*(___ksymtab_gpl+bcm_iovar_lookup)) \
KEEP(*(___ksymtab_gpl+bcm_ip_ntoa)) \
KEEP(*(___ksymtab_gpl+bcm_mkiovar)) \
KEEP(*(___ksymtab_gpl+bcm_mwbmap_alloc)) \
KEEP(*(___ksymtab_gpl+bcm_mwbmap_audit)) \
KEEP(*(___ksymtab_gpl+bcm_mwbmap_fini)) \
KEEP(*(___ksymtab_gpl+bcm_mwbmap_force)) \
KEEP(*(___ksymtab_gpl+bcm_mwbmap_free)) \
KEEP(*(___ksymtab_gpl+bcm_mwbmap_free_cnt)) \
KEEP(*(___ksymtab_gpl+bcm_mwbmap_init)) \
KEEP(*(___ksymtab_gpl+bcm_mwbmap_isfree)) \
KEEP(*(___ksymtab_gpl+bcm_mwbmap_show)) \
KEEP(*(___ksymtab_gpl+bcm_mw_to_qdbm)) \
KEEP(*(___ksymtab_gpl+bcm_next_tlv)) \
KEEP(*(___ksymtab_gpl+bcm_parse_tlvs)) \
KEEP(*(___ksymtab_gpl+bcm_parse_tlvs_min_bodylen)) \
KEEP(*(___ksymtab_gpl+bcm_qdbm_to_mw)) \
KEEP(*(___ksymtab_gpl+bcm_robo_attach)) \
KEEP(*(___ksymtab_gpl+bcm_robo_config_vlan)) \
KEEP(*(___ksymtab_gpl+bcm_robo_detach)) \
KEEP(*(___ksymtab_gpl+bcm_robo_enable_device)) \
KEEP(*(___ksymtab_gpl+bcm_robo_enable_switch)) \
KEEP(*(___ksymtab_gpl+bcmstrcat)) \
KEEP(*(___ksymtab_gpl+bcmstrncat)) \
KEEP(*(___ksymtab_gpl+bcmstrstr)) \
KEEP(*(___ksymtab_gpl+bcm_strtoul)) \
KEEP(*(___ksymtab_gpl+bcm_uint64_divide)) \
KEEP(*(___ksymtab_gpl+bcm_uint64_multiple_add)) \
KEEP(*(___ksymtab_gpl+bcm_write_tlv)) \
KEEP(*(___ksymtab_gpl+bcm_write_tlv_safe)) \
KEEP(*(___ksymtab_gpl+bdevname)) \
KEEP(*(___ksymtab_gpl+__bdevname)) \
KEEP(*(___ksymtab_gpl+bdev_read_only)) \
KEEP(*(___ksymtab_gpl+bdi_destroy)) \
KEEP(*(___ksymtab_gpl+bdi_init)) \
KEEP(*(___ksymtab_gpl+bdi_register)) \
KEEP(*(___ksymtab_gpl+bdi_register_dev)) \
KEEP(*(___ksymtab_gpl+bdi_register_owner)) \
KEEP(*(___ksymtab_gpl+bdi_set_max_ratio)) \
KEEP(*(___ksymtab_gpl+bdi_setup_and_register)) \
KEEP(*(___ksymtab_gpl+bdput)) \
KEEP(*(___ksymtab_gpl+__bforget)) \
KEEP(*(___ksymtab_gpl+bh_submit_read)) \
KEEP(*(___ksymtab_gpl+bh_uptodate_or_lock)) \
KEEP(*(___ksymtab_gpl+bio_add_page)) \
KEEP(*(___ksymtab_gpl+bio_alloc_bioset)) \
KEEP(*(___ksymtab_gpl+bio_flush_dcache_pages)) \
KEEP(*(___ksymtab_gpl+bio_put)) \
KEEP(*(___ksymtab_gpl+bitmap_clear)) \
KEEP(*(___ksymtab_gpl+__bitmap_shift_left)) \
KEEP(*(___ksymtab_gpl+__bitmap_weight)) \
KEEP(*(___ksymtab_gpl+bit_wait)) \
KEEP(*(___ksymtab_gpl+bit_wait_io)) \
KEEP(*(___ksymtab_gpl+bit_wait_io_timeout)) \
KEEP(*(___ksymtab_gpl+bit_waitqueue)) \
KEEP(*(___ksymtab_gpl+bit_wait_timeout)) \
KEEP(*(___ksymtab_gpl+blk_add_request_payload)) \
KEEP(*(___ksymtab_gpl+blkcipher_walk_done)) \
KEEP(*(___ksymtab_gpl+blkcipher_walk_virt_block)) \
KEEP(*(___ksymtab_gpl+blk_cleanup_queue)) \
KEEP(*(___ksymtab_gpl+blk_complete_request)) \
KEEP(*(___ksymtab_gpl+blk_delay_queue)) \
KEEP(*(___ksymtab_gpl+blkdev_get_by_dev)) \
KEEP(*(___ksymtab_gpl+blkdev_issue_discard)) \
KEEP(*(___ksymtab_gpl+blkdev_issue_flush)) \
KEEP(*(___ksymtab_gpl+blkdev_issue_zeroout)) \
KEEP(*(___ksymtab_gpl+blkdev_put)) \
KEEP(*(___ksymtab_gpl+blk_dump_rq_flags)) \
KEEP(*(___ksymtab_gpl+__blk_end_request_all)) \
KEEP(*(___ksymtab_gpl+blk_end_request_all)) \
KEEP(*(___ksymtab_gpl+blk_execute_rq)) \
KEEP(*(___ksymtab_gpl+blk_execute_rq_nowait)) \
KEEP(*(___ksymtab_gpl+blk_finish_plug)) \
KEEP(*(___ksymtab_gpl+blk_finish_request)) \
KEEP(*(___ksymtab_gpl+blk_free_tags)) \
KEEP(*(___ksymtab_gpl+blk_get_backing_dev_info)) \
KEEP(*(___ksymtab_gpl+blk_get_queue)) \
KEEP(*(___ksymtab_gpl+blk_get_request)) \
KEEP(*(___ksymtab_gpl+blk_init_queue)) \
KEEP(*(___ksymtab_gpl+blk_init_queue_node)) \
KEEP(*(___ksymtab_gpl+blk_init_tags)) \
KEEP(*(___ksymtab_gpl+__blk_iopoll_complete)) \
KEEP(*(___ksymtab_gpl+blk_iopoll_complete)) \
KEEP(*(___ksymtab_gpl+blk_lookup_devt)) \
KEEP(*(___ksymtab_gpl+blk_max_low_pfn)) \
KEEP(*(___ksymtab_gpl+blk_mq_alloc_tag_set)) \
KEEP(*(___ksymtab_gpl+blk_mq_complete_request)) \
KEEP(*(___ksymtab_gpl+blk_mq_delay_queue)) \
KEEP(*(___ksymtab_gpl+__blk_mq_end_request)) \
KEEP(*(___ksymtab_gpl+blk_mq_free_tag_set)) \
KEEP(*(___ksymtab_gpl+blk_mq_freeze_queue)) \
KEEP(*(___ksymtab_gpl+blk_mq_freeze_queue_start)) \
KEEP(*(___ksymtab_gpl+blk_mq_init_queue)) \
KEEP(*(___ksymtab_gpl+blk_mq_kick_requeue_list)) \
KEEP(*(___ksymtab_gpl+blk_mq_map_queue)) \
KEEP(*(___ksymtab_gpl+blk_mq_requeue_request)) \
KEEP(*(___ksymtab_gpl+blk_mq_start_hw_queues)) \
KEEP(*(___ksymtab_gpl+blk_mq_start_request)) \
KEEP(*(___ksymtab_gpl+blk_mq_start_stopped_hw_queues)) \
KEEP(*(___ksymtab_gpl+blk_mq_stop_hw_queue)) \
KEEP(*(___ksymtab_gpl+blk_mq_stop_hw_queues)) \
KEEP(*(___ksymtab_gpl+blk_mq_unfreeze_queue)) \
KEEP(*(___ksymtab_gpl+blk_peek_request)) \
KEEP(*(___ksymtab_gpl+blk_put_queue)) \
KEEP(*(___ksymtab_gpl+__blk_put_request)) \
KEEP(*(___ksymtab_gpl+blk_put_request)) \
KEEP(*(___ksymtab_gpl+blk_queue_alignment_offset)) \
KEEP(*(___ksymtab_gpl+blk_queue_bounce_limit)) \
KEEP(*(___ksymtab_gpl+blk_queue_dma_alignment)) \
KEEP(*(___ksymtab_gpl+blk_queue_flush)) \
KEEP(*(___ksymtab_gpl+blk_queue_flush_queueable)) \
KEEP(*(___ksymtab_gpl+blk_queue_init_tags)) \
KEEP(*(___ksymtab_gpl+blk_queue_io_min)) \
KEEP(*(___ksymtab_gpl+blk_queue_lld_busy)) \
KEEP(*(___ksymtab_gpl+blk_queue_logical_block_size)) \
KEEP(*(___ksymtab_gpl+blk_queue_max_discard_sectors)) \
KEEP(*(___ksymtab_gpl+blk_queue_max_hw_sectors)) \
KEEP(*(___ksymtab_gpl+blk_queue_max_segments)) \
KEEP(*(___ksymtab_gpl+blk_queue_max_segment_size)) \
KEEP(*(___ksymtab_gpl+blk_queue_max_write_same_sectors)) \
KEEP(*(___ksymtab_gpl+blk_queue_physical_block_size)) \
KEEP(*(___ksymtab_gpl+blk_queue_prep_rq)) \
KEEP(*(___ksymtab_gpl+blk_queue_rq_timed_out)) \
KEEP(*(___ksymtab_gpl+blk_queue_rq_timeout)) \
KEEP(*(___ksymtab_gpl+blk_queue_segment_boundary)) \
KEEP(*(___ksymtab_gpl+blk_queue_softirq_done)) \
KEEP(*(___ksymtab_gpl+blk_queue_start_tag)) \
KEEP(*(___ksymtab_gpl+blk_queue_unprep_rq)) \
KEEP(*(___ksymtab_gpl+blk_queue_update_dma_alignment)) \
KEEP(*(___ksymtab_gpl+blk_queue_update_dma_pad)) \
KEEP(*(___ksymtab_gpl+blk_register_region)) \
KEEP(*(___ksymtab_gpl+blk_requeue_request)) \
KEEP(*(___ksymtab_gpl+blk_rq_err_bytes)) \
KEEP(*(___ksymtab_gpl+blk_rq_init)) \
KEEP(*(___ksymtab_gpl+blk_rq_map_kern)) \
KEEP(*(___ksymtab_gpl+blk_rq_map_sg)) \
KEEP(*(___ksymtab_gpl+blk_rq_map_user)) \
KEEP(*(___ksymtab_gpl+blk_rq_map_user_iov)) \
KEEP(*(___ksymtab_gpl+blk_rq_set_block_pc)) \
KEEP(*(___ksymtab_gpl+blk_rq_unmap_user)) \
KEEP(*(___ksymtab_gpl+__blk_run_queue)) \
KEEP(*(___ksymtab_gpl+blk_run_queue)) \
KEEP(*(___ksymtab_gpl+blk_run_queue_async)) \
KEEP(*(___ksymtab_gpl+__blk_run_queue_uncond)) \
KEEP(*(___ksymtab_gpl+blk_start_plug)) \
KEEP(*(___ksymtab_gpl+blk_start_queue)) \
KEEP(*(___ksymtab_gpl+blk_start_queue_async)) \
KEEP(*(___ksymtab_gpl+blk_start_request)) \
KEEP(*(___ksymtab_gpl+blk_stop_queue)) \
KEEP(*(___ksymtab_gpl+blk_unprep_request)) \
KEEP(*(___ksymtab_gpl+blk_unregister_region)) \
KEEP(*(___ksymtab_gpl+blk_update_request)) \
KEEP(*(___ksymtab_gpl+blk_verify_command)) \
KEEP(*(___ksymtab_gpl+block_commit_write)) \
KEEP(*(___ksymtab_gpl+__blockdev_direct_IO)) \
KEEP(*(___ksymtab_gpl+blockdev_superblock)) \
KEEP(*(___ksymtab_gpl+__blocking_notifier_call_chain)) \
KEEP(*(___ksymtab_gpl+blocking_notifier_call_chain)) \
KEEP(*(___ksymtab_gpl+blocking_notifier_chain_register)) \
KEEP(*(___ksymtab_gpl+blocking_notifier_chain_unregister)) \
KEEP(*(___ksymtab_gpl+block_invalidatepage)) \
KEEP(*(___ksymtab_gpl+block_is_partially_uptodate)) \
KEEP(*(___ksymtab_gpl+block_page_mkwrite)) \
KEEP(*(___ksymtab_gpl+block_read_full_page)) \
KEEP(*(___ksymtab_gpl+block_truncate_page)) \
KEEP(*(___ksymtab_gpl+__block_write_begin)) \
KEEP(*(___ksymtab_gpl+block_write_begin)) \
KEEP(*(___ksymtab_gpl+block_write_end)) \
KEEP(*(___ksymtab_gpl+block_write_full_page)) \
KEEP(*(___ksymtab_gpl+bmap)) \
KEEP(*(___ksymtab_gpl+br_dev_update_stats)) \
KEEP(*(___ksymtab_gpl+__breadahead)) \
KEEP(*(___ksymtab_gpl+__bread_gfp)) \
KEEP(*(___ksymtab_gpl+__break_lease)) \
KEEP(*(___ksymtab_gpl+__brelse)) \
KEEP(*(___ksymtab_gpl+brnf_call_ebtables)) \
KEEP(*(___ksymtab_gpl+br_should_route_hook)) \
KEEP(*(___ksymtab_gpl+bsearch)) \
KEEP(*(___ksymtab_gpl+bus_find_device)) \
KEEP(*(___ksymtab_gpl+bus_find_device_by_name)) \
KEEP(*(___ksymtab_gpl+bus_for_each_dev)) \
KEEP(*(___ksymtab_gpl+bus_get_device_klist)) \
KEEP(*(___ksymtab_gpl+bus_register)) \
KEEP(*(___ksymtab_gpl+bus_register_notifier)) \
KEEP(*(___ksymtab_gpl+bus_sort_breadthfirst)) \
KEEP(*(___ksymtab_gpl+bus_unregister)) \
KEEP(*(___ksymtab_gpl+bus_unregister_notifier)) \
KEEP(*(___ksymtab_gpl+call_netdevice_notifiers)) \
KEEP(*(___ksymtab_gpl+call_netevent_notifiers)) \
KEEP(*(___ksymtab_gpl+call_rcu_sched)) \
KEEP(*(___ksymtab_gpl+call_usermodehelper_setup)) \
KEEP(*(___ksymtab_gpl+cancel_delayed_work)) \
KEEP(*(___ksymtab_gpl+cancel_delayed_work_sync)) \
KEEP(*(___ksymtab_gpl+cancel_work_sync)) \
KEEP(*(___ksymtab_gpl+capable)) \
KEEP(*(___ksymtab_gpl+capable_wrt_inode_uidgid)) \
KEEP(*(___ksymtab_gpl+cdev_add)) \
KEEP(*(___ksymtab_gpl+cdev_alloc)) \
KEEP(*(___ksymtab_gpl+cdev_del)) \
KEEP(*(___ksymtab_gpl+cdev_device_add)) \
KEEP(*(___ksymtab_gpl+cdev_device_del)) \
KEEP(*(___ksymtab_gpl+cdev_init)) \
KEEP(*(___ksymtab_gpl+cfi_fixup)) \
KEEP(*(___ksymtab_gpl+check_disk_change)) \
KEEP(*(___ksymtab_gpl+__class_create)) \
KEEP(*(___ksymtab_gpl+class_destroy)) \
KEEP(*(___ksymtab_gpl+class_find_device)) \
KEEP(*(___ksymtab_gpl+class_interface_register)) \
KEEP(*(___ksymtab_gpl+class_interface_unregister)) \
KEEP(*(___ksymtab_gpl+__class_register)) \
KEEP(*(___ksymtab_gpl+class_unregister)) \
KEEP(*(___ksymtab_gpl+cleanup_srcu_struct)) \
KEEP(*(___ksymtab_gpl+_clear_bit)) \
KEEP(*(___ksymtab_gpl+clear_inode)) \
KEEP(*(___ksymtab_gpl+clear_nlink)) \
KEEP(*(___ksymtab_gpl+clear_page_dirty_for_io)) \
KEEP(*(___ksymtab_gpl+clear_wb_congested)) \
KEEP(*(___ksymtab_gpl+clk_disable)) \
KEEP(*(___ksymtab_gpl+clk_enable)) \
KEEP(*(___ksymtab_gpl+clk_get_rate)) \
KEEP(*(___ksymtab_gpl+clk_get_sys)) \
KEEP(*(___ksymtab_gpl+clk_put)) \
KEEP(*(___ksymtab_gpl+__clocksource_update_freq_scale)) \
KEEP(*(___ksymtab_gpl+clock_t_to_jiffies)) \
KEEP(*(___ksymtab_gpl+complete)) \
KEEP(*(___ksymtab_gpl+complete_all)) \
KEEP(*(___ksymtab_gpl+complete_and_exit)) \
KEEP(*(___ksymtab_gpl+complete_request_key)) \
KEEP(*(___ksymtab_gpl+_cond_resched)) \
KEEP(*(___ksymtab_gpl+__cond_resched_lock)) \
KEEP(*(___ksymtab_gpl+__cond_resched_softirq)) \
KEEP(*(___ksymtab_gpl+cond_synchronize_sched)) \
KEEP(*(___ksymtab_gpl+congestion_wait)) \
KEEP(*(___ksymtab_gpl+console_conditional_schedule)) \
KEEP(*(___ksymtab_gpl+consume_skb)) \
KEEP(*(___ksymtab_gpl+contig_page_data)) \
KEEP(*(___ksymtab_gpl+cont_write_begin)) \
KEEP(*(___ksymtab_gpl+cookie_ecn_ok)) \
KEEP(*(___ksymtab_gpl+cookie_timestamp_decode)) \
KEEP(*(___ksymtab_gpl+copy_from_iter)) \
KEEP(*(___ksymtab_gpl+copy_from_iter_nocache)) \
KEEP(*(___ksymtab_gpl+copy_page)) \
KEEP(*(___ksymtab_gpl+copy_page_from_iter)) \
KEEP(*(___ksymtab_gpl+copy_page_to_iter)) \
KEEP(*(___ksymtab_gpl+copy_to_iter)) \
KEEP(*(___ksymtab_gpl+cpu_device_create)) \
KEEP(*(___ksymtab_gpl+cpu_maps_update_begin)) \
KEEP(*(___ksymtab_gpl+cpu_maps_update_done)) \
KEEP(*(___ksymtab_gpl+cpu_online_mask)) \
KEEP(*(___ksymtab_gpl+cpu_possible_mask)) \
KEEP(*(___ksymtab_gpl+cpu_rmap_update)) \
KEEP(*(___ksymtab_gpl+cpu_up)) \
KEEP(*(___ksymtab_gpl+crc32_be)) \
KEEP(*(___ksymtab_gpl+crc32c)) \
KEEP(*(___ksymtab_gpl+__crc32c_le)) \
KEEP(*(___ksymtab_gpl+__crc32c_le_shift)) \
KEEP(*(___ksymtab_gpl+crc32_le)) \
KEEP(*(___ksymtab_gpl+crc32_le_shift)) \
KEEP(*(___ksymtab_gpl+create_empty_buffers)) \
KEEP(*(___ksymtab_gpl+crypto_ablkcipher_type)) \
KEEP(*(___ksymtab_gpl+crypto_aead_setauthsize)) \
KEEP(*(___ksymtab_gpl+crypto_aead_setkey)) \
KEEP(*(___ksymtab_gpl+crypto_ahash_digest)) \
KEEP(*(___ksymtab_gpl+crypto_ahash_finup)) \
KEEP(*(___ksymtab_gpl+crypto_ahash_setkey)) \
KEEP(*(___ksymtab_gpl+crypto_ahash_type)) \
KEEP(*(___ksymtab_gpl+crypto_alg_lookup)) \
KEEP(*(___ksymtab_gpl+crypto_alg_mod_lookup)) \
KEEP(*(___ksymtab_gpl+crypto_alloc_aead)) \
KEEP(*(___ksymtab_gpl+crypto_alloc_ahash)) \
KEEP(*(___ksymtab_gpl+crypto_alloc_base)) \
KEEP(*(___ksymtab_gpl+crypto_alloc_instance)) \
KEEP(*(___ksymtab_gpl+crypto_alloc_instance2)) \
KEEP(*(___ksymtab_gpl+crypto_alloc_rng)) \
KEEP(*(___ksymtab_gpl+crypto_alloc_shash)) \
KEEP(*(___ksymtab_gpl+crypto_attr_alg2)) \
KEEP(*(___ksymtab_gpl+crypto_attr_alg_name)) \
KEEP(*(___ksymtab_gpl+crypto_blkcipher_type)) \
KEEP(*(___ksymtab_gpl+crypto_check_attr_type)) \
KEEP(*(___ksymtab_gpl+crypto_default_rng)) \
KEEP(*(___ksymtab_gpl+crypto_destroy_tfm)) \
KEEP(*(___ksymtab_gpl+crypto_drop_spawn)) \
KEEP(*(___ksymtab_gpl+crypto_find_alg)) \
KEEP(*(___ksymtab_gpl+crypto_get_attr_type)) \
KEEP(*(___ksymtab_gpl+crypto_get_default_null_skcipher)) \
KEEP(*(___ksymtab_gpl+crypto_get_default_rng)) \
KEEP(*(___ksymtab_gpl+crypto_grab_aead)) \
KEEP(*(___ksymtab_gpl+crypto_grab_skcipher)) \
KEEP(*(___ksymtab_gpl+crypto_has_alg)) \
KEEP(*(___ksymtab_gpl+crypto_inc)) \
KEEP(*(___ksymtab_gpl+crypto_init_ahash_spawn)) \
KEEP(*(___ksymtab_gpl+crypto_init_spawn)) \
KEEP(*(___ksymtab_gpl+crypto_init_spawn2)) \
KEEP(*(___ksymtab_gpl+crypto_larval_lookup)) \
KEEP(*(___ksymtab_gpl+crypto_lookup_skcipher)) \
KEEP(*(___ksymtab_gpl+crypto_lookup_template)) \
KEEP(*(___ksymtab_gpl+__crypto_memneq)) \
KEEP(*(___ksymtab_gpl+crypto_mod_put)) \
KEEP(*(___ksymtab_gpl+crypto_put_default_null_skcipher)) \
KEEP(*(___ksymtab_gpl+crypto_put_default_rng)) \
KEEP(*(___ksymtab_gpl+crypto_register_alg)) \
KEEP(*(___ksymtab_gpl+crypto_register_algs)) \
KEEP(*(___ksymtab_gpl+crypto_register_instance)) \
KEEP(*(___ksymtab_gpl+crypto_register_rng)) \
KEEP(*(___ksymtab_gpl+crypto_register_rngs)) \
KEEP(*(___ksymtab_gpl+crypto_register_shash)) \
KEEP(*(___ksymtab_gpl+crypto_register_shashes)) \
KEEP(*(___ksymtab_gpl+crypto_register_template)) \
KEEP(*(___ksymtab_gpl+crypto_sha1_finup)) \
KEEP(*(___ksymtab_gpl+crypto_sha1_update)) \
KEEP(*(___ksymtab_gpl+crypto_sha256_arm_finup)) \
KEEP(*(___ksymtab_gpl+crypto_sha256_arm_update)) \
KEEP(*(___ksymtab_gpl+crypto_sha256_finup)) \
KEEP(*(___ksymtab_gpl+crypto_sha256_update)) \
KEEP(*(___ksymtab_gpl+crypto_shash_final)) \
KEEP(*(___ksymtab_gpl+crypto_shash_finup)) \
KEEP(*(___ksymtab_gpl+crypto_shash_setkey)) \
KEEP(*(___ksymtab_gpl+crypto_shash_update)) \
KEEP(*(___ksymtab_gpl+crypto_spawn_tfm)) \
KEEP(*(___ksymtab_gpl+crypto_spawn_tfm2)) \
KEEP(*(___ksymtab_gpl+crypto_unregister_alg)) \
KEEP(*(___ksymtab_gpl+crypto_unregister_algs)) \
KEEP(*(___ksymtab_gpl+crypto_unregister_rng)) \
KEEP(*(___ksymtab_gpl+crypto_unregister_rngs)) \
KEEP(*(___ksymtab_gpl+crypto_unregister_shash)) \
KEEP(*(___ksymtab_gpl+crypto_unregister_shashes)) \
KEEP(*(___ksymtab_gpl+crypto_unregister_template)) \
KEEP(*(___ksymtab_gpl+crypto_xor)) \
KEEP(*(___ksymtab_gpl+csum_and_copy_from_iter)) \
KEEP(*(___ksymtab_gpl+csum_and_copy_to_iter)) \
KEEP(*(___ksymtab_gpl+__csum_ipv6_magic)) \
KEEP(*(___ksymtab_gpl+csum_partial)) \
KEEP(*(___ksymtab_gpl+csum_partial_copy_from_user)) \
KEEP(*(___ksymtab_gpl+csum_partial_copy_nocheck)) \
KEEP(*(___ksymtab_gpl+_ctype)) \
KEEP(*(___ksymtab_gpl+current_fs_time)) \
KEEP(*(___ksymtab_gpl+current_kernel_time64)) \
KEEP(*(___ksymtab_gpl+current_umask)) \
KEEP(*(___ksymtab_gpl+d_alloc)) \
KEEP(*(___ksymtab_gpl+d_alloc_name)) \
KEEP(*(___ksymtab_gpl+d_alloc_pseudo)) \
KEEP(*(___ksymtab_gpl+datagram_poll)) \
KEEP(*(___ksymtab_gpl+d_delete)) \
KEEP(*(___ksymtab_gpl+__d_drop)) \
KEEP(*(___ksymtab_gpl+d_drop)) \
KEEP(*(___ksymtab_gpl+deactivate_locked_super)) \
KEEP(*(___ksymtab_gpl+deactivate_super)) \
KEEP(*(___ksymtab_gpl+debugfs_create_bool)) \
KEEP(*(___ksymtab_gpl+debugfs_create_dir)) \
KEEP(*(___ksymtab_gpl+debugfs_create_file)) \
KEEP(*(___ksymtab_gpl+debugfs_create_file_size)) \
KEEP(*(___ksymtab_gpl+debugfs_read_file_bool)) \
KEEP(*(___ksymtab_gpl+debugfs_remove)) \
KEEP(*(___ksymtab_gpl+debugfs_remove_recursive)) \
KEEP(*(___ksymtab_gpl+debugfs_rename)) \
KEEP(*(___ksymtab_gpl+debugfs_write_file_bool)) \
KEEP(*(___ksymtab_gpl+__dec_zone_page_state)) \
KEEP(*(___ksymtab_gpl+dec_zone_page_state)) \
KEEP(*(___ksymtab_gpl+default_llseek)) \
KEEP(*(___ksymtab_gpl+default_wake_function)) \
KEEP(*(___ksymtab_gpl+delayed_work_timer_fn)) \
KEEP(*(___ksymtab_gpl+del_gendisk)) \
KEEP(*(___ksymtab_gpl+del_random_ready_callback)) \
KEEP(*(___ksymtab_gpl+del_timer)) \
KEEP(*(___ksymtab_gpl+del_timer_sync)) \
KEEP(*(___ksymtab_gpl+dentry_unhash)) \
KEEP(*(___ksymtab_gpl+dentry_update_name_case)) \
KEEP(*(___ksymtab_gpl+dequeue_signal)) \
KEEP(*(___ksymtab_gpl+destroy_workqueue)) \
KEEP(*(___ksymtab_gpl+dev_add_pack)) \
KEEP(*(___ksymtab_gpl+dev_alloc_name)) \
KEEP(*(___ksymtab_gpl+dev_change_proto_down)) \
KEEP(*(___ksymtab_gpl+dev_close)) \
KEEP(*(___ksymtab_gpl+dev_close_many)) \
KEEP(*(___ksymtab_gpl+dev_crit)) \
KEEP(*(___ksymtab_gpl+dev_disable_lro)) \
KEEP(*(___ksymtab_gpl+dev_err)) \
KEEP(*(___ksymtab_gpl+__dev_forward_skb)) \
KEEP(*(___ksymtab_gpl+dev_forward_skb)) \
KEEP(*(___ksymtab_gpl+__dev_get_by_flags)) \
KEEP(*(___ksymtab_gpl+__dev_get_by_index)) \
KEEP(*(___ksymtab_gpl+dev_get_by_index)) \
KEEP(*(___ksymtab_gpl+dev_get_by_index_rcu)) \
KEEP(*(___ksymtab_gpl+__dev_get_by_name)) \
KEEP(*(___ksymtab_gpl+dev_get_by_name)) \
KEEP(*(___ksymtab_gpl+dev_get_by_name_rcu)) \
KEEP(*(___ksymtab_gpl+dev_get_flags)) \
KEEP(*(___ksymtab_gpl+dev_get_iflink)) \
KEEP(*(___ksymtab_gpl+dev_get_stats)) \
KEEP(*(___ksymtab_gpl+dev_get_valid_name)) \
KEEP(*(___ksymtab_gpl+dev_hard_start_xmit)) \
KEEP(*(___ksymtab_gpl+device_add)) \
KEEP(*(___ksymtab_gpl+device_add_property_set)) \
KEEP(*(___ksymtab_gpl+device_attach)) \
KEEP(*(___ksymtab_gpl+device_bind_driver)) \
KEEP(*(___ksymtab_gpl+device_create)) \
KEEP(*(___ksymtab_gpl+device_create_bin_file)) \
KEEP(*(___ksymtab_gpl+device_create_file)) \
KEEP(*(___ksymtab_gpl+device_create_vargs)) \
KEEP(*(___ksymtab_gpl+device_create_with_groups)) \
KEEP(*(___ksymtab_gpl+device_del)) \
KEEP(*(___ksymtab_gpl+device_destroy)) \
KEEP(*(___ksymtab_gpl+device_dma_supported)) \
KEEP(*(___ksymtab_gpl+device_for_each_child)) \
KEEP(*(___ksymtab_gpl+device_for_each_child_reverse)) \
KEEP(*(___ksymtab_gpl+device_initialize)) \
KEEP(*(___ksymtab_gpl+device_property_read_string)) \
KEEP(*(___ksymtab_gpl+device_property_read_string_array)) \
KEEP(*(___ksymtab_gpl+device_register)) \
KEEP(*(___ksymtab_gpl+device_release_driver)) \
KEEP(*(___ksymtab_gpl+device_remove_bin_file)) \
KEEP(*(___ksymtab_gpl+device_remove_file)) \
KEEP(*(___ksymtab_gpl+device_remove_file_self)) \
KEEP(*(___ksymtab_gpl+device_unregister)) \
KEEP(*(___ksymtab_gpl+_dev_info)) \
KEEP(*(___ksymtab_gpl+__dev_kfree_skb_any)) \
KEEP(*(___ksymtab_gpl+__dev_kfree_skb_irq)) \
KEEP(*(___ksymtab_gpl+dev_loopback_xmit)) \
KEEP(*(___ksymtab_gpl+dev_mc_add)) \
KEEP(*(___ksymtab_gpl+dev_mc_add_excl)) \
KEEP(*(___ksymtab_gpl+dev_mc_add_global)) \
KEEP(*(___ksymtab_gpl+dev_mc_del)) \
KEEP(*(___ksymtab_gpl+dev_mc_del_global)) \
KEEP(*(___ksymtab_gpl+dev_mc_flush)) \
KEEP(*(___ksymtab_gpl+devm_clk_get)) \
KEEP(*(___ksymtab_gpl+devm_clk_put)) \
KEEP(*(___ksymtab_gpl+dev_mc_sync)) \
KEEP(*(___ksymtab_gpl+dev_mc_sync_multiple)) \
KEEP(*(___ksymtab_gpl+dev_mc_unsync)) \
KEEP(*(___ksymtab_gpl+devm_free_irq)) \
KEEP(*(___ksymtab_gpl+devm_free_pages)) \
KEEP(*(___ksymtab_gpl+devm_get_free_pages)) \
KEEP(*(___ksymtab_gpl+devm_ioremap)) \
KEEP(*(___ksymtab_gpl+devm_ioremap_nocache)) \
KEEP(*(___ksymtab_gpl+devm_ioremap_resource)) \
KEEP(*(___ksymtab_gpl+devm_ioremap_wc)) \
KEEP(*(___ksymtab_gpl+devm_iounmap)) \
KEEP(*(___ksymtab_gpl+devm_kasprintf)) \
KEEP(*(___ksymtab_gpl+devm_kfree)) \
KEEP(*(___ksymtab_gpl+devm_kmalloc)) \
KEEP(*(___ksymtab_gpl+devm_kmemdup)) \
KEEP(*(___ksymtab_gpl+devm_kstrdup)) \
KEEP(*(___ksymtab_gpl+devm_kvasprintf)) \
KEEP(*(___ksymtab_gpl+devm_of_phy_get)) \
KEEP(*(___ksymtab_gpl+devm_of_phy_get_by_index)) \
KEEP(*(___ksymtab_gpl+devm_phy_get)) \
KEEP(*(___ksymtab_gpl+devm_phy_put)) \
KEEP(*(___ksymtab_gpl+devm_request_threaded_irq)) \
KEEP(*(___ksymtab_gpl+devm_spi_register_master)) \
KEEP(*(___ksymtab_gpl+dev_notice)) \
KEEP(*(___ksymtab_gpl+dev_open)) \
KEEP(*(___ksymtab_gpl+dev_printk)) \
KEEP(*(___ksymtab_gpl+dev_printk_emit)) \
KEEP(*(___ksymtab_gpl+dev_queue_xmit)) \
KEEP(*(___ksymtab_gpl+dev_queue_xmit_accel)) \
KEEP(*(___ksymtab_gpl+__dev_remove_pack)) \
KEEP(*(___ksymtab_gpl+dev_remove_pack)) \
KEEP(*(___ksymtab_gpl+devres_add)) \
KEEP(*(___ksymtab_gpl+devres_alloc_node)) \
KEEP(*(___ksymtab_gpl+devres_close_group)) \
KEEP(*(___ksymtab_gpl+devres_find)) \
KEEP(*(___ksymtab_gpl+devres_free)) \
KEEP(*(___ksymtab_gpl+devres_open_group)) \
KEEP(*(___ksymtab_gpl+devres_release_group)) \
KEEP(*(___ksymtab_gpl+devres_remove_group)) \
KEEP(*(___ksymtab_gpl+dev_set_allmulti)) \
KEEP(*(___ksymtab_gpl+dev_set_group)) \
KEEP(*(___ksymtab_gpl+dev_set_mac_address)) \
KEEP(*(___ksymtab_gpl+dev_set_mtu)) \
KEEP(*(___ksymtab_gpl+dev_set_name)) \
KEEP(*(___ksymtab_gpl+dev_set_promiscuity)) \
KEEP(*(___ksymtab_gpl+dev_trans_start)) \
KEEP(*(___ksymtab_gpl+dev_uc_flush)) \
KEEP(*(___ksymtab_gpl+dev_uc_sync)) \
KEEP(*(___ksymtab_gpl+dev_uc_sync_multiple)) \
KEEP(*(___ksymtab_gpl+dev_uc_unsync)) \
KEEP(*(___ksymtab_gpl+dev_valid_name)) \
KEEP(*(___ksymtab_gpl+dev_vprintk_emit)) \
KEEP(*(___ksymtab_gpl+dev_warn)) \
KEEP(*(___ksymtab_gpl+d_find_alias)) \
KEEP(*(___ksymtab_gpl+d_find_any_alias)) \
KEEP(*(___ksymtab_gpl+dget_parent)) \
KEEP(*(___ksymtab_gpl+d_hash_and_lookup)) \
KEEP(*(___ksymtab_gpl+d_instantiate)) \
KEEP(*(___ksymtab_gpl+d_instantiate_new)) \
KEEP(*(___ksymtab_gpl+d_instantiate_no_diralias)) \
KEEP(*(___ksymtab_gpl+d_instantiate_unique)) \
KEEP(*(___ksymtab_gpl+d_invalidate)) \
KEEP(*(___ksymtab_gpl+dirty_writeback_interval)) \
KEEP(*(___ksymtab_gpl+div64_u64)) \
KEEP(*(___ksymtab_gpl+div64_u64_rem)) \
KEEP(*(___ksymtab_gpl+d_lookup)) \
KEEP(*(___ksymtab_gpl+dma_addrwidth)) \
KEEP(*(___ksymtab_gpl+dma_alloc_from_coherent)) \
KEEP(*(___ksymtab_gpl+dma_attach)) \
KEEP(*(___ksymtab_gpl+d_make_root)) \
KEEP(*(___ksymtab_gpl+dma_mark_declared_memory_occupied)) \
KEEP(*(___ksymtab_gpl+dma_pool_alloc)) \
KEEP(*(___ksymtab_gpl+dma_pool_create)) \
KEEP(*(___ksymtab_gpl+dma_pool_destroy)) \
KEEP(*(___ksymtab_gpl+dma_pool_free)) \
KEEP(*(___ksymtab_gpl+dma_release_from_coherent)) \
KEEP(*(___ksymtab_gpl+dma_supported)) \
KEEP(*(___ksymtab_gpl+d_move)) \
KEEP(*(___ksymtab_gpl+do_4360_pcie2_war)) \
KEEP(*(___ksymtab_gpl+d_obtain_alias)) \
KEEP(*(___ksymtab_gpl+__do_div64)) \
KEEP(*(___ksymtab_gpl+__do_once_done)) \
KEEP(*(___ksymtab_gpl+__do_once_start)) \
KEEP(*(___ksymtab_gpl+down)) \
KEEP(*(___ksymtab_gpl+downgrade_write)) \
KEEP(*(___ksymtab_gpl+down_interruptible)) \
KEEP(*(___ksymtab_gpl+down_killable)) \
KEEP(*(___ksymtab_gpl+down_read)) \
KEEP(*(___ksymtab_gpl+down_read_trylock)) \
KEEP(*(___ksymtab_gpl+down_timeout)) \
KEEP(*(___ksymtab_gpl+down_trylock)) \
KEEP(*(___ksymtab_gpl+down_write)) \
KEEP(*(___ksymtab_gpl+down_write_trylock)) \
KEEP(*(___ksymtab_gpl+d_path)) \
KEEP(*(___ksymtab_gpl+dput)) \
KEEP(*(___ksymtab_gpl+dql_completed)) \
KEEP(*(___ksymtab_gpl+d_rehash)) \
KEEP(*(___ksymtab_gpl+driver_attach)) \
KEEP(*(___ksymtab_gpl+driver_create_file)) \
KEEP(*(___ksymtab_gpl+driver_register)) \
KEEP(*(___ksymtab_gpl+driver_remove_file)) \
KEEP(*(___ksymtab_gpl+driver_unregister)) \
KEEP(*(___ksymtab_gpl+drop_nlink)) \
KEEP(*(___ksymtab_gpl+drop_super)) \
KEEP(*(___ksymtab_gpl+d_splice_alias)) \
KEEP(*(___ksymtab_gpl+dst_alloc)) \
KEEP(*(___ksymtab_gpl+dst_cache_destroy)) \
KEEP(*(___ksymtab_gpl+dst_cache_get)) \
KEEP(*(___ksymtab_gpl+dst_cache_get_ip4)) \
KEEP(*(___ksymtab_gpl+dst_cache_get_ip6)) \
KEEP(*(___ksymtab_gpl+dst_cache_init)) \
KEEP(*(___ksymtab_gpl+dst_cache_set_ip4)) \
KEEP(*(___ksymtab_gpl+dst_cache_set_ip6)) \
KEEP(*(___ksymtab_gpl+dst_cow_metrics_generic)) \
KEEP(*(___ksymtab_gpl+dst_destroy)) \
KEEP(*(___ksymtab_gpl+__dst_destroy_metrics_generic)) \
KEEP(*(___ksymtab_gpl+dst_discard_out)) \
KEEP(*(___ksymtab_gpl+__dst_free)) \
KEEP(*(___ksymtab_gpl+dst_release)) \
KEEP(*(___ksymtab_gpl+d_tmpfile)) \
KEEP(*(___ksymtab_gpl+dump_stack)) \
KEEP(*(___ksymtab_gpl+dup_iter)) \
KEEP(*(___ksymtab_gpl+elv_dispatch_sort)) \
KEEP(*(___ksymtab_gpl+emergency_restart)) \
KEEP(*(___ksymtab_gpl+end_buffer_read_sync)) \
KEEP(*(___ksymtab_gpl+end_buffer_write_sync)) \
KEEP(*(___ksymtab_gpl+end_page_writeback)) \
KEEP(*(___ksymtab_gpl+eth_commit_mac_addr_change)) \
KEEP(*(___ksymtab_gpl+ether_setup)) \
KEEP(*(___ksymtab_gpl+eth_gro_complete)) \
KEEP(*(___ksymtab_gpl+eth_header)) \
KEEP(*(___ksymtab_gpl+eth_header_cache)) \
KEEP(*(___ksymtab_gpl+eth_header_cache_update)) \
KEEP(*(___ksymtab_gpl+eth_header_parse)) \
KEEP(*(___ksymtab_gpl+eth_mac_addr)) \
KEEP(*(___ksymtab_gpl+eth_prepare_mac_addr_change)) \
KEEP(*(___ksymtab_gpl+__ethtool_get_settings)) \
KEEP(*(___ksymtab_gpl+ethtool_op_get_link)) \
KEEP(*(___ksymtab_gpl+ethtool_op_get_ts_info)) \
KEEP(*(___ksymtab_gpl+eth_type_trans)) \
KEEP(*(___ksymtab_gpl+eth_validate_addr)) \
KEEP(*(___ksymtab_gpl+eventfd_ctx_remove_wait_queue)) \
KEEP(*(___ksymtab_gpl+eventfd_fget)) \
KEEP(*(___ksymtab_gpl+execute_in_process_context)) \
KEEP(*(___ksymtab_gpl+fast_nat_recv)) \
KEEP(*(___ksymtab_gpl+fasync_helper)) \
KEEP(*(___ksymtab_gpl+__fdget)) \
KEEP(*(___ksymtab_gpl+fget)) \
KEEP(*(___ksymtab_gpl+fget_raw)) \
KEEP(*(___ksymtab_gpl+__fib6_flush_trees)) \
KEEP(*(___ksymtab_gpl+fib_default_rule_add)) \
KEEP(*(___ksymtab_gpl+__fib_lookup)) \
KEEP(*(___ksymtab_gpl+fib_rules_lookup)) \
KEEP(*(___ksymtab_gpl+fib_rules_register)) \
KEEP(*(___ksymtab_gpl+fib_rules_unregister)) \
KEEP(*(___ksymtab_gpl+fib_table_lookup)) \
KEEP(*(___ksymtab_gpl+fiemap_check_flags)) \
KEEP(*(___ksymtab_gpl+fiemap_fill_next_extent)) \
KEEP(*(___ksymtab_gpl+filemap_fault)) \
KEEP(*(___ksymtab_gpl+filemap_fdatawait)) \
KEEP(*(___ksymtab_gpl+filemap_fdatawait_range)) \
KEEP(*(___ksymtab_gpl+filemap_fdatawrite)) \
KEEP(*(___ksymtab_gpl+filemap_fdatawrite_range)) \
KEEP(*(___ksymtab_gpl+filemap_flush)) \
KEEP(*(___ksymtab_gpl+filemap_map_pages)) \
KEEP(*(___ksymtab_gpl+filemap_write_and_wait)) \
KEEP(*(___ksymtab_gpl+filemap_write_and_wait_range)) \
KEEP(*(___ksymtab_gpl+file_ns_capable)) \
KEEP(*(___ksymtab_gpl+file_path)) \
KEEP(*(___ksymtab_gpl+file_remove_privs)) \
KEEP(*(___ksymtab_gpl+file_update_time)) \
KEEP(*(___ksymtab_gpl+filp_close)) \
KEEP(*(___ksymtab_gpl+filp_open)) \
KEEP(*(___ksymtab_gpl+_find_first_bit_le)) \
KEEP(*(___ksymtab_gpl+_find_first_zero_bit_le)) \
KEEP(*(___ksymtab_gpl+__find_get_block)) \
KEEP(*(___ksymtab_gpl+find_get_pages_tag)) \
KEEP(*(___ksymtab_gpl+find_inode_nowait)) \
KEEP(*(___ksymtab_gpl+_find_next_bit_le)) \
KEEP(*(___ksymtab_gpl+_find_next_zero_bit_le)) \
KEEP(*(___ksymtab_gpl+finish_no_open)) \
KEEP(*(___ksymtab_gpl+finish_open)) \
KEEP(*(___ksymtab_gpl+finish_wait)) \
KEEP(*(___ksymtab_gpl+flow_cache_lookup)) \
KEEP(*(___ksymtab_gpl+flow_get_u32_dst)) \
KEEP(*(___ksymtab_gpl+flow_get_u32_src)) \
KEEP(*(___ksymtab_gpl+flow_keys_dissector)) \
KEEP(*(___ksymtab_gpl+flush_dcache_page)) \
KEEP(*(___ksymtab_gpl+flush_delayed_work)) \
KEEP(*(___ksymtab_gpl+flush_work)) \
KEEP(*(___ksymtab_gpl+flush_workqueue)) \
KEEP(*(___ksymtab_gpl+follow_down)) \
KEEP(*(___ksymtab_gpl+follow_down_one)) \
KEEP(*(___ksymtab_gpl+follow_up)) \
KEEP(*(___ksymtab_gpl+fput)) \
KEEP(*(___ksymtab_gpl+free_buffer_head)) \
KEEP(*(___ksymtab_gpl+free_irq)) \
KEEP(*(___ksymtab_gpl+free_irq_cpu_rmap)) \
KEEP(*(___ksymtab_gpl+free_netdev)) \
KEEP(*(___ksymtab_gpl+free_page_put_link)) \
KEEP(*(___ksymtab_gpl+__free_pages)) \
KEEP(*(___ksymtab_gpl+free_pages)) \
KEEP(*(___ksymtab_gpl+free_pages_exact)) \
KEEP(*(___ksymtab_gpl+free_percpu)) \
KEEP(*(___ksymtab_gpl+free_percpu_irq)) \
KEEP(*(___ksymtab_gpl+freeze_super)) \
KEEP(*(___ksymtab_gpl+fs_bio_set)) \
KEEP(*(___ksymtab_gpl+__f_setown)) \
KEEP(*(___ksymtab_gpl+fs_kobj)) \
KEEP(*(___ksymtab_gpl+fsnotify)) \
KEEP(*(___ksymtab_gpl+fsnotify_get_cookie)) \
KEEP(*(___ksymtab_gpl+__fsnotify_inode_delete)) \
KEEP(*(___ksymtab_gpl+__fsnotify_parent)) \
KEEP(*(___ksymtab_gpl+fs_overflowgid)) \
KEEP(*(___ksymtab_gpl+fs_overflowuid)) \
KEEP(*(___ksymtab_gpl+full_name_hash)) \
KEEP(*(___ksymtab_gpl+g_assert_type)) \
KEEP(*(___ksymtab_gpl+gcd)) \
KEEP(*(___ksymtab_gpl+generate_random_uuid)) \
KEEP(*(___ksymtab_gpl+generic_block_bmap)) \
KEEP(*(___ksymtab_gpl+__generic_block_fiemap)) \
KEEP(*(___ksymtab_gpl+generic_block_fiemap)) \
KEEP(*(___ksymtab_gpl+generic_check_addressable)) \
KEEP(*(___ksymtab_gpl+generic_cont_expand_simple)) \
KEEP(*(___ksymtab_gpl+generic_delete_inode)) \
KEEP(*(___ksymtab_gpl+generic_error_remove_page)) \
KEEP(*(___ksymtab_gpl+generic_fh_to_dentry)) \
KEEP(*(___ksymtab_gpl+generic_fh_to_parent)) \
KEEP(*(___ksymtab_gpl+generic_file_direct_write)) \
KEEP(*(___ksymtab_gpl+__generic_file_fsync)) \
KEEP(*(___ksymtab_gpl+generic_file_fsync)) \
KEEP(*(___ksymtab_gpl+generic_file_llseek)) \
KEEP(*(___ksymtab_gpl+generic_file_llseek_size)) \
KEEP(*(___ksymtab_gpl+generic_file_mmap)) \
KEEP(*(___ksymtab_gpl+generic_file_open)) \
KEEP(*(___ksymtab_gpl+generic_file_read_iter)) \
KEEP(*(___ksymtab_gpl+generic_file_readonly_mmap)) \
KEEP(*(___ksymtab_gpl+generic_file_splice_read)) \
KEEP(*(___ksymtab_gpl+__generic_file_write_iter)) \
KEEP(*(___ksymtab_gpl+generic_file_write_iter)) \
KEEP(*(___ksymtab_gpl+generic_fillattr)) \
KEEP(*(___ksymtab_gpl+generic_getxattr)) \
KEEP(*(___ksymtab_gpl+generic_key_instantiate)) \
KEEP(*(___ksymtab_gpl+generic_permission)) \
KEEP(*(___ksymtab_gpl+generic_read_dir)) \
KEEP(*(___ksymtab_gpl+generic_readlink)) \
KEEP(*(___ksymtab_gpl+generic_removexattr)) \
KEEP(*(___ksymtab_gpl+generic_ro_fops)) \
KEEP(*(___ksymtab_gpl+generic_setlease)) \
KEEP(*(___ksymtab_gpl+generic_setxattr)) \
KEEP(*(___ksymtab_gpl+generic_show_options)) \
KEEP(*(___ksymtab_gpl+generic_shutdown_super)) \
KEEP(*(___ksymtab_gpl+generic_update_time)) \
KEEP(*(___ksymtab_gpl+generic_write_checks)) \
KEEP(*(___ksymtab_gpl+generic_write_end)) \
KEEP(*(___ksymtab_gpl+generic_writepages)) \
KEEP(*(___ksymtab_gpl+genl_lock)) \
KEEP(*(___ksymtab_gpl+genlmsg_multicast_allns)) \
KEEP(*(___ksymtab_gpl+genlmsg_put)) \
KEEP(*(___ksymtab_gpl+__genl_register_family)) \
KEEP(*(___ksymtab_gpl+genl_unlock)) \
KEEP(*(___ksymtab_gpl+genl_unregister_family)) \
KEEP(*(___ksymtab_gpl+genphy_config_aneg)) \
KEEP(*(___ksymtab_gpl+genphy_read_status)) \
KEEP(*(___ksymtab_gpl+genphy_resume)) \
KEEP(*(___ksymtab_gpl+genphy_setup_forced)) \
KEEP(*(___ksymtab_gpl+genphy_suspend)) \
KEEP(*(___ksymtab_gpl+genphy_update_link)) \
KEEP(*(___ksymtab_gpl+__getblk_gfp)) \
KEEP(*(___ksymtab_gpl+get_device)) \
KEEP(*(___ksymtab_gpl+__get_free_pages)) \
KEEP(*(___ksymtab_gpl+getgpiopin)) \
KEEP(*(___ksymtab_gpl+__get_hash_from_flowi6)) \
KEEP(*(___ksymtab_gpl+getintvar)) \
KEEP(*(___ksymtab_gpl+getintvararray)) \
KEEP(*(___ksymtab_gpl+getintvararraysize)) \
KEEP(*(___ksymtab_gpl+get_jiffies_64)) \
KEEP(*(___ksymtab_gpl+get_next_ino)) \
KEEP(*(___ksymtab_gpl+getnstimeofday64)) \
KEEP(*(___ksymtab_gpl+__getnstimeofday64)) \
KEEP(*(___ksymtab_gpl+__get_page_tail)) \
KEEP(*(___ksymtab_gpl+get_random_bytes)) \
KEEP(*(___ksymtab_gpl+get_random_bytes_arch)) \
KEEP(*(___ksymtab_gpl+get_seconds)) \
KEEP(*(___ksymtab_gpl+get_state_synchronize_sched)) \
KEEP(*(___ksymtab_gpl+get_super)) \
KEEP(*(___ksymtab_gpl+get_super_thawed)) \
KEEP(*(___ksymtab_gpl+get_task_pid)) \
KEEP(*(___ksymtab_gpl+__get_user_1)) \
KEEP(*(___ksymtab_gpl+__get_user_4)) \
KEEP(*(___ksymtab_gpl+getvar)) \
KEEP(*(___ksymtab_gpl+get_zeroed_page)) \
KEEP(*(___ksymtab_gpl+gnet_stats_copy_app)) \
KEEP(*(___ksymtab_gpl+_gpio_ctrl)) \
KEEP(*(___ksymtab_gpl+gpio_kernel_api)) \
KEEP(*(___ksymtab_gpl+grab_cache_page_write_begin)) \
KEEP(*(___ksymtab_gpl+gre_add_protocol)) \
KEEP(*(___ksymtab_gpl+gre_del_protocol)) \
KEEP(*(___ksymtab_gpl+gro_find_complete_by_type)) \
KEEP(*(___ksymtab_gpl+groups_alloc)) \
KEEP(*(___ksymtab_gpl+groups_free)) \
KEEP(*(___ksymtab_gpl+groups_sort)) \
KEEP(*(___ksymtab_gpl+half_md4_transform)) \
KEEP(*(___ksymtab_gpl+handle_sysrq)) \
KEEP(*(___ksymtab_gpl+hex2bin)) \
KEEP(*(___ksymtab_gpl+hex_asc)) \
KEEP(*(___ksymtab_gpl+hex_asc_upper)) \
KEEP(*(___ksymtab_gpl+hex_dump_to_buffer)) \
KEEP(*(___ksymtab_gpl+high_memory)) \
KEEP(*(___ksymtab_gpl+hndcrc16)) \
KEEP(*(___ksymtab_gpl+hndcrc32)) \
KEEP(*(___ksymtab_gpl+hrtimer_active)) \
KEEP(*(___ksymtab_gpl+hrtimer_cancel)) \
KEEP(*(___ksymtab_gpl+hrtimer_init)) \
KEEP(*(___ksymtab_gpl+hrtimer_init_sleeper)) \
KEEP(*(___ksymtab_gpl+hrtimer_start_range_ns)) \
KEEP(*(___ksymtab_gpl+hsiphash_1u32)) \
KEEP(*(___ksymtab_gpl+i2c_add_adapter)) \
KEEP(*(___ksymtab_gpl+i2c_add_numbered_adapter)) \
KEEP(*(___ksymtab_gpl+i2c_del_adapter)) \
KEEP(*(___ksymtab_gpl+i2c_lock_adapter)) \
KEEP(*(___ksymtab_gpl+i2c_master_send)) \
KEEP(*(___ksymtab_gpl+i2c_smbus_read_byte_data)) \
KEEP(*(___ksymtab_gpl+i2c_smbus_read_i2c_block_data)) \
KEEP(*(___ksymtab_gpl+i2c_smbus_read_i2c_block_data_or_emulated)) \
KEEP(*(___ksymtab_gpl+i2c_smbus_read_word_data)) \
KEEP(*(___ksymtab_gpl+i2c_smbus_write_byte_data)) \
KEEP(*(___ksymtab_gpl+i2c_smbus_write_i2c_block_data)) \
KEEP(*(___ksymtab_gpl+i2c_smbus_write_word_data)) \
KEEP(*(___ksymtab_gpl+__i2c_transfer)) \
KEEP(*(___ksymtab_gpl+i2c_transfer)) \
KEEP(*(___ksymtab_gpl+i2c_unlock_adapter)) \
KEEP(*(___ksymtab_gpl+I_BDEV)) \
KEEP(*(___ksymtab_gpl+icmp_global_allow)) \
KEEP(*(___ksymtab_gpl+__icmp_send)) \
KEEP(*(___ksymtab_gpl+icmpv6_send)) \
KEEP(*(___ksymtab_gpl+ida_get_new_above)) \
KEEP(*(___ksymtab_gpl+ida_pre_get)) \
KEEP(*(___ksymtab_gpl+ida_remove)) \
KEEP(*(___ksymtab_gpl+idr_alloc)) \
KEEP(*(___ksymtab_gpl+idr_alloc_cyclic)) \
KEEP(*(___ksymtab_gpl+idr_destroy)) \
KEEP(*(___ksymtab_gpl+idr_find_slowpath)) \
KEEP(*(___ksymtab_gpl+idr_for_each)) \
KEEP(*(___ksymtab_gpl+idr_preload)) \
KEEP(*(___ksymtab_gpl+idr_remove)) \
KEEP(*(___ksymtab_gpl+iget5_locked)) \
KEEP(*(___ksymtab_gpl+iget_failed)) \
KEEP(*(___ksymtab_gpl+iget_locked)) \
KEEP(*(___ksymtab_gpl+igrab)) \
KEEP(*(___ksymtab_gpl+ihold)) \
KEEP(*(___ksymtab_gpl+ilookup)) \
KEEP(*(___ksymtab_gpl+ilookup5)) \
KEEP(*(___ksymtab_gpl+ilookup5_nowait)) \
KEEP(*(___ksymtab_gpl+import_iovec)) \
KEEP(*(___ksymtab_gpl+in4_pton)) \
KEEP(*(___ksymtab_gpl+in6addr_any)) \
KEEP(*(___ksymtab_gpl+in6addr_interfacelocal_allnodes)) \
KEEP(*(___ksymtab_gpl+in6addr_interfacelocal_allrouters)) \
KEEP(*(___ksymtab_gpl+in6addr_linklocal_allnodes)) \
KEEP(*(___ksymtab_gpl+in6addr_linklocal_allrouters)) \
KEEP(*(___ksymtab_gpl+in6addr_loopback)) \
KEEP(*(___ksymtab_gpl+in6addr_sitelocal_allrouters)) \
KEEP(*(___ksymtab_gpl+in6_dev_finish_destroy)) \
KEEP(*(___ksymtab_gpl+in6_pton)) \
KEEP(*(___ksymtab_gpl+inc_nlink)) \
KEEP(*(___ksymtab_gpl+__inc_zone_page_state)) \
KEEP(*(___ksymtab_gpl+inc_zone_page_state)) \
KEEP(*(___ksymtab_gpl+in_egroup_p)) \
KEEP(*(___ksymtab_gpl+inet6_add_protocol)) \
KEEP(*(___ksymtab_gpl+inet6addr_notifier_call_chain)) \
KEEP(*(___ksymtab_gpl+inet6_del_protocol)) \
KEEP(*(___ksymtab_gpl+inet6_hash_connect)) \
KEEP(*(___ksymtab_gpl+inet6_lookup)) \
KEEP(*(___ksymtab_gpl+__inet6_lookup_established)) \
KEEP(*(___ksymtab_gpl+inet6_lookup_listener)) \
KEEP(*(___ksymtab_gpl+inet6_offloads)) \
KEEP(*(___ksymtab_gpl+inet6_protos)) \
KEEP(*(___ksymtab_gpl+inet6_register_icmp_sender)) \
KEEP(*(___ksymtab_gpl+inet6_unregister_icmp_sender)) \
KEEP(*(___ksymtab_gpl+inet_accept)) \
KEEP(*(___ksymtab_gpl+inet_add_protocol)) \
KEEP(*(___ksymtab_gpl+inet_addr_type)) \
KEEP(*(___ksymtab_gpl+inet_addr_type_dev_table)) \
KEEP(*(___ksymtab_gpl+inet_addr_type_table)) \
KEEP(*(___ksymtab_gpl+inet_bind)) \
KEEP(*(___ksymtab_gpl+inet_confirm_addr)) \
KEEP(*(___ksymtab_gpl+inet_csk_accept)) \
KEEP(*(___ksymtab_gpl+inet_csk_complete_hashdance)) \
KEEP(*(___ksymtab_gpl+inet_csk_get_port)) \
KEEP(*(___ksymtab_gpl+inet_csk_prepare_forced_close)) \
KEEP(*(___ksymtab_gpl+inet_csk_reqsk_queue_drop_and_put)) \
KEEP(*(___ksymtab_gpl+inet_csk_update_pmtu)) \
KEEP(*(___ksymtab_gpl+inet_ctl_sock_create)) \
KEEP(*(___ksymtab_gpl+inet_del_protocol)) \
KEEP(*(___ksymtab_gpl+inet_dev_addr_type)) \
KEEP(*(___ksymtab_gpl+inet_dgram_connect)) \
KEEP(*(___ksymtab_gpl+inet_dgram_ops)) \
KEEP(*(___ksymtab_gpl+inet_ehash_nolisten)) \
KEEP(*(___ksymtab_gpl+inet_frag_destroy)) \
KEEP(*(___ksymtab_gpl+inet_frag_find)) \
KEEP(*(___ksymtab_gpl+inet_frag_kill)) \
KEEP(*(___ksymtab_gpl+inet_frags_exit_net)) \
KEEP(*(___ksymtab_gpl+inet_frags_fini)) \
KEEP(*(___ksymtab_gpl+inet_frags_init)) \
KEEP(*(___ksymtab_gpl+inet_get_local_port_range)) \
KEEP(*(___ksymtab_gpl+inet_getpeer)) \
KEEP(*(___ksymtab_gpl+__inet_hash)) \
KEEP(*(___ksymtab_gpl+inet_hash)) \
KEEP(*(___ksymtab_gpl+inet_hash_connect)) \
KEEP(*(___ksymtab_gpl+inet_hashinfo_init)) \
KEEP(*(___ksymtab_gpl+__inet_inherit_port)) \
KEEP(*(___ksymtab_gpl+inet_ioctl)) \
KEEP(*(___ksymtab_gpl+inet_listen)) \
KEEP(*(___ksymtab_gpl+__inet_lookup_established)) \
KEEP(*(___ksymtab_gpl+__inet_lookup_listener)) \
KEEP(*(___ksymtab_gpl+inet_offloads)) \
KEEP(*(___ksymtab_gpl+inet_peer_base_init)) \
KEEP(*(___ksymtab_gpl+inetpeer_invalidate_tree)) \
KEEP(*(___ksymtab_gpl+inet_peer_xrlim_allow)) \
KEEP(*(___ksymtab_gpl+inet_proto_csum_replace16)) \
KEEP(*(___ksymtab_gpl+inet_proto_csum_replace4)) \
KEEP(*(___ksymtab_gpl+inet_proto_csum_replace_by_diff)) \
KEEP(*(___ksymtab_gpl+inet_putpeer)) \
KEEP(*(___ksymtab_gpl+inet_recvmsg)) \
KEEP(*(___ksymtab_gpl+inet_register_protosw)) \
KEEP(*(___ksymtab_gpl+inet_release)) \
KEEP(*(___ksymtab_gpl+inet_reqsk_alloc)) \
KEEP(*(___ksymtab_gpl+inet_select_addr)) \
KEEP(*(___ksymtab_gpl+inet_sendmsg)) \
KEEP(*(___ksymtab_gpl+inet_sendpage)) \
KEEP(*(___ksymtab_gpl+inet_shutdown)) \
KEEP(*(___ksymtab_gpl+inet_sk_rebuild_header)) \
KEEP(*(___ksymtab_gpl+inet_sk_rx_dst_set)) \
KEEP(*(___ksymtab_gpl+inet_sock_destruct)) \
KEEP(*(___ksymtab_gpl+__inet_stream_connect)) \
KEEP(*(___ksymtab_gpl+inet_stream_connect)) \
KEEP(*(___ksymtab_gpl+inet_stream_ops)) \
KEEP(*(___ksymtab_gpl+inet_twsk_alloc)) \
KEEP(*(___ksymtab_gpl+inet_twsk_deschedule_put)) \
KEEP(*(___ksymtab_gpl+inet_twsk_purge)) \
KEEP(*(___ksymtab_gpl+inet_twsk_put)) \
KEEP(*(___ksymtab_gpl+__inet_twsk_schedule)) \
KEEP(*(___ksymtab_gpl+inet_unhash)) \
KEEP(*(___ksymtab_gpl+inet_unregister_protosw)) \
KEEP(*(___ksymtab_gpl+in_group_p)) \
KEEP(*(___ksymtab_gpl+init_net)) \
KEEP(*(___ksymtab_gpl+__init_rwsem)) \
KEEP(*(___ksymtab_gpl+init_special_inode)) \
KEEP(*(___ksymtab_gpl+init_task)) \
KEEP(*(___ksymtab_gpl+init_timer_key)) \
KEEP(*(___ksymtab_gpl+init_user_ns)) \
KEEP(*(___ksymtab_gpl+init_uts_ns)) \
KEEP(*(___ksymtab_gpl+__init_waitqueue_head)) \
KEEP(*(___ksymtab_gpl+__inode_add_bytes)) \
KEEP(*(___ksymtab_gpl+inode_add_bytes)) \
KEEP(*(___ksymtab_gpl+inode_change_ok)) \
KEEP(*(___ksymtab_gpl+inode_dio_wait)) \
KEEP(*(___ksymtab_gpl+inode_init_once)) \
KEEP(*(___ksymtab_gpl+inode_init_owner)) \
KEEP(*(___ksymtab_gpl+inode_needs_sync)) \
KEEP(*(___ksymtab_gpl+inode_newsize_ok)) \
KEEP(*(___ksymtab_gpl+inode_nohighmem)) \
KEEP(*(___ksymtab_gpl+inode_owner_or_capable)) \
KEEP(*(___ksymtab_gpl+__inode_permission)) \
KEEP(*(___ksymtab_gpl+inode_permission)) \
KEEP(*(___ksymtab_gpl+inode_set_bytes)) \
KEEP(*(___ksymtab_gpl+inode_set_flags)) \
KEEP(*(___ksymtab_gpl+__inode_sub_bytes)) \
KEEP(*(___ksymtab_gpl+inode_sub_bytes)) \
KEEP(*(___ksymtab_gpl+input_ff_upload)) \
KEEP(*(___ksymtab_gpl+__insert_inode_hash)) \
KEEP(*(___ksymtab_gpl+insert_inode_locked)) \
KEEP(*(___ksymtab_gpl+insert_inode_locked4)) \
KEEP(*(___ksymtab_gpl+invalidate_bdev)) \
KEEP(*(___ksymtab_gpl+invalidate_inode_buffers)) \
KEEP(*(___ksymtab_gpl+invalidate_inode_pages2)) \
KEEP(*(___ksymtab_gpl+invalidate_inode_pages2_range)) \
KEEP(*(___ksymtab_gpl+invalidate_mapping_pages)) \
KEEP(*(___ksymtab_gpl+ioc_lookup_icq)) \
KEEP(*(___ksymtab_gpl+ioctl_by_bdev)) \
KEEP(*(___ksymtab_gpl+iomem_resource)) \
KEEP(*(___ksymtab_gpl+ioport_resource)) \
KEEP(*(___ksymtab_gpl+ioremap)) \
KEEP(*(___ksymtab_gpl+ioremap_cache)) \
KEEP(*(___ksymtab_gpl+ioremap_page)) \
KEEP(*(___ksymtab_gpl+ioremap_page_range)) \
KEEP(*(___ksymtab_gpl+ioremap_wc)) \
KEEP(*(___ksymtab_gpl+io_schedule_timeout)) \
KEEP(*(___ksymtab_gpl+iounmap)) \
KEEP(*(___ksymtab_gpl+iov_iter_advance)) \
KEEP(*(___ksymtab_gpl+iov_iter_alignment)) \
KEEP(*(___ksymtab_gpl+iov_iter_copy_from_user_atomic)) \
KEEP(*(___ksymtab_gpl+iov_iter_fault_in_readable)) \
KEEP(*(___ksymtab_gpl+iov_iter_get_pages)) \
KEEP(*(___ksymtab_gpl+iov_iter_get_pages_alloc)) \
KEEP(*(___ksymtab_gpl+iov_iter_init)) \
KEEP(*(___ksymtab_gpl+iov_iter_npages)) \
KEEP(*(___ksymtab_gpl+iov_iter_single_seg_count)) \
KEEP(*(___ksymtab_gpl+__ip4_datagram_connect)) \
KEEP(*(___ksymtab_gpl+ip6_dst_hoplimit)) \
KEEP(*(___ksymtab_gpl+ip6_find_1stfragopt)) \
KEEP(*(___ksymtab_gpl+__ip6_local_out)) \
KEEP(*(___ksymtab_gpl+ip6_local_out)) \
KEEP(*(___ksymtab_gpl+ip_cmsg_recv_offset)) \
KEEP(*(___ksymtab_gpl+ip_defrag)) \
KEEP(*(___ksymtab_gpl+ip_frag_ecn_table)) \
KEEP(*(___ksymtab_gpl+ip_generic_getfrag)) \
KEEP(*(___ksymtab_gpl+ip_getsockopt)) \
KEEP(*(___ksymtab_gpl+ip_local_out)) \
KEEP(*(___ksymtab_gpl+ip_mc_dec_group)) \
KEEP(*(___ksymtab_gpl+ip_mc_inc_group)) \
KEEP(*(___ksymtab_gpl+ip_mc_join_group)) \
KEEP(*(___ksymtab_gpl+ip_mc_leave_group)) \
KEEP(*(___ksymtab_gpl+ip_queue_xmit)) \
KEEP(*(___ksymtab_gpl+ip_route_input_noref)) \
KEEP(*(___ksymtab_gpl+ip_route_me_harder)) \
KEEP(*(___ksymtab_gpl+ip_route_output_flow)) \
KEEP(*(___ksymtab_gpl+__ip_select_ident)) \
KEEP(*(___ksymtab_gpl+ip_send_check)) \
KEEP(*(___ksymtab_gpl+ip_setsockopt)) \
KEEP(*(___ksymtab_gpl+ip_tunnel_get_stats64)) \
KEEP(*(___ksymtab_gpl+iptunnel_handle_offloads)) \
KEEP(*(___ksymtab_gpl+iptunnel_pull_header)) \
KEEP(*(___ksymtab_gpl+iptunnel_xmit)) \
KEEP(*(___ksymtab_gpl+iput)) \
KEEP(*(___ksymtab_gpl+ipv4_redirect)) \
KEEP(*(___ksymtab_gpl+ipv4_sk_update_pmtu)) \
KEEP(*(___ksymtab_gpl+ipv4_specific)) \
KEEP(*(___ksymtab_gpl+ipv4_update_pmtu)) \
KEEP(*(___ksymtab_gpl+__ipv6_addr_type)) \
KEEP(*(___ksymtab_gpl+ipv6_ext_hdr)) \
KEEP(*(___ksymtab_gpl+ipv6_find_hdr)) \
KEEP(*(___ksymtab_gpl+ipv6_find_tlv)) \
KEEP(*(___ksymtab_gpl+ipv6_select_ident)) \
KEEP(*(___ksymtab_gpl+ipv6_skip_exthdr)) \
KEEP(*(___ksymtab_gpl+ipv6_stub)) \
KEEP(*(___ksymtab_gpl+is_bad_inode)) \
KEEP(*(___ksymtab_gpl+iterate_supers_type)) \
KEEP(*(___ksymtab_gpl+iter_file_splice_write)) \
KEEP(*(___ksymtab_gpl+iunique)) \
KEEP(*(___ksymtab_gpl+jiffies)) \
KEEP(*(___ksymtab_gpl+jiffies_64)) \
KEEP(*(___ksymtab_gpl+jiffies_64_to_clock_t)) \
KEEP(*(___ksymtab_gpl+jiffies_to_clock_t)) \
KEEP(*(___ksymtab_gpl+jiffies_to_msecs)) \
KEEP(*(___ksymtab_gpl+jiffies_to_timespec64)) \
KEEP(*(___ksymtab_gpl+jiffies_to_timeval)) \
KEEP(*(___ksymtab_gpl+jiffies_to_usecs)) \
KEEP(*(___ksymtab_gpl+kallsyms_lookup_name)) \
KEEP(*(___ksymtab_gpl+kasprintf)) \
KEEP(*(___ksymtab_gpl+kblockd_schedule_delayed_work)) \
KEEP(*(___ksymtab_gpl+kblockd_schedule_delayed_work_on)) \
KEEP(*(___ksymtab_gpl+kblockd_schedule_work)) \
KEEP(*(___ksymtab_gpl+kernel_bind)) \
KEEP(*(___ksymtab_gpl+kernel_connect)) \
KEEP(*(___ksymtab_gpl+kernel_kobj)) \
KEEP(*(___ksymtab_gpl+kernel_read)) \
KEEP(*(___ksymtab_gpl+kernel_recvmsg)) \
KEEP(*(___ksymtab_gpl+kernel_sendmsg)) \
KEEP(*(___ksymtab_gpl+kernel_setsockopt)) \
KEEP(*(___ksymtab_gpl+kernel_sigaction)) \
KEEP(*(___ksymtab_gpl+kernel_sock_ip_overhead)) \
KEEP(*(___ksymtab_gpl+kernel_sock_shutdown)) \
KEEP(*(___ksymtab_gpl+kern_path)) \
KEEP(*(___ksymtab_gpl+kern_path_create)) \
KEEP(*(___ksymtab_gpl+kern_path_mountpoint)) \
KEEP(*(___ksymtab_gpl+key_create_or_update)) \
KEEP(*(___ksymtab_gpl+key_put)) \
KEEP(*(___ksymtab_gpl+key_revoke)) \
KEEP(*(___ksymtab_gpl+keyring_alloc)) \
KEEP(*(___ksymtab_gpl+key_type_logon)) \
KEEP(*(___ksymtab_gpl+key_update)) \
KEEP(*(___ksymtab_gpl+key_validate)) \
KEEP(*(___ksymtab_gpl+__kfifo_alloc)) \
KEEP(*(___ksymtab_gpl+__kfifo_free)) \
KEEP(*(___ksymtab_gpl+__kfifo_in)) \
KEEP(*(___ksymtab_gpl+__kfifo_init)) \
KEEP(*(___ksymtab_gpl+__kfifo_in_r)) \
KEEP(*(___ksymtab_gpl+__kfifo_out)) \
KEEP(*(___ksymtab_gpl+__kfifo_out_peek)) \
KEEP(*(___ksymtab_gpl+__kfifo_out_peek_r)) \
KEEP(*(___ksymtab_gpl+__kfifo_out_r)) \
KEEP(*(___ksymtab_gpl+kfree)) \
KEEP(*(___ksymtab_gpl+kfree_call_rcu)) \
KEEP(*(___ksymtab_gpl+kfree_const)) \
KEEP(*(___ksymtab_gpl+kfree_put_link)) \
KEEP(*(___ksymtab_gpl+__kfree_skb)) \
KEEP(*(___ksymtab_gpl+kfree_skb)) \
KEEP(*(___ksymtab_gpl+kfree_skb_list)) \
KEEP(*(___ksymtab_gpl+kfree_skb_partial)) \
KEEP(*(___ksymtab_gpl+kill_anon_super)) \
KEEP(*(___ksymtab_gpl+kill_block_super)) \
KEEP(*(___ksymtab_gpl+kill_fasync)) \
KEEP(*(___ksymtab_gpl+kill_litter_super)) \
KEEP(*(___ksymtab_gpl+kill_mtd_super)) \
KEEP(*(___ksymtab_gpl+kill_pid_info_as_cred)) \
KEEP(*(___ksymtab_gpl+__kmalloc)) \
KEEP(*(___ksymtab_gpl+kmalloc_caches)) \
KEEP(*(___ksymtab_gpl+__kmalloc_track_caller)) \
KEEP(*(___ksymtab_gpl+kmap)) \
KEEP(*(___ksymtab_gpl+kmap_atomic)) \
KEEP(*(___ksymtab_gpl+__kmap_atomic_idx)) \
KEEP(*(___ksymtab_gpl+kmap_high)) \
KEEP(*(___ksymtab_gpl+kmap_to_page)) \
KEEP(*(___ksymtab_gpl+kmem_cache_alloc)) \
KEEP(*(___ksymtab_gpl+kmem_cache_alloc_bulk)) \
KEEP(*(___ksymtab_gpl+kmem_cache_create)) \
KEEP(*(___ksymtab_gpl+kmem_cache_destroy)) \
KEEP(*(___ksymtab_gpl+kmem_cache_free)) \
KEEP(*(___ksymtab_gpl+kmem_cache_free_bulk)) \
KEEP(*(___ksymtab_gpl+kmemdup)) \
KEEP(*(___ksymtab_gpl+kmemdup_nul)) \
KEEP(*(___ksymtab_gpl+km_report)) \
KEEP(*(___ksymtab_gpl+kobject_create_and_add)) \
KEEP(*(___ksymtab_gpl+kobject_del)) \
KEEP(*(___ksymtab_gpl+kobject_init_and_add)) \
KEEP(*(___ksymtab_gpl+kobject_put)) \
KEEP(*(___ksymtab_gpl+kobject_set_name)) \
KEEP(*(___ksymtab_gpl+kobject_uevent)) \
KEEP(*(___ksymtab_gpl+kobject_uevent_env)) \
KEEP(*(___ksymtab_gpl+krealloc)) \
KEEP(*(___ksymtab_gpl+__krealloc)) \
KEEP(*(___ksymtab_gpl+kset_register)) \
KEEP(*(___ksymtab_gpl+kset_unregister)) \
KEEP(*(___ksymtab_gpl+kstrdup)) \
KEEP(*(___ksymtab_gpl+kstrdup_const)) \
KEEP(*(___ksymtab_gpl+kstrndup)) \
KEEP(*(___ksymtab_gpl+kstrtobool)) \
KEEP(*(___ksymtab_gpl+kstrtobool_from_user)) \
KEEP(*(___ksymtab_gpl+kstrtoint)) \
KEEP(*(___ksymtab_gpl+kstrtoint_from_user)) \
KEEP(*(___ksymtab_gpl+_kstrtol)) \
KEEP(*(___ksymtab_gpl+kstrtouint)) \
KEEP(*(___ksymtab_gpl+kstrtouint_from_user)) \
KEEP(*(___ksymtab_gpl+_kstrtoul)) \
KEEP(*(___ksymtab_gpl+kstrtoul_from_user)) \
KEEP(*(___ksymtab_gpl+kstrtoull)) \
KEEP(*(___ksymtab_gpl+kstrtoull_from_user)) \
KEEP(*(___ksymtab_gpl+kthread_create_on_node)) \
KEEP(*(___ksymtab_gpl+kthread_should_stop)) \
KEEP(*(___ksymtab_gpl+kthread_stop)) \
KEEP(*(___ksymtab_gpl+ktime_get)) \
KEEP(*(___ksymtab_gpl+ktime_get_mono_fast_ns)) \
KEEP(*(___ksymtab_gpl+ktime_get_raw)) \
KEEP(*(___ksymtab_gpl+ktime_get_raw_fast_ns)) \
KEEP(*(___ksymtab_gpl+ktime_get_real_seconds)) \
KEEP(*(___ksymtab_gpl+ktime_get_resolution_ns)) \
KEEP(*(___ksymtab_gpl+ktime_get_seconds)) \
KEEP(*(___ksymtab_gpl+ktime_get_ts64)) \
KEEP(*(___ksymtab_gpl+ktime_get_with_offset)) \
KEEP(*(___ksymtab_gpl+kunmap)) \
KEEP(*(___ksymtab_gpl+__kunmap_atomic)) \
KEEP(*(___ksymtab_gpl+kunmap_high)) \
KEEP(*(___ksymtab_gpl+kvasprintf)) \
KEEP(*(___ksymtab_gpl+kvasprintf_const)) \
KEEP(*(___ksymtab_gpl+kvfree)) \
KEEP(*(___ksymtab_gpl+kvmalloc_node)) \
KEEP(*(___ksymtab_gpl+kzfree)) \
KEEP(*(___ksymtab_gpl+list_sort)) \
KEEP(*(___ksymtab_gpl+ll_rw_block)) \
KEEP(*(___ksymtab_gpl+load_nls)) \
KEEP(*(___ksymtab_gpl+load_nls_default)) \
KEEP(*(___ksymtab_gpl+__local_bh_enable_ip)) \
KEEP(*(___ksymtab_gpl+__lock_buffer)) \
KEEP(*(___ksymtab_gpl+__lock_page)) \
KEEP(*(___ksymtab_gpl+__lock_page_killable)) \
KEEP(*(___ksymtab_gpl+lockref_get)) \
KEEP(*(___ksymtab_gpl+lockref_get_not_dead)) \
KEEP(*(___ksymtab_gpl+lockref_get_not_zero)) \
KEEP(*(___ksymtab_gpl+lockref_get_or_lock)) \
KEEP(*(___ksymtab_gpl+locks_lock_inode_wait)) \
KEEP(*(___ksymtab_gpl+lock_sock_fast)) \
KEEP(*(___ksymtab_gpl+lock_sock_nested)) \
KEEP(*(___ksymtab_gpl+lock_two_nondirectories)) \
KEEP(*(___ksymtab_gpl+lookup_bdev)) \
KEEP(*(___ksymtab_gpl+lookup_one_len)) \
KEEP(*(___ksymtab_gpl+lru_cache_add_file)) \
KEEP(*(___ksymtab_gpl+lwtunnel_build_state)) \
KEEP(*(___ksymtab_gpl+lwtunnel_cmp_encap)) \
KEEP(*(___ksymtab_gpl+lwtunnel_encap_add_ops)) \
KEEP(*(___ksymtab_gpl+lwtunnel_encap_del_ops)) \
KEEP(*(___ksymtab_gpl+lwtunnel_fill_encap)) \
KEEP(*(___ksymtab_gpl+lwtunnel_get_encap_size)) \
KEEP(*(___ksymtab_gpl+lwtunnel_input)) \
KEEP(*(___ksymtab_gpl+lwtunnel_output)) \
KEEP(*(___ksymtab_gpl+lwtunnel_state_alloc)) \
KEEP(*(___ksymtab_gpl+make_bad_inode)) \
KEEP(*(___ksymtab_gpl+mapping_tagged)) \
KEEP(*(___ksymtab_gpl+mark_buffer_dirty)) \
KEEP(*(___ksymtab_gpl+mark_buffer_dirty_inode)) \
KEEP(*(___ksymtab_gpl+__mark_inode_dirty)) \
KEEP(*(___ksymtab_gpl+mark_page_accessed)) \
KEEP(*(___ksymtab_gpl+match_int)) \
KEEP(*(___ksymtab_gpl+match_octal)) \
KEEP(*(___ksymtab_gpl+match_strdup)) \
KEEP(*(___ksymtab_gpl+match_strlcpy)) \
KEEP(*(___ksymtab_gpl+match_token)) \
KEEP(*(___ksymtab_gpl+md5_transform)) \
KEEP(*(___ksymtab_gpl+mdiobus_read)) \
KEEP(*(___ksymtab_gpl+mdiobus_read_nested)) \
KEEP(*(___ksymtab_gpl+__mdiobus_register)) \
KEEP(*(___ksymtab_gpl+mdiobus_unregister)) \
KEEP(*(___ksymtab_gpl+mdiobus_write)) \
KEEP(*(___ksymtab_gpl+mdiobus_write_nested)) \
KEEP(*(___ksymtab_gpl+memchr)) \
KEEP(*(___ksymtab_gpl+memchr_inv)) \
KEEP(*(___ksymtab_gpl+memcmp)) \
KEEP(*(___ksymtab_gpl+memcpy)) \
KEEP(*(___ksymtab_gpl+_memcpy_fromio)) \
KEEP(*(___ksymtab_gpl+_memcpy_toio)) \
KEEP(*(___ksymtab_gpl+memdup_user)) \
KEEP(*(___ksymtab_gpl+mem_map)) \
KEEP(*(___ksymtab_gpl+memmove)) \
KEEP(*(___ksymtab_gpl+memory_read_from_buffer)) \
KEEP(*(___ksymtab_gpl+mempool_alloc)) \
KEEP(*(___ksymtab_gpl+mempool_alloc_pages)) \
KEEP(*(___ksymtab_gpl+mempool_alloc_slab)) \
KEEP(*(___ksymtab_gpl+mempool_create)) \
KEEP(*(___ksymtab_gpl+mempool_create_node)) \
KEEP(*(___ksymtab_gpl+mempool_destroy)) \
KEEP(*(___ksymtab_gpl+mempool_free)) \
KEEP(*(___ksymtab_gpl+mempool_free_pages)) \
KEEP(*(___ksymtab_gpl+mempool_free_slab)) \
KEEP(*(___ksymtab_gpl+mempool_kfree)) \
KEEP(*(___ksymtab_gpl+mempool_resize)) \
KEEP(*(___ksymtab_gpl+memscan)) \
KEEP(*(___ksymtab_gpl+memset)) \
KEEP(*(___ksymtab_gpl+_memset_io)) \
KEEP(*(___ksymtab_gpl+memweight)) \
KEEP(*(___ksymtab_gpl+__memzero)) \
KEEP(*(___ksymtab_gpl+memzero_explicit)) \
KEEP(*(___ksymtab_gpl+metadata_dst_alloc)) \
KEEP(*(___ksymtab_gpl+metadata_dst_alloc_percpu)) \
KEEP(*(___ksymtab_gpl+mii_check_gmii_support)) \
KEEP(*(___ksymtab_gpl+mii_ethtool_gset)) \
KEEP(*(___ksymtab_gpl+mii_ethtool_sset)) \
KEEP(*(___ksymtab_gpl+mii_link_ok)) \
KEEP(*(___ksymtab_gpl+mii_nway_restart)) \
KEEP(*(___ksymtab_gpl+misc_deregister)) \
KEEP(*(___ksymtab_gpl+misc_register)) \
KEEP(*(___ksymtab_gpl+mktime64)) \
KEEP(*(___ksymtab_gpl+mnt_drop_write_file)) \
KEEP(*(___ksymtab_gpl+mnt_want_write_file)) \
KEEP(*(___ksymtab_gpl+mod_delayed_work_on)) \
KEEP(*(___ksymtab_gpl+mod_timer)) \
KEEP(*(___ksymtab_gpl+mod_timer_pending)) \
KEEP(*(___ksymtab_gpl+mod_timer_pinned)) \
KEEP(*(___ksymtab_gpl+__module_get)) \
KEEP(*(___ksymtab_gpl+module_put)) \
KEEP(*(___ksymtab_gpl+__module_put_and_exit)) \
KEEP(*(___ksymtab_gpl+mount_bdev)) \
KEEP(*(___ksymtab_gpl+mount_mtd)) \
KEEP(*(___ksymtab_gpl+mount_nodev)) \
KEEP(*(___ksymtab_gpl+mount_single)) \
KEEP(*(___ksymtab_gpl+mpage_readpage)) \
KEEP(*(___ksymtab_gpl+mpage_readpages)) \
KEEP(*(___ksymtab_gpl+mpage_writepages)) \
KEEP(*(___ksymtab_gpl+__msecs_to_jiffies)) \
KEEP(*(___ksymtab_gpl+msleep)) \
KEEP(*(___ksymtab_gpl+msleep_interruptible)) \
KEEP(*(___ksymtab_gpl+mtd_block_isbad)) \
KEEP(*(___ksymtab_gpl+mtd_block_markbad)) \
KEEP(*(___ksymtab_gpl+mtd_device_unregister)) \
KEEP(*(___ksymtab_gpl+mtd_erase)) \
KEEP(*(___ksymtab_gpl+mtd_erase_callback)) \
KEEP(*(___ksymtab_gpl+mtd_get_device_size)) \
KEEP(*(___ksymtab_gpl+mtd_kmalloc_up_to)) \
KEEP(*(___ksymtab_gpl+mtd_panic_write)) \
KEEP(*(___ksymtab_gpl+mtd_point)) \
KEEP(*(___ksymtab_gpl+mtd_read)) \
KEEP(*(___ksymtab_gpl+mtd_read_fact_prot_reg)) \
KEEP(*(___ksymtab_gpl+mtd_read_oob)) \
KEEP(*(___ksymtab_gpl+mtd_read_user_prot_reg)) \
KEEP(*(___ksymtab_gpl+mtd_unpoint)) \
KEEP(*(___ksymtab_gpl+mtd_write)) \
KEEP(*(___ksymtab_gpl+mtd_write_user_prot_reg)) \
KEEP(*(___ksymtab_gpl+mtd_writev)) \
KEEP(*(___ksymtab_gpl+__mutex_init)) \
KEEP(*(___ksymtab_gpl+mutex_lock)) \
KEEP(*(___ksymtab_gpl+mutex_lock_interruptible)) \
KEEP(*(___ksymtab_gpl+mutex_lock_killable)) \
KEEP(*(___ksymtab_gpl+mutex_trylock)) \
KEEP(*(___ksymtab_gpl+mutex_unlock)) \
KEEP(*(___ksymtab_gpl+names_cachep)) \
KEEP(*(___ksymtab_gpl+__napi_complete)) \
KEEP(*(___ksymtab_gpl+napi_complete_done)) \
KEEP(*(___ksymtab_gpl+napi_disable)) \
KEEP(*(___ksymtab_gpl+napi_gro_receive)) \
KEEP(*(___ksymtab_gpl+__napi_schedule)) \
KEEP(*(___ksymtab_gpl+__napi_schedule_irqoff)) \
KEEP(*(___ksymtab_gpl+need_conntrack)) \
KEEP(*(___ksymtab_gpl+neigh_app_ns)) \
KEEP(*(___ksymtab_gpl+neigh_changeaddr)) \
KEEP(*(___ksymtab_gpl+neigh_connected_output)) \
KEEP(*(___ksymtab_gpl+__neigh_create)) \
KEEP(*(___ksymtab_gpl+neigh_destroy)) \
KEEP(*(___ksymtab_gpl+neigh_direct_output)) \
KEEP(*(___ksymtab_gpl+neigh_ifdown)) \
KEEP(*(___ksymtab_gpl+neigh_lookup)) \
KEEP(*(___ksymtab_gpl+neigh_lookup_nodev)) \
KEEP(*(___ksymtab_gpl+neigh_parms_alloc)) \
KEEP(*(___ksymtab_gpl+neigh_parms_release)) \
KEEP(*(___ksymtab_gpl+neigh_proc_dointvec)) \
KEEP(*(___ksymtab_gpl+neigh_proc_dointvec_jiffies)) \
KEEP(*(___ksymtab_gpl+neigh_proc_dointvec_ms_jiffies)) \
KEEP(*(___ksymtab_gpl+neigh_rand_reach_time)) \
KEEP(*(___ksymtab_gpl+neigh_resolve_output)) \
KEEP(*(___ksymtab_gpl+__neigh_set_probe_once)) \
KEEP(*(___ksymtab_gpl+neigh_sysctl_register)) \
KEEP(*(___ksymtab_gpl+neigh_sysctl_unregister)) \
KEEP(*(___ksymtab_gpl+neigh_table_clear)) \
KEEP(*(___ksymtab_gpl+neigh_table_init)) \
KEEP(*(___ksymtab_gpl+neigh_update)) \
KEEP(*(___ksymtab_gpl+neigh_xmit)) \
KEEP(*(___ksymtab_gpl+netdev_adjacent_get_private)) \
KEEP(*(___ksymtab_gpl+__netdev_alloc_skb)) \
KEEP(*(___ksymtab_gpl+__netdev_alloc_skb_ip_align)) \
KEEP(*(___ksymtab_gpl+netdev_all_upper_get_next_dev_rcu)) \
KEEP(*(___ksymtab_gpl+netdev_bonding_info_change)) \
KEEP(*(___ksymtab_gpl+netdev_boot_setup_check)) \
KEEP(*(___ksymtab_gpl+netdev_change_features)) \
KEEP(*(___ksymtab_gpl+netdev_class_create_file_ns)) \
KEEP(*(___ksymtab_gpl+netdev_class_remove_file_ns)) \
KEEP(*(___ksymtab_gpl+netdev_crit)) \
KEEP(*(___ksymtab_gpl+netdev_err)) \
KEEP(*(___ksymtab_gpl+netdev_has_upper_dev)) \
KEEP(*(___ksymtab_gpl+netdev_increment_features)) \
KEEP(*(___ksymtab_gpl+netdev_info)) \
KEEP(*(___ksymtab_gpl+netdev_is_rx_handler_busy)) \
KEEP(*(___ksymtab_gpl+netdev_lower_dev_get_private)) \
KEEP(*(___ksymtab_gpl+netdev_lower_get_first_private_rcu)) \
KEEP(*(___ksymtab_gpl+netdev_lower_get_next_private)) \
KEEP(*(___ksymtab_gpl+netdev_lower_get_next_private_rcu)) \
KEEP(*(___ksymtab_gpl+netdev_master_upper_dev_get)) \
KEEP(*(___ksymtab_gpl+netdev_master_upper_dev_get_rcu)) \
KEEP(*(___ksymtab_gpl+netdev_master_upper_dev_link)) \
KEEP(*(___ksymtab_gpl+netdev_master_upper_dev_link_private)) \
KEEP(*(___ksymtab_gpl+netdev_max_backlog)) \
KEEP(*(___ksymtab_gpl+netdev_notice)) \
KEEP(*(___ksymtab_gpl+netdev_printk)) \
KEEP(*(___ksymtab_gpl+netdev_rx_handler_register)) \
KEEP(*(___ksymtab_gpl+netdev_rx_handler_unregister)) \
KEEP(*(___ksymtab_gpl+netdev_state_change)) \
KEEP(*(___ksymtab_gpl+netdev_update_features)) \
KEEP(*(___ksymtab_gpl+netdev_upper_dev_link)) \
KEEP(*(___ksymtab_gpl+netdev_upper_dev_unlink)) \
KEEP(*(___ksymtab_gpl+netdev_upper_get_next_dev_rcu)) \
KEEP(*(___ksymtab_gpl+netdev_warn)) \
KEEP(*(___ksymtab_gpl+__netdev_watchdog_up)) \
KEEP(*(___ksymtab_gpl+netif_carrier_off)) \
KEEP(*(___ksymtab_gpl+netif_carrier_on)) \
KEEP(*(___ksymtab_gpl+netif_device_attach)) \
KEEP(*(___ksymtab_gpl+netif_device_detach)) \
KEEP(*(___ksymtab_gpl+netif_napi_add)) \
KEEP(*(___ksymtab_gpl+netif_napi_del)) \
KEEP(*(___ksymtab_gpl+netif_rx)) \
KEEP(*(___ksymtab_gpl+netif_rx_ni)) \
KEEP(*(___ksymtab_gpl+__netif_schedule)) \
KEEP(*(___ksymtab_gpl+netif_schedule_queue)) \
KEEP(*(___ksymtab_gpl+netif_set_real_num_rx_queues)) \
KEEP(*(___ksymtab_gpl+netif_set_real_num_tx_queues)) \
KEEP(*(___ksymtab_gpl+netif_tx_stop_all_queues)) \
KEEP(*(___ksymtab_gpl+netif_tx_wake_queue)) \
KEEP(*(___ksymtab_gpl+netlink_broadcast)) \
KEEP(*(___ksymtab_gpl+netlink_broadcast_filtered)) \
KEEP(*(___ksymtab_gpl+netlink_capable)) \
KEEP(*(___ksymtab_gpl+netlink_has_listeners)) \
KEEP(*(___ksymtab_gpl+__netlink_kernel_create)) \
KEEP(*(___ksymtab_gpl+netlink_kernel_release)) \
KEEP(*(___ksymtab_gpl+netlink_net_capable)) \
KEEP(*(___ksymtab_gpl+__netlink_ns_capable)) \
KEEP(*(___ksymtab_gpl+netlink_ns_capable)) \
KEEP(*(___ksymtab_gpl+netlink_unicast)) \
KEEP(*(___ksymtab_gpl+net_namespace_list)) \
KEEP(*(___ksymtab_gpl+net_ratelimit)) \
KEEP(*(___ksymtab_gpl+new_inode)) \
KEEP(*(___ksymtab_gpl+nf_afinfo)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_alter_reply)) \
KEEP(*(___ksymtab_gpl+__nf_conntrack_confirm)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_destroy)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_dscpremark_ext_set_dscp_rule_valid)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_expect_lock)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_find_get)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_helper_register)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_helper_try_module_get)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_helper_unregister)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_in)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_l4proto_tcp6)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_l4proto_udp6)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_register_notifier)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_tuple_taken)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_unregister_notifier)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_untracked)) \
KEEP(*(___ksymtab_gpl+nf_ct_attach)) \
KEEP(*(___ksymtab_gpl+nf_ct_deliver_cached_events)) \
KEEP(*(___ksymtab_gpl+nf_ct_expect_alloc)) \
KEEP(*(___ksymtab_gpl+__nf_ct_expect_find)) \
KEEP(*(___ksymtab_gpl+nf_ct_expect_find_get)) \
KEEP(*(___ksymtab_gpl+nf_ct_expect_init)) \
KEEP(*(___ksymtab_gpl+nf_ct_expect_put)) \
KEEP(*(___ksymtab_gpl+nf_ct_expect_related_report)) \
KEEP(*(___ksymtab_gpl+__nf_ct_ext_add_length)) \
KEEP(*(___ksymtab_gpl+nf_ct_extend_custom_register)) \
KEEP(*(___ksymtab_gpl+nf_ct_extend_register)) \
KEEP(*(___ksymtab_gpl+nf_ct_extend_unregister)) \
KEEP(*(___ksymtab_gpl+nf_ct_get_tuple)) \
KEEP(*(___ksymtab_gpl+nf_ct_get_tuplepr)) \
KEEP(*(___ksymtab_gpl+nf_ct_helper_expectfn_register)) \
KEEP(*(___ksymtab_gpl+nf_ct_helper_expectfn_unregister)) \
KEEP(*(___ksymtab_gpl+nf_ct_helper_log)) \
KEEP(*(___ksymtab_gpl+nf_ct_invert_tuple)) \
KEEP(*(___ksymtab_gpl+nf_ct_invert_tuplepr)) \
KEEP(*(___ksymtab_gpl+nf_ct_iterate_cleanup)) \
KEEP(*(___ksymtab_gpl+__nf_ct_kill_acct)) \
KEEP(*(___ksymtab_gpl+nf_ct_l3proto_module_put)) \
KEEP(*(___ksymtab_gpl+nf_ct_l3proto_pernet_register)) \
KEEP(*(___ksymtab_gpl+nf_ct_l3proto_pernet_unregister)) \
KEEP(*(___ksymtab_gpl+nf_ct_l3proto_register)) \
KEEP(*(___ksymtab_gpl+nf_ct_l3proto_try_module_get)) \
KEEP(*(___ksymtab_gpl+nf_ct_l3proto_unregister)) \
KEEP(*(___ksymtab_gpl+__nf_ct_l4proto_find)) \
KEEP(*(___ksymtab_gpl+nf_ct_l4proto_pernet_register)) \
KEEP(*(___ksymtab_gpl+nf_ct_l4proto_pernet_unregister)) \
KEEP(*(___ksymtab_gpl+nf_ct_l4proto_register)) \
KEEP(*(___ksymtab_gpl+nf_ct_l4proto_unregister)) \
KEEP(*(___ksymtab_gpl+nf_ct_nat_ext_add)) \
KEEP(*(___ksymtab_gpl+__nf_ct_refresh_acct)) \
KEEP(*(___ksymtab_gpl+nf_ct_seqadj_init)) \
KEEP(*(___ksymtab_gpl+nf_ct_seqadj_set)) \
KEEP(*(___ksymtab_gpl+nf_ct_seq_adjust)) \
KEEP(*(___ksymtab_gpl+nf_ct_tcp_no_window_check)) \
KEEP(*(___ksymtab_gpl+nf_ct_tmpl_alloc)) \
KEEP(*(___ksymtab_gpl+nf_ct_tmpl_free)) \
KEEP(*(___ksymtab_gpl+nf_ct_unexpect_related)) \
KEEP(*(___ksymtab_gpl+nf_ct_unlink_expect_report)) \
KEEP(*(___ksymtab_gpl+nf_ct_zone_dflt)) \
KEEP(*(___ksymtab_gpl+nf_getsockopt)) \
KEEP(*(___ksymtab_gpl+nf_hook_slow)) \
KEEP(*(___ksymtab_gpl+nf_hooks_needed)) \
KEEP(*(___ksymtab_gpl+nf_ipv6_ops)) \
KEEP(*(___ksymtab_gpl+nf_log_buf_add)) \
KEEP(*(___ksymtab_gpl+nf_log_buf_close)) \
KEEP(*(___ksymtab_gpl+nf_log_buf_open)) \
KEEP(*(___ksymtab_gpl+nf_log_dump_packet_common)) \
KEEP(*(___ksymtab_gpl+nf_log_dump_sk_uid_gid)) \
KEEP(*(___ksymtab_gpl+nf_log_dump_tcp_header)) \
KEEP(*(___ksymtab_gpl+nf_log_dump_udp_header)) \
KEEP(*(___ksymtab_gpl+nf_log_packet)) \
KEEP(*(___ksymtab_gpl+nf_log_register)) \
KEEP(*(___ksymtab_gpl+nf_log_set)) \
KEEP(*(___ksymtab_gpl+nf_log_unregister)) \
KEEP(*(___ksymtab_gpl+nf_log_unset)) \
KEEP(*(___ksymtab_gpl+nf_nat_alloc_null_binding)) \
KEEP(*(___ksymtab_gpl+nf_nat_l3proto_register)) \
KEEP(*(___ksymtab_gpl+nf_nat_l3proto_unregister)) \
KEEP(*(___ksymtab_gpl+__nf_nat_l4proto_find)) \
KEEP(*(___ksymtab_gpl+nf_nat_l4proto_in_range)) \
KEEP(*(___ksymtab_gpl+nf_nat_l4proto_register)) \
KEEP(*(___ksymtab_gpl+nf_nat_l4proto_unique_tuple)) \
KEEP(*(___ksymtab_gpl+nf_nat_l4proto_unregister)) \
KEEP(*(___ksymtab_gpl+__nf_nat_mangle_tcp_packet)) \
KEEP(*(___ksymtab_gpl+nf_nat_mangle_udp_packet)) \
KEEP(*(___ksymtab_gpl+nf_nat_packet)) \
KEEP(*(___ksymtab_gpl+nf_nat_setup_info)) \
KEEP(*(___ksymtab_gpl+nf_nat_used_tuple)) \
KEEP(*(___ksymtab_gpl+nfnetlink_has_listeners)) \
KEEP(*(___ksymtab_gpl+nfnetlink_parse_nat_setup_hook)) \
KEEP(*(___ksymtab_gpl+nfnetlink_unicast)) \
KEEP(*(___ksymtab_gpl+nf_queue_entry_get_refs)) \
KEEP(*(___ksymtab_gpl+nf_queue_entry_release_refs)) \
KEEP(*(___ksymtab_gpl+nf_register_afinfo)) \
KEEP(*(___ksymtab_gpl+nf_register_hooks)) \
KEEP(*(___ksymtab_gpl+nf_register_net_hooks)) \
KEEP(*(___ksymtab_gpl+nf_register_queue_imq_handler)) \
KEEP(*(___ksymtab_gpl+nf_register_sockopt)) \
KEEP(*(___ksymtab_gpl+nf_reinject)) \
KEEP(*(___ksymtab_gpl+nf_setsockopt)) \
KEEP(*(___ksymtab_gpl+nf_skb_duplicated)) \
KEEP(*(___ksymtab_gpl+nf_unregister_afinfo)) \
KEEP(*(___ksymtab_gpl+nf_unregister_hooks)) \
KEEP(*(___ksymtab_gpl+nf_unregister_net_hooks)) \
KEEP(*(___ksymtab_gpl+nf_unregister_queue_imq_handler)) \
KEEP(*(___ksymtab_gpl+nf_unregister_sockopt)) \
KEEP(*(___ksymtab_gpl+nf_xfrm_me_harder)) \
KEEP(*(___ksymtab_gpl+nla_find)) \
KEEP(*(___ksymtab_gpl+nla_memcmp)) \
KEEP(*(___ksymtab_gpl+nla_memcpy)) \
KEEP(*(___ksymtab_gpl+nla_parse)) \
KEEP(*(___ksymtab_gpl+__nla_put)) \
KEEP(*(___ksymtab_gpl+nla_put)) \
KEEP(*(___ksymtab_gpl+__nla_put_nohdr)) \
KEEP(*(___ksymtab_gpl+nla_put_nohdr)) \
KEEP(*(___ksymtab_gpl+__nla_reserve)) \
KEEP(*(___ksymtab_gpl+nla_reserve)) \
KEEP(*(___ksymtab_gpl+__nla_reserve_nohdr)) \
KEEP(*(___ksymtab_gpl+nla_reserve_nohdr)) \
KEEP(*(___ksymtab_gpl+nla_strcmp)) \
KEEP(*(___ksymtab_gpl+nla_strlcpy)) \
KEEP(*(___ksymtab_gpl+__nlmsg_put)) \
KEEP(*(___ksymtab_gpl+no_llseek)) \
KEEP(*(___ksymtab_gpl+nonseekable_open)) \
KEEP(*(___ksymtab_gpl+noop_backing_dev_info)) \
KEEP(*(___ksymtab_gpl+noop_llseek)) \
KEEP(*(___ksymtab_gpl+noop_qdisc)) \
KEEP(*(___ksymtab_gpl+nosteal_pipe_buf_ops)) \
KEEP(*(___ksymtab_gpl+nr_cpu_ids)) \
KEEP(*(___ksymtab_gpl+nr_free_buffer_pages)) \
KEEP(*(___ksymtab_gpl+ns_capable)) \
KEEP(*(___ksymtab_gpl+ns_capable_noaudit)) \
KEEP(*(___ksymtab_gpl+nsecs_to_jiffies)) \
KEEP(*(___ksymtab_gpl+nsecs_to_jiffies64)) \
KEEP(*(___ksymtab_gpl+nvram_get)) \
KEEP(*(___ksymtab_gpl+nvram_getall)) \
KEEP(*(___ksymtab_gpl+of_phy_get)) \
KEEP(*(___ksymtab_gpl+osl_acp_war_enab)) \
KEEP(*(___ksymtab_gpl+osl_arch_is_coherent)) \
KEEP(*(___ksymtab_gpl+osl_attach)) \
KEEP(*(___ksymtab_gpl+osl_cache_flush)) \
KEEP(*(___ksymtab_gpl+osl_cache_inv)) \
KEEP(*(___ksymtab_gpl+osl_cpu_relax)) \
KEEP(*(___ksymtab_gpl+osl_delay)) \
KEEP(*(___ksymtab_gpl+osl_detach)) \
KEEP(*(___ksymtab_gpl+osl_dma_alloc_consistent)) \
KEEP(*(___ksymtab_gpl+osl_dma_free_consistent)) \
KEEP(*(___ksymtab_gpl+osl_dma_map)) \
KEEP(*(___ksymtab_gpl+osl_dma_unmap)) \
KEEP(*(___ksymtab_gpl+osl_error)) \
KEEP(*(___ksymtab_gpl+osl_flag_set)) \
KEEP(*(___ksymtab_gpl+osl_malloc)) \
KEEP(*(___ksymtab_gpl+osl_malloced)) \
KEEP(*(___ksymtab_gpl+osl_malloc_failed)) \
KEEP(*(___ksymtab_gpl+osl_mallocz)) \
KEEP(*(___ksymtab_gpl+osl_mfree)) \
KEEP(*(___ksymtab_gpl+osl_pci_bus)) \
KEEP(*(___ksymtab_gpl+osl_pci_device)) \
KEEP(*(___ksymtab_gpl+osl_pcie_bus)) \
KEEP(*(___ksymtab_gpl+osl_pcie_domain)) \
KEEP(*(___ksymtab_gpl+osl_pcie_rreg)) \
KEEP(*(___ksymtab_gpl+osl_pci_read_config)) \
KEEP(*(___ksymtab_gpl+osl_pci_slot)) \
KEEP(*(___ksymtab_gpl+osl_pci_write_config)) \
KEEP(*(___ksymtab_gpl+osl_pcmcia_read_attr)) \
KEEP(*(___ksymtab_gpl+osl_pcmcia_write_attr)) \
KEEP(*(___ksymtab_gpl+osl_pktalloced)) \
KEEP(*(___ksymtab_gpl+osl_pktdup)) \
KEEP(*(___ksymtab_gpl+osl_pktfree)) \
KEEP(*(___ksymtab_gpl+osl_pkt_frmnative)) \
KEEP(*(___ksymtab_gpl+osl_pktget)) \
KEEP(*(___ksymtab_gpl+osl_pkt_tonative)) \
KEEP(*(___ksymtab_gpl+osl_prefetch)) \
KEEP(*(___ksymtab_gpl+osl_sleep)) \
KEEP(*(___ksymtab_gpl+osl_static_mem_init)) \
KEEP(*(___ksymtab_gpl+otp_read_word)) \
KEEP(*(___ksymtab_gpl+out_of_line_wait_on_atomic_t)) \
KEEP(*(___ksymtab_gpl+out_of_line_wait_on_bit)) \
KEEP(*(___ksymtab_gpl+out_of_line_wait_on_bit_lock)) \
KEEP(*(___ksymtab_gpl+out_of_line_wait_on_bit_timeout)) \
KEEP(*(___ksymtab_gpl+overflowgid)) \
KEEP(*(___ksymtab_gpl+overflowuid)) \
KEEP(*(___ksymtab_gpl+override_creds)) \
KEEP(*(___ksymtab_gpl+page_address)) \
KEEP(*(___ksymtab_gpl+pagecache_get_page)) \
KEEP(*(___ksymtab_gpl+pagecache_isize_extended)) \
KEEP(*(___ksymtab_gpl+page_cache_sync_readahead)) \
KEEP(*(___ksymtab_gpl+pagecache_write_begin)) \
KEEP(*(___ksymtab_gpl+pagecache_write_end)) \
KEEP(*(___ksymtab_gpl+page_follow_link_light)) \
KEEP(*(___ksymtab_gpl+page_put_link)) \
KEEP(*(___ksymtab_gpl+__page_symlink)) \
KEEP(*(___ksymtab_gpl+page_symlink)) \
KEEP(*(___ksymtab_gpl+page_symlink_inode_operations)) \
KEEP(*(___ksymtab_gpl+pagevec_lookup)) \
KEEP(*(___ksymtab_gpl+pagevec_lookup_tag)) \
KEEP(*(___ksymtab_gpl+__pagevec_release)) \
KEEP(*(___ksymtab_gpl+panic)) \
KEEP(*(___ksymtab_gpl+panic_blink)) \
KEEP(*(___ksymtab_gpl+panic_notifier_list)) \
KEEP(*(___ksymtab_gpl+panic_timeout)) \
KEEP(*(___ksymtab_gpl+param_array_ops)) \
KEEP(*(___ksymtab_gpl+param_get_string)) \
KEEP(*(___ksymtab_gpl+param_get_uint)) \
KEEP(*(___ksymtab_gpl+param_ops_bool)) \
KEEP(*(___ksymtab_gpl+param_ops_bool_enable_only)) \
KEEP(*(___ksymtab_gpl+param_ops_charp)) \
KEEP(*(___ksymtab_gpl+param_ops_int)) \
KEEP(*(___ksymtab_gpl+param_ops_string)) \
KEEP(*(___ksymtab_gpl+param_ops_uint)) \
KEEP(*(___ksymtab_gpl+param_ops_ullong)) \
KEEP(*(___ksymtab_gpl+param_ops_ulong)) \
KEEP(*(___ksymtab_gpl+param_ops_ushort)) \
KEEP(*(___ksymtab_gpl+param_set_copystring)) \
KEEP(*(___ksymtab_gpl+param_set_uint)) \
KEEP(*(___ksymtab_gpl+passthru_features_check)) \
KEEP(*(___ksymtab_gpl+path_put)) \
KEEP(*(___ksymtab_gpl+pcibios_fixup_bus)) \
KEEP(*(___ksymtab_gpl+pci_bus_read_config_byte)) \
KEEP(*(___ksymtab_gpl+pci_bus_read_config_dword)) \
KEEP(*(___ksymtab_gpl+pci_bus_read_config_word)) \
KEEP(*(___ksymtab_gpl+pci_bus_write_config_byte)) \
KEEP(*(___ksymtab_gpl+pci_bus_write_config_dword)) \
KEEP(*(___ksymtab_gpl+pci_cleanup_aer_uncorrect_error_status)) \
KEEP(*(___ksymtab_gpl+__pci_complete_power_transition)) \
KEEP(*(___ksymtab_gpl+pcicore_down)) \
KEEP(*(___ksymtab_gpl+pcicore_hwup)) \
KEEP(*(___ksymtab_gpl+pcicore_up)) \
KEEP(*(___ksymtab_gpl+pci_dev_put)) \
KEEP(*(___ksymtab_gpl+pci_dev_run_wake)) \
KEEP(*(___ksymtab_gpl+pci_disable_device)) \
KEEP(*(___ksymtab_gpl+pci_enable_device)) \
KEEP(*(___ksymtab_gpl+pci_enable_device_io)) \
KEEP(*(___ksymtab_gpl+pci_enable_device_mem)) \
KEEP(*(___ksymtab_gpl+__pci_enable_wake)) \
KEEP(*(___ksymtab_gpl+pcie_update_link_speed)) \
KEEP(*(___ksymtab_gpl+pcie_war_ovr_aspm_update)) \
KEEP(*(___ksymtab_gpl+pci_find_capability)) \
KEEP(*(___ksymtab_gpl+pci_fixup_cardbus)) \
KEEP(*(___ksymtab_gpl+pci_fixup_device)) \
KEEP(*(___ksymtab_gpl+pci_fixup_irqs)) \
KEEP(*(___ksymtab_gpl+pci_get_device)) \
KEEP(*(___ksymtab_gpl+pci_get_slot)) \
KEEP(*(___ksymtab_gpl+pci_intx_mask_supported)) \
KEEP(*(___ksymtab_gpl+pci_ioremap_bar)) \
KEEP(*(___ksymtab_gpl+pci_ioremap_io)) \
KEEP(*(___ksymtab_gpl+pci_ioremap_wc_bar)) \
KEEP(*(___ksymtab_gpl+pci_iounmap)) \
KEEP(*(___ksymtab_gpl+pci_lost_interrupt)) \
KEEP(*(___ksymtab_gpl+pci_match_id)) \
KEEP(*(___ksymtab_gpl+pcim_iounmap)) \
KEEP(*(___ksymtab_gpl+pcim_iounmap_regions)) \
KEEP(*(___ksymtab_gpl+pci_pme_capable)) \
KEEP(*(___ksymtab_gpl+__pci_register_driver)) \
KEEP(*(___ksymtab_gpl+pci_restore_state)) \
KEEP(*(___ksymtab_gpl+pci_save_state)) \
KEEP(*(___ksymtab_gpl+pci_set_master)) \
KEEP(*(___ksymtab_gpl+pci_set_mwi)) \
KEEP(*(___ksymtab_gpl+pci_set_power_state)) \
KEEP(*(___ksymtab_gpl+pci_setup_cardbus)) \
KEEP(*(___ksymtab_gpl+pci_unregister_driver)) \
KEEP(*(___ksymtab_gpl+pci_user_read_config_byte)) \
KEEP(*(___ksymtab_gpl+pci_user_read_config_dword)) \
KEEP(*(___ksymtab_gpl+pci_user_read_config_word)) \
KEEP(*(___ksymtab_gpl+PDE_DATA)) \
KEEP(*(___ksymtab_gpl+peernet2id_alloc)) \
KEEP(*(___ksymtab_gpl+__percpu_counter_add)) \
KEEP(*(___ksymtab_gpl+percpu_counter_batch)) \
KEEP(*(___ksymtab_gpl+percpu_counter_destroy)) \
KEEP(*(___ksymtab_gpl+__percpu_counter_init)) \
KEEP(*(___ksymtab_gpl+__percpu_counter_sum)) \
KEEP(*(___ksymtab_gpl+percpu_down_read)) \
KEEP(*(___ksymtab_gpl+percpu_down_write)) \
KEEP(*(___ksymtab_gpl+__per_cpu_offset)) \
KEEP(*(___ksymtab_gpl+percpu_up_read)) \
KEEP(*(___ksymtab_gpl+percpu_up_write)) \
KEEP(*(___ksymtab_gpl+phy_create_lookup)) \
KEEP(*(___ksymtab_gpl+phy_device_create)) \
KEEP(*(___ksymtab_gpl+phy_device_register)) \
KEEP(*(___ksymtab_gpl+phy_driver_register)) \
KEEP(*(___ksymtab_gpl+phy_drivers_register)) \
KEEP(*(___ksymtab_gpl+phy_drivers_unregister)) \
KEEP(*(___ksymtab_gpl+phy_driver_unregister)) \
KEEP(*(___ksymtab_gpl+phy_exit)) \
KEEP(*(___ksymtab_gpl+phy_get)) \
KEEP(*(___ksymtab_gpl+phy_get_eee_err)) \
KEEP(*(___ksymtab_gpl+phy_init)) \
KEEP(*(___ksymtab_gpl+phy_init_eee)) \
KEEP(*(___ksymtab_gpl+phy_init_hw)) \
KEEP(*(___ksymtab_gpl+phy_mac_interrupt)) \
KEEP(*(___ksymtab_gpl+phy_power_off)) \
KEEP(*(___ksymtab_gpl+phy_power_on)) \
KEEP(*(___ksymtab_gpl+phy_put)) \
KEEP(*(___ksymtab_gpl+phy_register_fixup)) \
KEEP(*(___ksymtab_gpl+phy_register_fixup_for_id)) \
KEEP(*(___ksymtab_gpl+phy_register_fixup_for_uid)) \
KEEP(*(___ksymtab_gpl+phy_remove_lookup)) \
KEEP(*(___ksymtab_gpl+phy_start_interrupts)) \
KEEP(*(___ksymtab_gpl+phy_stop_interrupts)) \
KEEP(*(___ksymtab_gpl+pid_nr_ns)) \
KEEP(*(___ksymtab_gpl+ping_bind)) \
KEEP(*(___ksymtab_gpl+ping_close)) \
KEEP(*(___ksymtab_gpl+ping_common_sendmsg)) \
KEEP(*(___ksymtab_gpl+ping_err)) \
KEEP(*(___ksymtab_gpl+ping_getfrag)) \
KEEP(*(___ksymtab_gpl+ping_get_port)) \
KEEP(*(___ksymtab_gpl+ping_hash)) \
KEEP(*(___ksymtab_gpl+ping_init_sock)) \
KEEP(*(___ksymtab_gpl+ping_proc_register)) \
KEEP(*(___ksymtab_gpl+ping_proc_unregister)) \
KEEP(*(___ksymtab_gpl+ping_queue_rcv_skb)) \
KEEP(*(___ksymtab_gpl+ping_rcv)) \
KEEP(*(___ksymtab_gpl+ping_recvmsg)) \
KEEP(*(___ksymtab_gpl+ping_seq_fops)) \
KEEP(*(___ksymtab_gpl+ping_seq_next)) \
KEEP(*(___ksymtab_gpl+ping_seq_start)) \
KEEP(*(___ksymtab_gpl+ping_seq_stop)) \
KEEP(*(___ksymtab_gpl+ping_unhash)) \
KEEP(*(___ksymtab_gpl+pingv6_ops)) \
KEEP(*(___ksymtab_gpl+pipe_lock)) \
KEEP(*(___ksymtab_gpl+pipe_unlock)) \
KEEP(*(___ksymtab_gpl+pktcopy)) \
KEEP(*(___ksymtab_gpl+pktgetdscp)) \
KEEP(*(___ksymtab_gpl+pktlast)) \
KEEP(*(___ksymtab_gpl+pktq_deq)) \
KEEP(*(___ksymtab_gpl+pktq_deq_tail)) \
KEEP(*(___ksymtab_gpl+pktq_flush)) \
KEEP(*(___ksymtab_gpl+pktq_init)) \
KEEP(*(___ksymtab_gpl+pktq_mdeq)) \
KEEP(*(___ksymtab_gpl+pktq_mlen)) \
KEEP(*(___ksymtab_gpl+pktq_pdeq)) \
KEEP(*(___ksymtab_gpl+pktq_pdeq_prev)) \
KEEP(*(___ksymtab_gpl+pktq_pdeq_tail)) \
KEEP(*(___ksymtab_gpl+pktq_pdeq_with_fn)) \
KEEP(*(___ksymtab_gpl+pktq_peek_tail)) \
KEEP(*(___ksymtab_gpl+pktq_penq)) \
KEEP(*(___ksymtab_gpl+pktq_penq_head)) \
KEEP(*(___ksymtab_gpl+pktq_pflush)) \
KEEP(*(___ksymtab_gpl+pktq_set_max_plen)) \
KEEP(*(___ksymtab_gpl+pktsegcnt)) \
KEEP(*(___ksymtab_gpl+pktsegcnt_war)) \
KEEP(*(___ksymtab_gpl+pktsetprio)) \
KEEP(*(___ksymtab_gpl+pkttotlen)) \
KEEP(*(___ksymtab_gpl+platform_bus)) \
KEEP(*(___ksymtab_gpl+platform_bus_type)) \
KEEP(*(___ksymtab_gpl+platform_device_add)) \
KEEP(*(___ksymtab_gpl+platform_device_add_data)) \
KEEP(*(___ksymtab_gpl+platform_device_add_resources)) \
KEEP(*(___ksymtab_gpl+platform_device_del)) \
KEEP(*(___ksymtab_gpl+platform_device_register)) \
KEEP(*(___ksymtab_gpl+platform_device_register_full)) \
KEEP(*(___ksymtab_gpl+platform_device_unregister)) \
KEEP(*(___ksymtab_gpl+__platform_driver_probe)) \
KEEP(*(___ksymtab_gpl+__platform_driver_register)) \
KEEP(*(___ksymtab_gpl+platform_driver_unregister)) \
KEEP(*(___ksymtab_gpl+platform_get_irq)) \
KEEP(*(___ksymtab_gpl+platform_get_irq_byname)) \
KEEP(*(___ksymtab_gpl+platform_get_resource)) \
KEEP(*(___ksymtab_gpl+platform_get_resource_byname)) \
KEEP(*(___ksymtab_gpl+pm_qos_update_request)) \
KEEP(*(___ksymtab_gpl+pneigh_enqueue)) \
KEEP(*(___ksymtab_gpl+__pneigh_lookup)) \
KEEP(*(___ksymtab_gpl+pneigh_lookup)) \
KEEP(*(___ksymtab_gpl+poll_schedule_timeout)) \
KEEP(*(___ksymtab_gpl+posix_acl_access_xattr_handler)) \
KEEP(*(___ksymtab_gpl+posix_acl_alloc)) \
KEEP(*(___ksymtab_gpl+__posix_acl_chmod)) \
KEEP(*(___ksymtab_gpl+posix_acl_chmod)) \
KEEP(*(___ksymtab_gpl+__posix_acl_create)) \
KEEP(*(___ksymtab_gpl+posix_acl_create)) \
KEEP(*(___ksymtab_gpl+posix_acl_default_xattr_handler)) \
KEEP(*(___ksymtab_gpl+posix_acl_update_mode)) \
KEEP(*(___ksymtab_gpl+posix_lock_file)) \
KEEP(*(___ksymtab_gpl+posix_test_lock)) \
KEEP(*(___ksymtab_gpl+posix_unblock_lock)) \
KEEP(*(___ksymtab_gpl+ppp_dev_name)) \
KEEP(*(___ksymtab_gpl+ppp_input)) \
KEEP(*(___ksymtab_gpl+ppp_input_error)) \
KEEP(*(___ksymtab_gpl+ppp_output_wakeup)) \
KEEP(*(___ksymtab_gpl+pppox_ioctl)) \
KEEP(*(___ksymtab_gpl+pppox_unbind_sock)) \
KEEP(*(___ksymtab_gpl+ppp_register_channel)) \
KEEP(*(___ksymtab_gpl+ppp_register_net_channel)) \
KEEP(*(___ksymtab_gpl+prandom_seed)) \
KEEP(*(___ksymtab_gpl+prandom_u32)) \
KEEP(*(___ksymtab_gpl+prandom_u32_state)) \
KEEP(*(___ksymtab_gpl+prepare_kernel_cred)) \
KEEP(*(___ksymtab_gpl+prepare_to_wait)) \
KEEP(*(___ksymtab_gpl+prepare_to_wait_event)) \
KEEP(*(___ksymtab_gpl+prepare_to_wait_exclusive)) \
KEEP(*(___ksymtab_gpl+prhex)) \
KEEP(*(___ksymtab_gpl+print_hex_dump)) \
KEEP(*(___ksymtab_gpl+print_hex_dump_bytes)) \
KEEP(*(___ksymtab_gpl+printk)) \
KEEP(*(___ksymtab_gpl+printk_emit)) \
KEEP(*(___ksymtab_gpl+__printk_ratelimit)) \
KEEP(*(___ksymtab_gpl+printk_timed_ratelimit)) \
KEEP(*(___ksymtab_gpl+print_tuple)) \
KEEP(*(___ksymtab_gpl+probe_kernel_read)) \
KEEP(*(___ksymtab_gpl+probe_user_read)) \
KEEP(*(___ksymtab_gpl+proc_create_data)) \
KEEP(*(___ksymtab_gpl+proc_dointvec)) \
KEEP(*(___ksymtab_gpl+proc_dointvec_jiffies)) \
KEEP(*(___ksymtab_gpl+proc_dointvec_minmax)) \
KEEP(*(___ksymtab_gpl+proc_dointvec_ms_jiffies)) \
KEEP(*(___ksymtab_gpl+proc_dointvec_userhz_jiffies)) \
KEEP(*(___ksymtab_gpl+proc_dostring)) \
KEEP(*(___ksymtab_gpl+proc_doulongvec_minmax)) \
KEEP(*(___ksymtab_gpl+proc_doulongvec_ms_jiffies_minmax)) \
KEEP(*(___ksymtab_gpl+proc_mkdir)) \
KEEP(*(___ksymtab_gpl+proc_mkdir_data)) \
KEEP(*(___ksymtab_gpl+proc_mkdir_mode)) \
KEEP(*(___ksymtab_gpl+proc_remove)) \
KEEP(*(___ksymtab_gpl+proto_register)) \
KEEP(*(___ksymtab_gpl+proto_unregister)) \
KEEP(*(___ksymtab_gpl+__pskb_copy_fclone)) \
KEEP(*(___ksymtab_gpl+pskb_expand_head)) \
KEEP(*(___ksymtab_gpl+__pskb_pull_tail)) \
KEEP(*(___ksymtab_gpl+pskb_put)) \
KEEP(*(___ksymtab_gpl+___pskb_trim)) \
KEEP(*(___ksymtab_gpl+pskb_trim_rcsum_slow)) \
KEEP(*(___ksymtab_gpl+put_cmsg)) \
KEEP(*(___ksymtab_gpl+__put_cred)) \
KEEP(*(___ksymtab_gpl+put_device)) \
KEEP(*(___ksymtab_gpl+put_disk)) \
KEEP(*(___ksymtab_gpl+put_page)) \
KEEP(*(___ksymtab_gpl+put_pages_list)) \
KEEP(*(___ksymtab_gpl+put_pid)) \
KEEP(*(___ksymtab_gpl+__put_task_struct)) \
KEEP(*(___ksymtab_gpl+put_tty_driver)) \
KEEP(*(___ksymtab_gpl+__put_user_1)) \
KEEP(*(___ksymtab_gpl+__put_user_2)) \
KEEP(*(___ksymtab_gpl+__put_user_4)) \
KEEP(*(___ksymtab_gpl+__qdisc_calculate_pkt_len)) \
KEEP(*(___ksymtab_gpl+qdisc_dequeue_skb)) \
KEEP(*(___ksymtab_gpl+qdisc_tree_reduce_backlog)) \
KEEP(*(___ksymtab_gpl+qdisc_watchdog_schedule_ns)) \
KEEP(*(___ksymtab_gpl+queue_delayed_work_on)) \
KEEP(*(___ksymtab_gpl+queue_work_on)) \
KEEP(*(___ksymtab_gpl+radix_tree_delete)) \
KEEP(*(___ksymtab_gpl+radix_tree_delete_item)) \
KEEP(*(___ksymtab_gpl+radix_tree_gang_lookup)) \
KEEP(*(___ksymtab_gpl+radix_tree_gang_lookup_slot)) \
KEEP(*(___ksymtab_gpl+radix_tree_gang_lookup_tag)) \
KEEP(*(___ksymtab_gpl+radix_tree_gang_lookup_tag_slot)) \
KEEP(*(___ksymtab_gpl+radix_tree_insert)) \
KEEP(*(___ksymtab_gpl+radix_tree_lookup)) \
KEEP(*(___ksymtab_gpl+radix_tree_lookup_slot)) \
KEEP(*(___ksymtab_gpl+radix_tree_maybe_preload)) \
KEEP(*(___ksymtab_gpl+radix_tree_tag_clear)) \
KEEP(*(___ksymtab_gpl+radix_tree_tag_get)) \
KEEP(*(___ksymtab_gpl+radix_tree_tag_set)) \
KEEP(*(___ksymtab_gpl+___ratelimit)) \
KEEP(*(___ksymtab_gpl+raw_hash_sk)) \
KEEP(*(___ksymtab_gpl+_raw_read_lock)) \
KEEP(*(___ksymtab_gpl+_raw_read_lock_bh)) \
KEEP(*(___ksymtab_gpl+_raw_read_lock_irq)) \
KEEP(*(___ksymtab_gpl+_raw_read_lock_irqsave)) \
KEEP(*(___ksymtab_gpl+_raw_read_trylock)) \
KEEP(*(___ksymtab_gpl+_raw_read_unlock_bh)) \
KEEP(*(___ksymtab_gpl+_raw_read_unlock_irqrestore)) \
KEEP(*(___ksymtab_gpl+raw_seq_next)) \
KEEP(*(___ksymtab_gpl+raw_seq_open)) \
KEEP(*(___ksymtab_gpl+raw_seq_start)) \
KEEP(*(___ksymtab_gpl+raw_seq_stop)) \
KEEP(*(___ksymtab_gpl+_raw_spin_lock)) \
KEEP(*(___ksymtab_gpl+_raw_spin_lock_bh)) \
KEEP(*(___ksymtab_gpl+_raw_spin_lock_irq)) \
KEEP(*(___ksymtab_gpl+_raw_spin_lock_irqsave)) \
KEEP(*(___ksymtab_gpl+_raw_spin_trylock)) \
KEEP(*(___ksymtab_gpl+_raw_spin_trylock_bh)) \
KEEP(*(___ksymtab_gpl+_raw_spin_unlock_bh)) \
KEEP(*(___ksymtab_gpl+_raw_spin_unlock_irqrestore)) \
KEEP(*(___ksymtab_gpl+raw_unhash_sk)) \
KEEP(*(___ksymtab_gpl+_raw_write_lock)) \
KEEP(*(___ksymtab_gpl+_raw_write_lock_bh)) \
KEEP(*(___ksymtab_gpl+_raw_write_lock_irq)) \
KEEP(*(___ksymtab_gpl+_raw_write_lock_irqsave)) \
KEEP(*(___ksymtab_gpl+_raw_write_trylock)) \
KEEP(*(___ksymtab_gpl+_raw_write_unlock_bh)) \
KEEP(*(___ksymtab_gpl+_raw_write_unlock_irqrestore)) \
KEEP(*(___ksymtab_gpl+rb_erase)) \
KEEP(*(___ksymtab_gpl+__rb_erase_color)) \
KEEP(*(___ksymtab_gpl+rb_first)) \
KEEP(*(___ksymtab_gpl+rb_first_postorder)) \
KEEP(*(___ksymtab_gpl+rb_insert_color)) \
KEEP(*(___ksymtab_gpl+rb_last)) \
KEEP(*(___ksymtab_gpl+rb_next)) \
KEEP(*(___ksymtab_gpl+rb_next_postorder)) \
KEEP(*(___ksymtab_gpl+rb_prev)) \
KEEP(*(___ksymtab_gpl+rb_replace_node)) \
KEEP(*(___ksymtab_gpl+rcu_barrier)) \
KEEP(*(___ksymtab_gpl+rcu_barrier_bh)) \
KEEP(*(___ksymtab_gpl+rcu_barrier_sched)) \
KEEP(*(___ksymtab_gpl+rcu_batches_completed)) \
KEEP(*(___ksymtab_gpl+rcu_batches_completed_bh)) \
KEEP(*(___ksymtab_gpl+rcu_batches_completed_sched)) \
KEEP(*(___ksymtab_gpl+rcu_scheduler_active)) \
KEEP(*(___ksymtab_gpl+read_cache_page)) \
KEEP(*(___ksymtab_gpl+read_cache_page_gfp)) \
KEEP(*(___ksymtab_gpl+read_cache_pages)) \
KEEP(*(___ksymtab_gpl+read_current_timer)) \
KEEP(*(___ksymtab_gpl+read_dev_sector)) \
KEEP(*(___ksymtab_gpl+reciprocal_value)) \
KEEP(*(___ksymtab_gpl+redirty_page_for_writepage)) \
KEEP(*(___ksymtab_gpl+register_blkdev)) \
KEEP(*(___ksymtab_gpl+__register_chrdev)) \
KEEP(*(___ksymtab_gpl+register_chrdev_region)) \
KEEP(*(___ksymtab_gpl+register_filesystem)) \
KEEP(*(___ksymtab_gpl+register_inetaddr_notifier)) \
KEEP(*(___ksymtab_gpl+register_key_type)) \
KEEP(*(___ksymtab_gpl+register_netdev)) \
KEEP(*(___ksymtab_gpl+register_netdevice)) \
KEEP(*(___ksymtab_gpl+register_netdevice_notifier)) \
KEEP(*(___ksymtab_gpl+register_net_sysctl)) \
KEEP(*(___ksymtab_gpl+__register_nls)) \
KEEP(*(___ksymtab_gpl+register_pernet_device)) \
KEEP(*(___ksymtab_gpl+register_pernet_subsys)) \
KEEP(*(___ksymtab_gpl+register_pppox_proto)) \
KEEP(*(___ksymtab_gpl+register_qdisc)) \
KEEP(*(___ksymtab_gpl+register_reboot_notifier)) \
KEEP(*(___ksymtab_gpl+register_shrinker)) \
KEEP(*(___ksymtab_gpl+register_sysctl_table)) \
KEEP(*(___ksymtab_gpl+release_pages)) \
KEEP(*(___ksymtab_gpl+__release_region)) \
KEEP(*(___ksymtab_gpl+release_sock)) \
KEEP(*(___ksymtab_gpl+remap_vmalloc_range)) \
KEEP(*(___ksymtab_gpl+remap_vmalloc_range_partial)) \
KEEP(*(___ksymtab_gpl+remove_proc_entry)) \
KEEP(*(___ksymtab_gpl+remove_wait_queue)) \
KEEP(*(___ksymtab_gpl+rename_lock)) \
KEEP(*(___ksymtab_gpl+replace_page_cache_page)) \
KEEP(*(___ksymtab_gpl+request_key)) \
KEEP(*(___ksymtab_gpl+request_key_async)) \
KEEP(*(___ksymtab_gpl+request_key_async_with_auxdata)) \
KEEP(*(___ksymtab_gpl+request_key_with_auxdata)) \
KEEP(*(___ksymtab_gpl+__request_module)) \
KEEP(*(___ksymtab_gpl+__request_region)) \
KEEP(*(___ksymtab_gpl+request_threaded_irq)) \
KEEP(*(___ksymtab_gpl+revalidate_disk)) \
KEEP(*(___ksymtab_gpl+revert_creds)) \
KEEP(*(___ksymtab_gpl+rfkill_alloc)) \
KEEP(*(___ksymtab_gpl+rfkill_destroy)) \
KEEP(*(___ksymtab_gpl+rfkill_init_sw_state)) \
KEEP(*(___ksymtab_gpl+rfkill_register)) \
KEEP(*(___ksymtab_gpl+rfkill_set_hw_state)) \
KEEP(*(___ksymtab_gpl+rfkill_unregister)) \
KEEP(*(___ksymtab_gpl+rhashtable_init)) \
KEEP(*(___ksymtab_gpl+robo_power_save_mode_get)) \
KEEP(*(___ksymtab_gpl+robo_power_save_mode_set)) \
KEEP(*(___ksymtab_gpl+robo_power_save_mode_update)) \
KEEP(*(___ksymtab_gpl+robo_power_save_toggle)) \
KEEP(*(___ksymtab_gpl+robo_watchdog)) \
KEEP(*(___ksymtab_gpl+__root_device_register)) \
KEEP(*(___ksymtab_gpl+root_device_unregister)) \
KEEP(*(___ksymtab_gpl+__round_jiffies)) \
KEEP(*(___ksymtab_gpl+round_jiffies)) \
KEEP(*(___ksymtab_gpl+__round_jiffies_relative)) \
KEEP(*(___ksymtab_gpl+round_jiffies_relative)) \
KEEP(*(___ksymtab_gpl+__round_jiffies_up)) \
KEEP(*(___ksymtab_gpl+round_jiffies_up)) \
KEEP(*(___ksymtab_gpl+__round_jiffies_up_relative)) \
KEEP(*(___ksymtab_gpl+round_jiffies_up_relative)) \
KEEP(*(___ksymtab_gpl+rps_cpu_mask)) \
KEEP(*(___ksymtab_gpl+rps_sock_flow_table)) \
KEEP(*(___ksymtab_gpl+rq_flush_dcache_pages)) \
KEEP(*(___ksymtab_gpl+rtc_ktime_to_tm)) \
KEEP(*(___ksymtab_gpl+rt_dst_alloc)) \
KEEP(*(___ksymtab_gpl+rtmsg_ifinfo)) \
KEEP(*(___ksymtab_gpl+rt_mutex_lock)) \
KEEP(*(___ksymtab_gpl+rt_mutex_lock_interruptible)) \
KEEP(*(___ksymtab_gpl+rt_mutex_trylock)) \
KEEP(*(___ksymtab_gpl+rt_mutex_unlock)) \
KEEP(*(___ksymtab_gpl+rtnetlink_put_metrics)) \
KEEP(*(___ksymtab_gpl+rtnl_af_register)) \
KEEP(*(___ksymtab_gpl+__rtnl_af_unregister)) \
KEEP(*(___ksymtab_gpl+rtnl_af_unregister)) \
KEEP(*(___ksymtab_gpl+__rtnl_link_register)) \
KEEP(*(___ksymtab_gpl+rtnl_link_register)) \
KEEP(*(___ksymtab_gpl+__rtnl_link_unregister)) \
KEEP(*(___ksymtab_gpl+rtnl_link_unregister)) \
KEEP(*(___ksymtab_gpl+rtnl_lock)) \
KEEP(*(___ksymtab_gpl+rtnl_nla_parse_ifla)) \
KEEP(*(___ksymtab_gpl+rtnl_notify)) \
KEEP(*(___ksymtab_gpl+rtnl_put_cacheinfo)) \
KEEP(*(___ksymtab_gpl+__rtnl_register)) \
KEEP(*(___ksymtab_gpl+rtnl_register)) \
KEEP(*(___ksymtab_gpl+rtnl_set_sk_err)) \
KEEP(*(___ksymtab_gpl+rtnl_trylock)) \
KEEP(*(___ksymtab_gpl+rtnl_unicast)) \
KEEP(*(___ksymtab_gpl+rtnl_unlock)) \
KEEP(*(___ksymtab_gpl+rtnl_unregister)) \
KEEP(*(___ksymtab_gpl+rtnl_unregister_all)) \
KEEP(*(___ksymtab_gpl+rwsem_downgrade_wake)) \
KEEP(*(___ksymtab_gpl+rwsem_down_read_failed)) \
KEEP(*(___ksymtab_gpl+rwsem_down_write_failed)) \
KEEP(*(___ksymtab_gpl+save_mount_options)) \
KEEP(*(___ksymtab_gpl+sb800_prefetch)) \
KEEP(*(___ksymtab_gpl+__sb_end_write)) \
KEEP(*(___ksymtab_gpl+sb_iscoreup)) \
KEEP(*(___ksymtab_gpl+sb_min_blocksize)) \
KEEP(*(___ksymtab_gpl+sb_set_blocksize)) \
KEEP(*(___ksymtab_gpl+__sb_start_write)) \
KEEP(*(___ksymtab_gpl+scatterwalk_ffwd)) \
KEEP(*(___ksymtab_gpl+scatterwalk_map_and_copy)) \
KEEP(*(___ksymtab_gpl+sched_setscheduler)) \
KEEP(*(___ksymtab_gpl+sched_setscheduler_nocheck)) \
KEEP(*(___ksymtab_gpl+schedule)) \
KEEP(*(___ksymtab_gpl+schedule_hrtimeout)) \
KEEP(*(___ksymtab_gpl+schedule_hrtimeout_range)) \
KEEP(*(___ksymtab_gpl+schedule_timeout)) \
KEEP(*(___ksymtab_gpl+schedule_timeout_interruptible)) \
KEEP(*(___ksymtab_gpl+schedule_timeout_killable)) \
KEEP(*(___ksymtab_gpl+schedule_timeout_uninterruptible)) \
KEEP(*(___ksymtab_gpl+scm_fp_dup)) \
KEEP(*(___ksymtab_gpl+scnprintf)) \
KEEP(*(___ksymtab_gpl+scsi_cmd_blk_ioctl)) \
KEEP(*(___ksymtab_gpl+scsi_command_size_tbl)) \
KEEP(*(___ksymtab_gpl+scsi_verify_blk_ioctl)) \
KEEP(*(___ksymtab_gpl+__secpath_destroy)) \
KEEP(*(___ksymtab_gpl+secpath_dup)) \
KEEP(*(___ksymtab_gpl+secure_ipv6_port_ephemeral)) \
KEEP(*(___ksymtab_gpl+secure_tcpv6_sequence_number)) \
KEEP(*(___ksymtab_gpl+send_sig)) \
KEEP(*(___ksymtab_gpl+send_sig_info)) \
KEEP(*(___ksymtab_gpl+seq_escape)) \
KEEP(*(___ksymtab_gpl+seq_file_path)) \
KEEP(*(___ksymtab_gpl+seq_lseek)) \
KEEP(*(___ksymtab_gpl+seq_open)) \
KEEP(*(___ksymtab_gpl+seq_open_net)) \
KEEP(*(___ksymtab_gpl+__seq_open_private)) \
KEEP(*(___ksymtab_gpl+seq_open_private)) \
KEEP(*(___ksymtab_gpl+seq_printf)) \
KEEP(*(___ksymtab_gpl+seq_putc)) \
KEEP(*(___ksymtab_gpl+seq_puts)) \
KEEP(*(___ksymtab_gpl+seq_read)) \
KEEP(*(___ksymtab_gpl+seq_release)) \
KEEP(*(___ksymtab_gpl+seq_release_net)) \
KEEP(*(___ksymtab_gpl+seq_release_private)) \
KEEP(*(___ksymtab_gpl+serial8250_do_shutdown)) \
KEEP(*(___ksymtab_gpl+serial8250_do_startup)) \
KEEP(*(___ksymtab_gpl+set_anon_super)) \
KEEP(*(___ksymtab_gpl+setattr_copy)) \
KEEP(*(___ksymtab_gpl+set_bh_page)) \
KEEP(*(___ksymtab_gpl+_set_bit)) \
KEEP(*(___ksymtab_gpl+set_blocksize)) \
KEEP(*(___ksymtab_gpl+set_cached_acl)) \
KEEP(*(___ksymtab_gpl+set_current_groups)) \
KEEP(*(___ksymtab_gpl+set_disk_ro)) \
KEEP(*(___ksymtab_gpl+set_groups)) \
KEEP(*(___ksymtab_gpl+set_nlink)) \
KEEP(*(___ksymtab_gpl+set_page_dirty)) \
KEEP(*(___ksymtab_gpl+__set_page_dirty_buffers)) \
KEEP(*(___ksymtab_gpl+set_page_dirty_lock)) \
KEEP(*(___ksymtab_gpl+__set_page_dirty_nobuffers)) \
KEEP(*(___ksymtab_gpl+set_task_ioprio)) \
KEEP(*(___ksymtab_gpl+set_timer_slack)) \
KEEP(*(___ksymtab_gpl+setup_arg_pages)) \
KEEP(*(___ksymtab_gpl+setup_irq)) \
KEEP(*(___ksymtab_gpl+setup_max_cpus)) \
KEEP(*(___ksymtab_gpl+setup_new_exec)) \
KEEP(*(___ksymtab_gpl+set_user_nice)) \
KEEP(*(___ksymtab_gpl+set_wb_congested)) \
KEEP(*(___ksymtab_gpl+__sg_alloc_table)) \
KEEP(*(___ksymtab_gpl+sget)) \
KEEP(*(___ksymtab_gpl+__sg_free_table)) \
KEEP(*(___ksymtab_gpl+sg_init_one)) \
KEEP(*(___ksymtab_gpl+sg_init_table)) \
KEEP(*(___ksymtab_gpl+sg_miter_next)) \
KEEP(*(___ksymtab_gpl+sg_miter_skip)) \
KEEP(*(___ksymtab_gpl+sg_miter_start)) \
KEEP(*(___ksymtab_gpl+sg_miter_stop)) \
KEEP(*(___ksymtab_gpl+sg_nents)) \
KEEP(*(___ksymtab_gpl+sg_nents_for_len)) \
KEEP(*(___ksymtab_gpl+sg_next)) \
KEEP(*(___ksymtab_gpl+sg_scsi_ioctl)) \
KEEP(*(___ksymtab_gpl+sha1_finup_arm)) \
KEEP(*(___ksymtab_gpl+sha1_update_arm)) \
KEEP(*(___ksymtab_gpl+sha_init)) \
KEEP(*(___ksymtab_gpl+shash_ahash_finup)) \
KEEP(*(___ksymtab_gpl+shash_ahash_update)) \
KEEP(*(___ksymtab_gpl+shash_free_instance)) \
KEEP(*(___ksymtab_gpl+shash_register_instance)) \
KEEP(*(___ksymtab_gpl+sha_transform)) \
KEEP(*(___ksymtab_gpl+shmem_file_setup)) \
KEEP(*(___ksymtab_gpl+should_remove_suid)) \
KEEP(*(___ksymtab_gpl+shrink_dcache_parent)) \
KEEP(*(___ksymtab_gpl+si_alp_clock)) \
KEEP(*(___ksymtab_gpl+si_attach)) \
KEEP(*(___ksymtab_gpl+si_btc_enable_chipcontrol)) \
KEEP(*(___ksymtab_gpl+si_btcgpiowar)) \
KEEP(*(___ksymtab_gpl+si_btcombo_43228_war)) \
KEEP(*(___ksymtab_gpl+si_btcombo_p250_4313_war)) \
KEEP(*(___ksymtab_gpl+si_ccreg)) \
KEEP(*(___ksymtab_gpl+si_chipcontrl_btshd0_4331)) \
KEEP(*(___ksymtab_gpl+si_chipcontrl_epa4331)) \
KEEP(*(___ksymtab_gpl+si_chipcontrl_epa4331_wowl)) \
KEEP(*(___ksymtab_gpl+si_chipcontrl_srom4360)) \
KEEP(*(___ksymtab_gpl+si_clkctl_cc)) \
KEEP(*(___ksymtab_gpl+si_clkctl_fast_pwrup_delay)) \
KEEP(*(___ksymtab_gpl+si_clkctl_init)) \
KEEP(*(___ksymtab_gpl+si_clkctl_xtal)) \
KEEP(*(___ksymtab_gpl+si_clk_pmu_htavail_set)) \
KEEP(*(___ksymtab_gpl+si_clock)) \
KEEP(*(___ksymtab_gpl+si_clock_rate)) \
KEEP(*(___ksymtab_gpl+si_core_cflags)) \
KEEP(*(___ksymtab_gpl+si_core_cflags_wo)) \
KEEP(*(___ksymtab_gpl+si_core_disable)) \
KEEP(*(___ksymtab_gpl+si_coreid)) \
KEEP(*(___ksymtab_gpl+si_coreidx)) \
KEEP(*(___ksymtab_gpl+si_corereg)) \
KEEP(*(___ksymtab_gpl+si_corereg_addr)) \
KEEP(*(___ksymtab_gpl+si_corereg_ifup)) \
KEEP(*(___ksymtab_gpl+si_coreregs)) \
KEEP(*(___ksymtab_gpl+si_corereg_unit_ifup)) \
KEEP(*(___ksymtab_gpl+si_core_reset)) \
KEEP(*(___ksymtab_gpl+si_corerev)) \
KEEP(*(___ksymtab_gpl+si_core_sflags)) \
KEEP(*(___ksymtab_gpl+si_coreunit)) \
KEEP(*(___ksymtab_gpl+si_deregister_intr_callback)) \
KEEP(*(___ksymtab_gpl+si_detach)) \
KEEP(*(___ksymtab_gpl+si_deviceremoved)) \
KEEP(*(___ksymtab_gpl+si_epa_4313war)) \
KEEP(*(___ksymtab_gpl+si_fabid)) \
KEEP(*(___ksymtab_gpl+si_force_islanding)) \
KEEP(*(___ksymtab_gpl+si_gci_chipcontrol)) \
KEEP(*(___ksymtab_gpl+si_gci_enable_gpio)) \
KEEP(*(___ksymtab_gpl+si_gci_preinit_upd_indirect)) \
KEEP(*(___ksymtab_gpl+si_get_sromctl)) \
KEEP(*(___ksymtab_gpl+si_gpiocontrol)) \
KEEP(*(___ksymtab_gpl+si_gpioin)) \
KEEP(*(___ksymtab_gpl+si_gpiointmask)) \
KEEP(*(___ksymtab_gpl+si_gpiointpolarity)) \
KEEP(*(___ksymtab_gpl+si_gpioled)) \
KEEP(*(___ksymtab_gpl+si_gpioout)) \
KEEP(*(___ksymtab_gpl+si_gpioout2)) \
KEEP(*(___ksymtab_gpl+si_gpioouten)) \
KEEP(*(___ksymtab_gpl+si_gpioouten2)) \
KEEP(*(___ksymtab_gpl+si_gpiopull)) \
KEEP(*(___ksymtab_gpl+si_gpiosetcore)) \
KEEP(*(___ksymtab_gpl+si_gpiotimerval)) \
KEEP(*(___ksymtab_gpl+sigprocmask)) \
KEEP(*(___ksymtab_gpl+si_iscoreup)) \
KEEP(*(___ksymtab_gpl+si_is_sprom_available)) \
KEEP(*(___ksymtab_gpl+si_is_sprom_enabled)) \
KEEP(*(___ksymtab_gpl+si_kattach)) \
KEEP(*(___ksymtab_gpl+si_ldo_war)) \
KEEP(*(___ksymtab_gpl+si_lowpwr_opt)) \
KEEP(*(___ksymtab_gpl+si_mac_clk)) \
KEEP(*(___ksymtab_gpl+si_meminfo)) \
KEEP(*(___ksymtab_gpl+simple_attr_open)) \
KEEP(*(___ksymtab_gpl+simple_attr_read)) \
KEEP(*(___ksymtab_gpl+simple_attr_release)) \
KEEP(*(___ksymtab_gpl+simple_attr_write)) \
KEEP(*(___ksymtab_gpl+simple_dir_inode_operations)) \
KEEP(*(___ksymtab_gpl+simple_dir_operations)) \
KEEP(*(___ksymtab_gpl+simple_empty)) \
KEEP(*(___ksymtab_gpl+simple_fill_super)) \
KEEP(*(___ksymtab_gpl+simple_follow_link)) \
KEEP(*(___ksymtab_gpl+simple_lookup)) \
KEEP(*(___ksymtab_gpl+simple_open)) \
KEEP(*(___ksymtab_gpl+simple_pin_fs)) \
KEEP(*(___ksymtab_gpl+simple_read_from_buffer)) \
KEEP(*(___ksymtab_gpl+simple_release_fs)) \
KEEP(*(___ksymtab_gpl+simple_statfs)) \
KEEP(*(___ksymtab_gpl+simple_strtoul)) \
KEEP(*(___ksymtab_gpl+simple_strtoull)) \
KEEP(*(___ksymtab_gpl+simple_write_end)) \
KEEP(*(___ksymtab_gpl+single_open)) \
KEEP(*(___ksymtab_gpl+single_open_net)) \
KEEP(*(___ksymtab_gpl+single_open_size)) \
KEEP(*(___ksymtab_gpl+single_release)) \
KEEP(*(___ksymtab_gpl+single_release_net)) \
KEEP(*(___ksymtab_gpl+si_osh)) \
KEEP(*(___ksymtab_gpl+si_pci_down)) \
KEEP(*(___ksymtab_gpl+si_pcieclkreq)) \
KEEP(*(___ksymtab_gpl+si_pcie_configspace_cache)) \
KEEP(*(___ksymtab_gpl+si_pcie_configspace_restore)) \
KEEP(*(___ksymtab_gpl+si_pciedev_crwlpciegen2)) \
KEEP(*(___ksymtab_gpl+si_pciedev_reg_pm_clk_period)) \
KEEP(*(___ksymtab_gpl+si_pcie_get_L1substate)) \
KEEP(*(___ksymtab_gpl+si_pcie_get_request_size)) \
KEEP(*(___ksymtab_gpl+si_pcie_hw_LTR_war)) \
KEEP(*(___ksymtab_gpl+si_pcielcreg)) \
KEEP(*(___ksymtab_gpl+si_pcieltrenable)) \
KEEP(*(___ksymtab_gpl+si_pcie_ltr_war)) \
KEEP(*(___ksymtab_gpl+si_pcieobffenable)) \
KEEP(*(___ksymtab_gpl+si_pcie_power_save_enable)) \
KEEP(*(___ksymtab_gpl+si_pciereg)) \
KEEP(*(___ksymtab_gpl+si_pcieserdesreg)) \
KEEP(*(___ksymtab_gpl+si_pcie_set_ctrlreg)) \
KEEP(*(___ksymtab_gpl+si_pcie_set_L1substate)) \
KEEP(*(___ksymtab_gpl+si_pcie_set_maxpayload_size)) \
KEEP(*(___ksymtab_gpl+si_pcie_set_request_size)) \
KEEP(*(___ksymtab_gpl+si_pcie_war_ovr_update)) \
KEEP(*(___ksymtab_gpl+si_pci_fixcfg)) \
KEEP(*(___ksymtab_gpl+si_pci_setup)) \
KEEP(*(___ksymtab_gpl+si_pci_sleep)) \
KEEP(*(___ksymtab_gpl+si_pci_up)) \
KEEP(*(___ksymtab_gpl+si_pci_war16165)) \
KEEP(*(___ksymtab_gpl+si_pcmcia_init)) \
KEEP(*(___ksymtab_gpl+si_pmu_chipcontrol)) \
KEEP(*(___ksymtab_gpl+si_pmu_chip_init)) \
KEEP(*(___ksymtab_gpl+si_pmu_fast_pwrup_delay)) \
KEEP(*(___ksymtab_gpl+si_pmu_gband_spurwar)) \
KEEP(*(___ksymtab_gpl+si_pmu_get_bb_vcofreq)) \
KEEP(*(___ksymtab_gpl+si_pmu_is_autoresetphyclk_disabled)) \
KEEP(*(___ksymtab_gpl+si_pmu_pllcontrol)) \
KEEP(*(___ksymtab_gpl+si_pmu_pllupd)) \
KEEP(*(___ksymtab_gpl+si_pmu_radio_enable)) \
KEEP(*(___ksymtab_gpl+si_pmu_regcontrol)) \
KEEP(*(___ksymtab_gpl+si_pmu_res_init)) \
KEEP(*(___ksymtab_gpl+si_pmu_res_minmax_update)) \
KEEP(*(___ksymtab_gpl+si_pmu_rfldo)) \
KEEP(*(___ksymtab_gpl+si_pmu_set_ldo_voltage)) \
KEEP(*(___ksymtab_gpl+si_pmu_si_clock)) \
KEEP(*(___ksymtab_gpl+si_pmu_slow_clk_reinit)) \
KEEP(*(___ksymtab_gpl+si_pmu_spuravoid)) \
KEEP(*(___ksymtab_gpl+si_pmu_spuravoid_isdone)) \
KEEP(*(___ksymtab_gpl+si_pmu_switch_on_PARLDO)) \
KEEP(*(___ksymtab_gpl+si_pmu_synth_pwrsw_4313_war)) \
KEEP(*(___ksymtab_gpl+si_pmu_update_pllcontrol)) \
KEEP(*(___ksymtab_gpl+si_read_pmu_autopll)) \
KEEP(*(___ksymtab_gpl+si_register_intr_callback)) \
KEEP(*(___ksymtab_gpl+si_restore_core)) \
KEEP(*(___ksymtab_gpl+si_seci_init)) \
KEEP(*(___ksymtab_gpl+si_setcore)) \
KEEP(*(___ksymtab_gpl+si_setcoreidx)) \
KEEP(*(___ksymtab_gpl+si_set_sromctl)) \
KEEP(*(___ksymtab_gpl+si_sprom_enable)) \
KEEP(*(___ksymtab_gpl+si_switch_core)) \
KEEP(*(___ksymtab_gpl+si_update_macclk_mul_fact)) \
KEEP(*(___ksymtab_gpl+si_update_masks)) \
KEEP(*(___ksymtab_gpl+si_watchdog)) \
KEEP(*(___ksymtab_gpl+si_watchdog_ms)) \
KEEP(*(___ksymtab_gpl+si_watchdog_msticks)) \
KEEP(*(___ksymtab_gpl+sk_alloc)) \
KEEP(*(___ksymtab_gpl+__sk_attach_filter)) \
KEEP(*(___ksymtab_gpl+skb_abort_seq_read)) \
KEEP(*(___ksymtab_gpl+skb_append_datato_frags)) \
KEEP(*(___ksymtab_gpl+__skb_checksum)) \
KEEP(*(___ksymtab_gpl+skb_checksum)) \
KEEP(*(___ksymtab_gpl+__skb_checksum_complete)) \
KEEP(*(___ksymtab_gpl+__skb_checksum_complete_head)) \
KEEP(*(___ksymtab_gpl+skb_checksum_help)) \
KEEP(*(___ksymtab_gpl+skb_checksum_setup)) \
KEEP(*(___ksymtab_gpl+skb_checksum_trimmed)) \
KEEP(*(___ksymtab_gpl+skb_clone)) \
KEEP(*(___ksymtab_gpl+skb_clone_sk)) \
KEEP(*(___ksymtab_gpl+skb_complete_tx_timestamp)) \
KEEP(*(___ksymtab_gpl+skb_complete_wifi_ack)) \
KEEP(*(___ksymtab_gpl+skb_copy)) \
KEEP(*(___ksymtab_gpl+skb_copy_and_csum_bits)) \
KEEP(*(___ksymtab_gpl+skb_copy_and_csum_datagram_msg)) \
KEEP(*(___ksymtab_gpl+skb_copy_and_csum_dev)) \
KEEP(*(___ksymtab_gpl+skb_copy_bits)) \
KEEP(*(___ksymtab_gpl+skb_copy_datagram_from_iter)) \
KEEP(*(___ksymtab_gpl+skb_copy_datagram_iter)) \
KEEP(*(___ksymtab_gpl+skb_copy_expand)) \
KEEP(*(___ksymtab_gpl+skb_copy_ubufs)) \
KEEP(*(___ksymtab_gpl+skb_cow_data)) \
KEEP(*(___ksymtab_gpl+skb_dequeue)) \
KEEP(*(___ksymtab_gpl+skb_dequeue_tail)) \
KEEP(*(___ksymtab_gpl+__skb_flow_dissect)) \
KEEP(*(___ksymtab_gpl+__skb_flow_get_ports)) \
KEEP(*(___ksymtab_gpl+skb_free_datagram)) \
KEEP(*(___ksymtab_gpl+skb_free_datagram_locked)) \
KEEP(*(___ksymtab_gpl+__skb_get_hash)) \
KEEP(*(___ksymtab_gpl+__skb_get_hash_flowi4)) \
KEEP(*(___ksymtab_gpl+__skb_get_hash_flowi6)) \
KEEP(*(___ksymtab_gpl+__skb_get_hash_symmetric)) \
KEEP(*(___ksymtab_gpl+__skb_gro_checksum_complete)) \
KEEP(*(___ksymtab_gpl+__skb_gso_segment)) \
KEEP(*(___ksymtab_gpl+skb_gso_transport_seglen)) \
KEEP(*(___ksymtab_gpl+skb_kill_datagram)) \
KEEP(*(___ksymtab_gpl+skb_make_writable)) \
KEEP(*(___ksymtab_gpl+skb_morph)) \
KEEP(*(___ksymtab_gpl+skb_partial_csum_set)) \
KEEP(*(___ksymtab_gpl+skb_prepare_seq_read)) \
KEEP(*(___ksymtab_gpl+skb_pull)) \
KEEP(*(___ksymtab_gpl+skb_pull_rcsum)) \
KEEP(*(___ksymtab_gpl+skb_push)) \
KEEP(*(___ksymtab_gpl+skb_put)) \
KEEP(*(___ksymtab_gpl+skb_queue_head)) \
KEEP(*(___ksymtab_gpl+skb_queue_purge)) \
KEEP(*(___ksymtab_gpl+skb_queue_tail)) \
KEEP(*(___ksymtab_gpl+skb_realloc_headroom)) \
KEEP(*(___ksymtab_gpl+__skb_recv_datagram)) \
KEEP(*(___ksymtab_gpl+skb_recv_datagram)) \
KEEP(*(___ksymtab_gpl+skb_restore_cb)) \
KEEP(*(___ksymtab_gpl+skb_save_cb)) \
KEEP(*(___ksymtab_gpl+skb_scrub_packet)) \
KEEP(*(___ksymtab_gpl+skb_seq_read)) \
KEEP(*(___ksymtab_gpl+skb_set_owner_w)) \
KEEP(*(___ksymtab_gpl+skb_split)) \
KEEP(*(___ksymtab_gpl+skb_store_bits)) \
KEEP(*(___ksymtab_gpl+skb_to_sgvec)) \
KEEP(*(___ksymtab_gpl+skb_to_sgvec_nomark)) \
KEEP(*(___ksymtab_gpl+skb_trim)) \
KEEP(*(___ksymtab_gpl+skb_try_coalesce)) \
KEEP(*(___ksymtab_gpl+__skb_tstamp_tx)) \
KEEP(*(___ksymtab_gpl+skb_tstamp_tx)) \
KEEP(*(___ksymtab_gpl+skb_tx_error)) \
KEEP(*(___ksymtab_gpl+skb_unlink)) \
KEEP(*(___ksymtab_gpl+__skb_warn_lro_forwarding)) \
KEEP(*(___ksymtab_gpl+sk_capable)) \
KEEP(*(___ksymtab_gpl+skcipher_geniv_alloc)) \
KEEP(*(___ksymtab_gpl+skcipher_geniv_exit)) \
KEEP(*(___ksymtab_gpl+skcipher_geniv_free)) \
KEEP(*(___ksymtab_gpl+skcipher_geniv_init)) \
KEEP(*(___ksymtab_gpl+sk_common_release)) \
KEEP(*(___ksymtab_gpl+__sk_detach_filter)) \
KEEP(*(___ksymtab_gpl+__sk_dst_check)) \
KEEP(*(___ksymtab_gpl+sk_dst_check)) \
KEEP(*(___ksymtab_gpl+sk_filter_trim_cap)) \
KEEP(*(___ksymtab_gpl+sk_free)) \
KEEP(*(___ksymtab_gpl+skip_spaces)) \
KEEP(*(___ksymtab_gpl+sk_mc_loop)) \
KEEP(*(___ksymtab_gpl+__sk_mem_schedule)) \
KEEP(*(___ksymtab_gpl+sk_net_capable)) \
KEEP(*(___ksymtab_gpl+sk_ns_capable)) \
KEEP(*(___ksymtab_gpl+sk_page_frag_refill)) \
KEEP(*(___ksymtab_gpl+sk_prot_clear_portaddr_nulls)) \
KEEP(*(___ksymtab_gpl+__sk_receive_skb)) \
KEEP(*(___ksymtab_gpl+sk_send_sigurg)) \
KEEP(*(___ksymtab_gpl+sk_setup_caps)) \
KEEP(*(___ksymtab_gpl+smpboot_update_cpumask_percpu_thread)) \
KEEP(*(___ksymtab_gpl+snmp_fold_field)) \
KEEP(*(___ksymtab_gpl+snmp_fold_field64)) \
KEEP(*(___ksymtab_gpl+snmp_get_cpu_field64)) \
KEEP(*(___ksymtab_gpl+snprintf)) \
KEEP(*(___ksymtab_gpl+sock_alloc_send_pskb)) \
KEEP(*(___ksymtab_gpl+sock_alloc_send_skb)) \
KEEP(*(___ksymtab_gpl+sock_common_getsockopt)) \
KEEP(*(___ksymtab_gpl+sock_common_recvmsg)) \
KEEP(*(___ksymtab_gpl+sock_common_setsockopt)) \
KEEP(*(___ksymtab_gpl+__sock_create)) \
KEEP(*(___ksymtab_gpl+sock_create_kern)) \
KEEP(*(___ksymtab_gpl+sock_dequeue_err_skb)) \
KEEP(*(___ksymtab_gpl+sock_edemux)) \
KEEP(*(___ksymtab_gpl+sockfd_lookup)) \
KEEP(*(___ksymtab_gpl+sock_get_timestamp)) \
KEEP(*(___ksymtab_gpl+sock_get_timestampns)) \
KEEP(*(___ksymtab_gpl+sock_i_ino)) \
KEEP(*(___ksymtab_gpl+sock_init_data)) \
KEEP(*(___ksymtab_gpl+sock_i_uid)) \
KEEP(*(___ksymtab_gpl+sock_kfree_s)) \
KEEP(*(___ksymtab_gpl+sock_kmalloc)) \
KEEP(*(___ksymtab_gpl+sock_kzfree_s)) \
KEEP(*(___ksymtab_gpl+sock_no_accept)) \
KEEP(*(___ksymtab_gpl+sock_no_bind)) \
KEEP(*(___ksymtab_gpl+sock_no_getsockopt)) \
KEEP(*(___ksymtab_gpl+sock_no_listen)) \
KEEP(*(___ksymtab_gpl+sock_no_mmap)) \
KEEP(*(___ksymtab_gpl+sock_no_poll)) \
KEEP(*(___ksymtab_gpl+sock_no_recvmsg)) \
KEEP(*(___ksymtab_gpl+sock_no_sendmsg)) \
KEEP(*(___ksymtab_gpl+sock_no_sendpage)) \
KEEP(*(___ksymtab_gpl+sock_no_setsockopt)) \
KEEP(*(___ksymtab_gpl+sock_no_shutdown)) \
KEEP(*(___ksymtab_gpl+sock_no_socketpair)) \
KEEP(*(___ksymtab_gpl+sock_prot_inuse_add)) \
KEEP(*(___ksymtab_gpl+sock_prot_inuse_get)) \
KEEP(*(___ksymtab_gpl+sock_queue_err_skb)) \
KEEP(*(___ksymtab_gpl+sock_queue_rcv_skb)) \
KEEP(*(___ksymtab_gpl+sock_recv_errqueue)) \
KEEP(*(___ksymtab_gpl+__sock_recv_timestamp)) \
KEEP(*(___ksymtab_gpl+__sock_recv_ts_and_drops)) \
KEEP(*(___ksymtab_gpl+__sock_recv_wifi_status)) \
KEEP(*(___ksymtab_gpl+sock_register)) \
KEEP(*(___ksymtab_gpl+sock_release)) \
KEEP(*(___ksymtab_gpl+sock_rfree)) \
KEEP(*(___ksymtab_gpl+__sock_tx_timestamp)) \
KEEP(*(___ksymtab_gpl+sock_unregister)) \
KEEP(*(___ksymtab_gpl+sock_wfree)) \
KEEP(*(___ksymtab_gpl+sock_wmalloc)) \
KEEP(*(___ksymtab_gpl+sort)) \
KEEP(*(___ksymtab_gpl+spi_alloc_master)) \
KEEP(*(___ksymtab_gpl+spi_async)) \
KEEP(*(___ksymtab_gpl+spi_async_locked)) \
KEEP(*(___ksymtab_gpl+spi_get_device_id)) \
KEEP(*(___ksymtab_gpl+spi_register_master)) \
KEEP(*(___ksymtab_gpl+spi_setup)) \
KEEP(*(___ksymtab_gpl+spi_sync)) \
KEEP(*(___ksymtab_gpl+spi_sync_locked)) \
KEEP(*(___ksymtab_gpl+spi_unregister_master)) \
KEEP(*(___ksymtab_gpl+spi_write_then_read)) \
KEEP(*(___ksymtab_gpl+sprintf)) \
KEEP(*(___ksymtab_gpl+srcu_barrier)) \
KEEP(*(___ksymtab_gpl+srcu_batches_completed)) \
KEEP(*(___ksymtab_gpl+srom_read)) \
KEEP(*(___ksymtab_gpl+sscanf)) \
KEEP(*(___ksymtab_gpl+static_key_slow_inc)) \
KEEP(*(___ksymtab_gpl+stp_proto_register)) \
KEEP(*(___ksymtab_gpl+stp_proto_unregister)) \
KEEP(*(___ksymtab_gpl+strcasecmp)) \
KEEP(*(___ksymtab_gpl+strcat)) \
KEEP(*(___ksymtab_gpl+strchr)) \
KEEP(*(___ksymtab_gpl+strchrnul)) \
KEEP(*(___ksymtab_gpl+strcmp)) \
KEEP(*(___ksymtab_gpl+strcpy)) \
KEEP(*(___ksymtab_gpl+strcspn)) \
KEEP(*(___ksymtab_gpl+stream_open)) \
KEEP(*(___ksymtab_gpl+string_get_size)) \
KEEP(*(___ksymtab_gpl+strlcpy)) \
KEEP(*(___ksymtab_gpl+strlen)) \
KEEP(*(___ksymtab_gpl+strlen_user)) \
KEEP(*(___ksymtab_gpl+strncasecmp)) \
KEEP(*(___ksymtab_gpl+strncat)) \
KEEP(*(___ksymtab_gpl+strnchr)) \
KEEP(*(___ksymtab_gpl+strncmp)) \
KEEP(*(___ksymtab_gpl+strncpy)) \
KEEP(*(___ksymtab_gpl+strncpy_from_user)) \
KEEP(*(___ksymtab_gpl+strndup_user)) \
KEEP(*(___ksymtab_gpl+strnlen)) \
KEEP(*(___ksymtab_gpl+strnlen_user)) \
KEEP(*(___ksymtab_gpl+strpbrk)) \
KEEP(*(___ksymtab_gpl+strrchr)) \
KEEP(*(___ksymtab_gpl+strreplace)) \
KEEP(*(___ksymtab_gpl+strscpy)) \
KEEP(*(___ksymtab_gpl+strsep)) \
KEEP(*(___ksymtab_gpl+strspn)) \
KEEP(*(___ksymtab_gpl+strstr)) \
KEEP(*(___ksymtab_gpl+_submit_bh)) \
KEEP(*(___ksymtab_gpl+submit_bh)) \
KEEP(*(___ksymtab_gpl+submit_bio)) \
KEEP(*(___ksymtab_gpl+submit_bio_wait)) \
KEEP(*(___ksymtab_gpl+__sw_hweight32)) \
KEEP(*(___ksymtab_gpl+swiotlb_dma_mapping_error)) \
KEEP(*(___ksymtab_gpl+swiotlb_dma_supported)) \
KEEP(*(___ksymtab_gpl+sync_blockdev)) \
KEEP(*(___ksymtab_gpl+__sync_dirty_buffer)) \
KEEP(*(___ksymtab_gpl+sync_dirty_buffer)) \
KEEP(*(___ksymtab_gpl+sync_filesystem)) \
KEEP(*(___ksymtab_gpl+synchronize_irq)) \
KEEP(*(___ksymtab_gpl+synchronize_net)) \
KEEP(*(___ksymtab_gpl+synchronize_sched)) \
KEEP(*(___ksymtab_gpl+synchronize_sched_expedited)) \
KEEP(*(___ksymtab_gpl+sync_inode_metadata)) \
KEEP(*(___ksymtab_gpl+sync_mapping_buffers)) \
KEEP(*(___ksymtab_gpl+sysctl_ip_default_ttl)) \
KEEP(*(___ksymtab_gpl+sysctl_ip_early_demux)) \
KEEP(*(___ksymtab_gpl+sysctl_optmem_max)) \
KEEP(*(___ksymtab_gpl+sysctl_rmem_max)) \
KEEP(*(___ksymtab_gpl+sysctl_tcp_adv_win_scale)) \
KEEP(*(___ksymtab_gpl+sysctl_tcp_mem)) \
KEEP(*(___ksymtab_gpl+sysctl_tcp_notsent_lowat)) \
KEEP(*(___ksymtab_gpl+sysctl_tcp_rmem)) \
KEEP(*(___ksymtab_gpl+sysctl_tcp_syncookies)) \
KEEP(*(___ksymtab_gpl+sysctl_tcp_wmem)) \
KEEP(*(___ksymtab_gpl+sysctl_udp_mem)) \
KEEP(*(___ksymtab_gpl+sysctl_udp_rmem_min)) \
KEEP(*(___ksymtab_gpl+sysctl_udp_wmem_min)) \
KEEP(*(___ksymtab_gpl+sysctl_vfs_cache_pressure)) \
KEEP(*(___ksymtab_gpl+sysctl_wmem_max)) \
KEEP(*(___ksymtab_gpl+sys_dup)) \
KEEP(*(___ksymtab_gpl+sysfs_add_file_to_group)) \
KEEP(*(___ksymtab_gpl+sysfs_add_link_to_group)) \
KEEP(*(___ksymtab_gpl+sysfs_break_active_protection)) \
KEEP(*(___ksymtab_gpl+sysfs_create_file_ns)) \
KEEP(*(___ksymtab_gpl+sysfs_create_group)) \
KEEP(*(___ksymtab_gpl+sysfs_create_groups)) \
KEEP(*(___ksymtab_gpl+sysfs_create_link)) \
KEEP(*(___ksymtab_gpl+sysfs_create_mount_point)) \
KEEP(*(___ksymtab_gpl+sysfs_merge_group)) \
KEEP(*(___ksymtab_gpl+sysfs_remove_file_from_group)) \
KEEP(*(___ksymtab_gpl+sysfs_remove_file_ns)) \
KEEP(*(___ksymtab_gpl+sysfs_remove_group)) \
KEEP(*(___ksymtab_gpl+sysfs_remove_groups)) \
KEEP(*(___ksymtab_gpl+sysfs_remove_link)) \
KEEP(*(___ksymtab_gpl+sysfs_remove_link_from_group)) \
KEEP(*(___ksymtab_gpl+sysfs_remove_mount_point)) \
KEEP(*(___ksymtab_gpl+sysfs_streq)) \
KEEP(*(___ksymtab_gpl+sysfs_unbreak_active_protection)) \
KEEP(*(___ksymtab_gpl+sysfs_unmerge_group)) \
KEEP(*(___ksymtab_gpl+sysfs_update_group)) \
KEEP(*(___ksymtab_gpl+system_freezable_wq)) \
KEEP(*(___ksymtab_gpl+system_long_wq)) \
KEEP(*(___ksymtab_gpl+system_power_efficient_wq)) \
KEEP(*(___ksymtab_gpl+system_state)) \
KEEP(*(___ksymtab_gpl+system_wq)) \
KEEP(*(___ksymtab_gpl+sys_tz)) \
KEEP(*(___ksymtab_gpl+tag_pages_for_writeback)) \
KEEP(*(___ksymtab_gpl+task_active_pid_ns)) \
KEEP(*(___ksymtab_gpl+__tasklet_hi_schedule)) \
KEEP(*(___ksymtab_gpl+__tasklet_hi_schedule_first)) \
KEEP(*(___ksymtab_gpl+tasklet_hrtimer_init)) \
KEEP(*(___ksymtab_gpl+tasklet_init)) \
KEEP(*(___ksymtab_gpl+tasklet_kill)) \
KEEP(*(___ksymtab_gpl+__tasklet_schedule)) \
KEEP(*(___ksymtab_gpl+__task_pid_nr_ns)) \
KEEP(*(___ksymtab_gpl+tcf_hash_cleanup)) \
KEEP(*(___ksymtab_gpl+tcp_ca_get_key_by_name)) \
KEEP(*(___ksymtab_gpl+tcp_ca_openreq_child)) \
KEEP(*(___ksymtab_gpl+tcp_check_req)) \
KEEP(*(___ksymtab_gpl+tcp_child_process)) \
KEEP(*(___ksymtab_gpl+tcp_close)) \
KEEP(*(___ksymtab_gpl+tcp_connect)) \
KEEP(*(___ksymtab_gpl+tcp_conn_request)) \
KEEP(*(___ksymtab_gpl+tcp_create_openreq_child)) \
KEEP(*(___ksymtab_gpl+tcp_death_row)) \
KEEP(*(___ksymtab_gpl+tcp_disconnect)) \
KEEP(*(___ksymtab_gpl+tcp_done)) \
KEEP(*(___ksymtab_gpl+tcp_enter_memory_pressure)) \
KEEP(*(___ksymtab_gpl+tcp_fetch_timewait_stamp)) \
KEEP(*(___ksymtab_gpl+tcp_filter)) \
KEEP(*(___ksymtab_gpl+tcp_get_cookie_sock)) \
KEEP(*(___ksymtab_gpl+tcp_getsockopt)) \
KEEP(*(___ksymtab_gpl+tcp_gro_complete)) \
KEEP(*(___ksymtab_gpl+tcp_hashinfo)) \
KEEP(*(___ksymtab_gpl+tcp_initialize_rcv_mss)) \
KEEP(*(___ksymtab_gpl+tcp_init_sock)) \
KEEP(*(___ksymtab_gpl+tcp_ioctl)) \
KEEP(*(___ksymtab_gpl+tcp_make_synack)) \
KEEP(*(___ksymtab_gpl+tcp_memory_allocated)) \
KEEP(*(___ksymtab_gpl+tcp_memory_pressure)) \
KEEP(*(___ksymtab_gpl+tcp_mtup_init)) \
KEEP(*(___ksymtab_gpl+tcp_orphan_count)) \
KEEP(*(___ksymtab_gpl+tcp_parse_options)) \
KEEP(*(___ksymtab_gpl+tcp_poll)) \
KEEP(*(___ksymtab_gpl+tcp_prequeue)) \
KEEP(*(___ksymtab_gpl+tcp_proc_register)) \
KEEP(*(___ksymtab_gpl+tcp_proc_unregister)) \
KEEP(*(___ksymtab_gpl+tcp_prot)) \
KEEP(*(___ksymtab_gpl+tcp_rcv_established)) \
KEEP(*(___ksymtab_gpl+tcp_rcv_state_process)) \
KEEP(*(___ksymtab_gpl+tcp_recvmsg)) \
KEEP(*(___ksymtab_gpl+tcp_release_cb)) \
KEEP(*(___ksymtab_gpl+tcp_req_err)) \
KEEP(*(___ksymtab_gpl+tcp_rtx_synack)) \
KEEP(*(___ksymtab_gpl+tcp_select_initial_window)) \
KEEP(*(___ksymtab_gpl+tcp_sendmsg)) \
KEEP(*(___ksymtab_gpl+tcp_sendpage)) \
KEEP(*(___ksymtab_gpl+tcp_seq_open)) \
KEEP(*(___ksymtab_gpl+tcp_setsockopt)) \
KEEP(*(___ksymtab_gpl+tcp_set_state)) \
KEEP(*(___ksymtab_gpl+tcp_shutdown)) \
KEEP(*(___ksymtab_gpl+tcp_simple_retransmit)) \
KEEP(*(___ksymtab_gpl+tcp_sockets_allocated)) \
KEEP(*(___ksymtab_gpl+tcp_splice_read)) \
KEEP(*(___ksymtab_gpl+tcp_syn_ack_timeout)) \
KEEP(*(___ksymtab_gpl+tcp_sync_mss)) \
KEEP(*(___ksymtab_gpl+tcp_timewait_state_process)) \
KEEP(*(___ksymtab_gpl+tcp_twsk_destructor)) \
KEEP(*(___ksymtab_gpl+tcp_twsk_unique)) \
KEEP(*(___ksymtab_gpl+tcp_v4_connect)) \
KEEP(*(___ksymtab_gpl+tcp_v4_conn_request)) \
KEEP(*(___ksymtab_gpl+tcp_v4_destroy_sock)) \
KEEP(*(___ksymtab_gpl+tcp_v4_do_rcv)) \
KEEP(*(___ksymtab_gpl+tcp_v4_mtu_reduced)) \
KEEP(*(___ksymtab_gpl+tcp_v4_send_check)) \
KEEP(*(___ksymtab_gpl+tcp_v4_syn_recv_sock)) \
KEEP(*(___ksymtab_gpl+_test_and_clear_bit)) \
KEEP(*(___ksymtab_gpl+_test_and_set_bit)) \
KEEP(*(___ksymtab_gpl+__test_set_page_writeback)) \
KEEP(*(___ksymtab_gpl+thaw_super)) \
KEEP(*(___ksymtab_gpl+timespec64_to_jiffies)) \
KEEP(*(___ksymtab_gpl+time_to_tm)) \
KEEP(*(___ksymtab_gpl+timeval_to_jiffies)) \
KEEP(*(___ksymtab_gpl+totalram_pages)) \
KEEP(*(___ksymtab_gpl+touch_atime)) \
KEEP(*(___ksymtab_gpl+transport_add_device)) \
KEEP(*(___ksymtab_gpl+transport_class_unregister)) \
KEEP(*(___ksymtab_gpl+transport_configure_device)) \
KEEP(*(___ksymtab_gpl+transport_destroy_device)) \
KEEP(*(___ksymtab_gpl+transport_remove_device)) \
KEEP(*(___ksymtab_gpl+transport_setup_device)) \
KEEP(*(___ksymtab_gpl+truncate_inode_pages)) \
KEEP(*(___ksymtab_gpl+truncate_inode_pages_final)) \
KEEP(*(___ksymtab_gpl+truncate_inode_pages_range)) \
KEEP(*(___ksymtab_gpl+truncate_pagecache)) \
KEEP(*(___ksymtab_gpl+truncate_pagecache_range)) \
KEEP(*(___ksymtab_gpl+truncate_setsize)) \
KEEP(*(___ksymtab_gpl+try_module_get)) \
KEEP(*(___ksymtab_gpl+try_to_del_timer_sync)) \
KEEP(*(___ksymtab_gpl+try_to_free_buffers)) \
KEEP(*(___ksymtab_gpl+try_to_release_page)) \
KEEP(*(___ksymtab_gpl+try_to_writeback_inodes_sb)) \
KEEP(*(___ksymtab_gpl+try_to_writeback_inodes_sb_nr)) \
KEEP(*(___ksymtab_gpl+try_wait_for_completion)) \
KEEP(*(___ksymtab_gpl+__tty_alloc_driver)) \
KEEP(*(___ksymtab_gpl+tty_buffer_request_room)) \
KEEP(*(___ksymtab_gpl+tty_encode_baud_rate)) \
KEEP(*(___ksymtab_gpl+tty_flip_buffer_push)) \
KEEP(*(___ksymtab_gpl+tty_hangup)) \
KEEP(*(___ksymtab_gpl+tty_hung_up_p)) \
KEEP(*(___ksymtab_gpl+__tty_insert_flip_char)) \
KEEP(*(___ksymtab_gpl+tty_insert_flip_string_fixed_flag)) \
KEEP(*(___ksymtab_gpl+tty_kref_put)) \
KEEP(*(___ksymtab_gpl+tty_ldisc_deref)) \
KEEP(*(___ksymtab_gpl+tty_ldisc_ref)) \
KEEP(*(___ksymtab_gpl+tty_ldisc_ref_wait)) \
KEEP(*(___ksymtab_gpl+tty_port_close)) \
KEEP(*(___ksymtab_gpl+tty_port_close_end)) \
KEEP(*(___ksymtab_gpl+tty_port_close_start)) \
KEEP(*(___ksymtab_gpl+tty_port_destroy)) \
KEEP(*(___ksymtab_gpl+tty_port_hangup)) \
KEEP(*(___ksymtab_gpl+tty_port_init)) \
KEEP(*(___ksymtab_gpl+tty_port_install)) \
KEEP(*(___ksymtab_gpl+tty_port_open)) \
KEEP(*(___ksymtab_gpl+tty_port_put)) \
KEEP(*(___ksymtab_gpl+tty_port_register_device)) \
KEEP(*(___ksymtab_gpl+tty_port_register_device_attr)) \
KEEP(*(___ksymtab_gpl+tty_port_tty_get)) \
KEEP(*(___ksymtab_gpl+tty_port_tty_hangup)) \
KEEP(*(___ksymtab_gpl+tty_port_tty_set)) \
KEEP(*(___ksymtab_gpl+tty_port_tty_wakeup)) \
KEEP(*(___ksymtab_gpl+tty_register_device)) \
KEEP(*(___ksymtab_gpl+tty_register_device_attr)) \
KEEP(*(___ksymtab_gpl+tty_register_driver)) \
KEEP(*(___ksymtab_gpl+tty_schedule_flip)) \
KEEP(*(___ksymtab_gpl+tty_set_operations)) \
KEEP(*(___ksymtab_gpl+tty_standard_install)) \
KEEP(*(___ksymtab_gpl+tty_std_termios)) \
KEEP(*(___ksymtab_gpl+tty_termios_baud_rate)) \
KEEP(*(___ksymtab_gpl+tty_termios_copy_hw)) \
KEEP(*(___ksymtab_gpl+tty_termios_encode_baud_rate)) \
KEEP(*(___ksymtab_gpl+tty_termios_hw_change)) \
KEEP(*(___ksymtab_gpl+tty_unregister_device)) \
KEEP(*(___ksymtab_gpl+tty_unregister_driver)) \
KEEP(*(___ksymtab_gpl+tty_vhangup)) \
KEEP(*(___ksymtab_gpl+tty_wakeup)) \
KEEP(*(___ksymtab_gpl+uart_update_timeout)) \
KEEP(*(___ksymtab_gpl+uart_write_wakeup)) \
KEEP(*(___ksymtab_gpl+__udp4_lib_lookup)) \
KEEP(*(___ksymtab_gpl+udp4_lib_lookup)) \
KEEP(*(___ksymtab_gpl+udp6_csum_init)) \
KEEP(*(___ksymtab_gpl+udp6_set_csum)) \
KEEP(*(___ksymtab_gpl+udp_add_offload)) \
KEEP(*(___ksymtab_gpl+udp_del_offload)) \
KEEP(*(___ksymtab_gpl+udp_disconnect)) \
KEEP(*(___ksymtab_gpl+udp_encap_enable)) \
KEEP(*(___ksymtab_gpl+udp_flow_hashrnd)) \
KEEP(*(___ksymtab_gpl+udp_flush_pending_frames)) \
KEEP(*(___ksymtab_gpl+udp_ioctl)) \
KEEP(*(___ksymtab_gpl+udp_lib_get_port)) \
KEEP(*(___ksymtab_gpl+udp_lib_getsockopt)) \
KEEP(*(___ksymtab_gpl+udp_lib_rehash)) \
KEEP(*(___ksymtab_gpl+udp_lib_setsockopt)) \
KEEP(*(___ksymtab_gpl+udp_lib_unhash)) \
KEEP(*(___ksymtab_gpl+udplite_prot)) \
KEEP(*(___ksymtab_gpl+udplite_table)) \
KEEP(*(___ksymtab_gpl+udp_memory_allocated)) \
KEEP(*(___ksymtab_gpl+udp_poll)) \
KEEP(*(___ksymtab_gpl+udp_proc_register)) \
KEEP(*(___ksymtab_gpl+udp_proc_unregister)) \
KEEP(*(___ksymtab_gpl+udp_prot)) \
KEEP(*(___ksymtab_gpl+udp_push_pending_frames)) \
KEEP(*(___ksymtab_gpl+udp_sendmsg)) \
KEEP(*(___ksymtab_gpl+udp_seq_open)) \
KEEP(*(___ksymtab_gpl+udp_set_csum)) \
KEEP(*(___ksymtab_gpl+udp_table)) \
KEEP(*(___ksymtab_gpl+unload_nls)) \
KEEP(*(___ksymtab_gpl+unlock_buffer)) \
KEEP(*(___ksymtab_gpl+unlock_new_inode)) \
KEEP(*(___ksymtab_gpl+unlock_page)) \
KEEP(*(___ksymtab_gpl+unlock_two_nondirectories)) \
KEEP(*(___ksymtab_gpl+unmap_underlying_metadata)) \
KEEP(*(___ksymtab_gpl+unregister_blkdev)) \
KEEP(*(___ksymtab_gpl+__unregister_chrdev)) \
KEEP(*(___ksymtab_gpl+unregister_chrdev_region)) \
KEEP(*(___ksymtab_gpl+unregister_filesystem)) \
KEEP(*(___ksymtab_gpl+unregister_inetaddr_notifier)) \
KEEP(*(___ksymtab_gpl+unregister_key_type)) \
KEEP(*(___ksymtab_gpl+unregister_netdev)) \
KEEP(*(___ksymtab_gpl+unregister_netdevice_many)) \
KEEP(*(___ksymtab_gpl+unregister_netdevice_notifier)) \
KEEP(*(___ksymtab_gpl+unregister_netdevice_queue)) \
KEEP(*(___ksymtab_gpl+unregister_net_sysctl_table)) \
KEEP(*(___ksymtab_gpl+unregister_nls)) \
KEEP(*(___ksymtab_gpl+unregister_pernet_device)) \
KEEP(*(___ksymtab_gpl+unregister_pernet_subsys)) \
KEEP(*(___ksymtab_gpl+unregister_pppox_proto)) \
KEEP(*(___ksymtab_gpl+unregister_qdisc)) \
KEEP(*(___ksymtab_gpl+unregister_reboot_notifier)) \
KEEP(*(___ksymtab_gpl+unregister_shrinker)) \
KEEP(*(___ksymtab_gpl+unregister_sysctl_table)) \
KEEP(*(___ksymtab_gpl+up)) \
KEEP(*(___ksymtab_gpl+up_read)) \
KEEP(*(___ksymtab_gpl+up_write)) \
KEEP(*(___ksymtab_gpl+usb_amd_dev_put)) \
KEEP(*(___ksymtab_gpl+usb_amd_find_chipset_info)) \
KEEP(*(___ksymtab_gpl+usb_amd_hang_symptom_quirk)) \
KEEP(*(___ksymtab_gpl+usb_amd_prefetch_quirk)) \
KEEP(*(___ksymtab_gpl+usb_amd_quirk_pll_disable)) \
KEEP(*(___ksymtab_gpl+usb_amd_quirk_pll_enable)) \
KEEP(*(___ksymtab_gpl+usb_disable_xhci_ports)) \
KEEP(*(___ksymtab_gpl+usb_hcd_amd_remote_wakeup_quirk)) \
KEEP(*(___ksymtab_gpl+__usecs_to_jiffies)) \
KEEP(*(___ksymtab_gpl+user_destroy)) \
KEEP(*(___ksymtab_gpl+user_read)) \
KEEP(*(___ksymtab_gpl+user_revoke)) \
KEEP(*(___ksymtab_gpl+user_update)) \
KEEP(*(___ksymtab_gpl+usleep_range)) \
KEEP(*(___ksymtab_gpl+utf16s_to_utf8s)) \
KEEP(*(___ksymtab_gpl+utf32_to_utf8)) \
KEEP(*(___ksymtab_gpl+utf8s_to_utf16s)) \
KEEP(*(___ksymtab_gpl+utf8_to_utf32)) \
KEEP(*(___ksymtab_gpl+validate_xmit_skb_list)) \
KEEP(*(___ksymtab_gpl+valid_bcmerror)) \
KEEP(*(___ksymtab_gpl+vfree)) \
KEEP(*(___ksymtab_gpl+vfs_fsync_range)) \
KEEP(*(___ksymtab_gpl+vfs_path_lookup)) \
KEEP(*(___ksymtab_gpl+vfs_setpos)) \
KEEP(*(___ksymtab_gpl+vlan_dev_vlan_id)) \
KEEP(*(___ksymtab_gpl+vlan_dev_vlan_proto)) \
KEEP(*(___ksymtab_gpl+__vlan_find_dev_deep_rcu)) \
KEEP(*(___ksymtab_gpl+vlan_uses_dev)) \
KEEP(*(___ksymtab_gpl+vlan_vid_add)) \
KEEP(*(___ksymtab_gpl+vlan_vid_del)) \
KEEP(*(___ksymtab_gpl+vlan_vids_add_by_dev)) \
KEEP(*(___ksymtab_gpl+vlan_vids_del_by_dev)) \
KEEP(*(___ksymtab_gpl+vmalloc)) \
KEEP(*(___ksymtab_gpl+__vmalloc)) \
KEEP(*(___ksymtab_gpl+vmalloc_32)) \
KEEP(*(___ksymtab_gpl+vmalloc_32_user)) \
KEEP(*(___ksymtab_gpl+vmalloc_node)) \
KEEP(*(___ksymtab_gpl+vmalloc_to_page)) \
KEEP(*(___ksymtab_gpl+vmalloc_to_pfn)) \
KEEP(*(___ksymtab_gpl+vmalloc_user)) \
KEEP(*(___ksymtab_gpl+vprintk)) \
KEEP(*(___ksymtab_gpl+vprintk_default)) \
KEEP(*(___ksymtab_gpl+vprintk_emit)) \
KEEP(*(___ksymtab_gpl+vscnprintf)) \
KEEP(*(___ksymtab_gpl+vsnprintf)) \
KEEP(*(___ksymtab_gpl+vsprintf)) \
KEEP(*(___ksymtab_gpl+vsscanf)) \
KEEP(*(___ksymtab_gpl+vzalloc)) \
KEEP(*(___ksymtab_gpl+vzalloc_node)) \
KEEP(*(___ksymtab_gpl+wait_for_completion)) \
KEEP(*(___ksymtab_gpl+wait_for_completion_interruptible)) \
KEEP(*(___ksymtab_gpl+wait_for_completion_interruptible_timeout)) \
KEEP(*(___ksymtab_gpl+wait_for_completion_io)) \
KEEP(*(___ksymtab_gpl+wait_for_completion_io_timeout)) \
KEEP(*(___ksymtab_gpl+wait_for_completion_killable)) \
KEEP(*(___ksymtab_gpl+wait_for_completion_killable_timeout)) \
KEEP(*(___ksymtab_gpl+wait_for_completion_timeout)) \
KEEP(*(___ksymtab_gpl+wait_for_stable_page)) \
KEEP(*(___ksymtab_gpl+__wait_on_buffer)) \
KEEP(*(___ksymtab_gpl+wait_on_page_bit)) \
KEEP(*(___ksymtab_gpl+wait_on_page_bit_killable_timeout)) \
KEEP(*(___ksymtab_gpl+wake_bit_function)) \
KEEP(*(___ksymtab_gpl+__wake_up)) \
KEEP(*(___ksymtab_gpl+wake_up_all_idle_cpus)) \
KEEP(*(___ksymtab_gpl+wake_up_atomic_t)) \
KEEP(*(___ksymtab_gpl+__wake_up_bit)) \
KEEP(*(___ksymtab_gpl+wake_up_bit)) \
KEEP(*(___ksymtab_gpl+__wake_up_locked)) \
KEEP(*(___ksymtab_gpl+__wake_up_locked_key)) \
KEEP(*(___ksymtab_gpl+wake_up_process)) \
KEEP(*(___ksymtab_gpl+wake_up_state)) \
KEEP(*(___ksymtab_gpl+__wake_up_sync)) \
KEEP(*(___ksymtab_gpl+__wake_up_sync_key)) \
KEEP(*(___ksymtab_gpl+watchdog_register_device)) \
KEEP(*(___ksymtab_gpl+watchdog_unregister_device)) \
KEEP(*(___ksymtab_gpl+wb_writeout_inc)) \
KEEP(*(___ksymtab_gpl+wireless_send_event)) \
KEEP(*(___ksymtab_gpl+wireless_spy_update)) \
KEEP(*(___ksymtab_gpl+workqueue_congested)) \
KEEP(*(___ksymtab_gpl+workqueue_set_max_active)) \
KEEP(*(___ksymtab_gpl+write_cache_pages)) \
KEEP(*(___ksymtab_gpl+write_dirty_buffer)) \
KEEP(*(___ksymtab_gpl+write_inode_now)) \
KEEP(*(___ksymtab_gpl+__ww_mutex_lock)) \
KEEP(*(___ksymtab_gpl+__ww_mutex_lock_interruptible)) \
KEEP(*(___ksymtab_gpl+ww_mutex_unlock)) \
KEEP(*(___ksymtab_gpl+__xfrm_decode_session)) \
KEEP(*(___ksymtab_gpl+xfrm_dst_ifdown)) \
KEEP(*(___ksymtab_gpl+__xfrm_init_state)) \
KEEP(*(___ksymtab_gpl+xfrm_init_state)) \
KEEP(*(___ksymtab_gpl+xfrm_inner_extract_output)) \
KEEP(*(___ksymtab_gpl+xfrm_input)) \
KEEP(*(___ksymtab_gpl+xfrm_input_register_afinfo)) \
KEEP(*(___ksymtab_gpl+xfrm_input_resume)) \
KEEP(*(___ksymtab_gpl+xfrm_input_unregister_afinfo)) \
KEEP(*(___ksymtab_gpl+xfrm_local_error)) \
KEEP(*(___ksymtab_gpl+xfrm_lookup)) \
KEEP(*(___ksymtab_gpl+xfrm_lookup_route)) \
KEEP(*(___ksymtab_gpl+xfrm_output)) \
KEEP(*(___ksymtab_gpl+xfrm_output_resume)) \
KEEP(*(___ksymtab_gpl+__xfrm_policy_check)) \
KEEP(*(___ksymtab_gpl+xfrm_policy_destroy)) \
KEEP(*(___ksymtab_gpl+xfrm_policy_register_afinfo)) \
KEEP(*(___ksymtab_gpl+xfrm_policy_unregister_afinfo)) \
KEEP(*(___ksymtab_gpl+xfrm_prepare_input)) \
KEEP(*(___ksymtab_gpl+xfrm_register_mode)) \
KEEP(*(___ksymtab_gpl+xfrm_register_type)) \
KEEP(*(___ksymtab_gpl+__xfrm_route_forward)) \
KEEP(*(___ksymtab_gpl+xfrm_state_alloc)) \
KEEP(*(___ksymtab_gpl+xfrm_state_check_expire)) \
KEEP(*(___ksymtab_gpl+xfrm_state_delete_tunnel)) \
KEEP(*(___ksymtab_gpl+__xfrm_state_destroy)) \
KEEP(*(___ksymtab_gpl+xfrm_state_insert)) \
KEEP(*(___ksymtab_gpl+xfrm_state_lookup)) \
KEEP(*(___ksymtab_gpl+xfrm_state_lookup_byaddr)) \
KEEP(*(___ksymtab_gpl+xfrm_state_lookup_byspi)) \
KEEP(*(___ksymtab_gpl+xfrm_state_register_afinfo)) \
KEEP(*(___ksymtab_gpl+xfrm_state_unregister_afinfo)) \
KEEP(*(___ksymtab_gpl+xfrm_state_update)) \
KEEP(*(___ksymtab_gpl+xfrm_unregister_mode)) \
KEEP(*(___ksymtab_gpl+xfrm_unregister_type)) \
KEEP(*(___ksymtab_gpl+xfrm_user_policy)) \
KEEP(*(___ksymtab_gpl+xmit_recursion)) \
KEEP(*(___ksymtab_gpl+xt_alloc_entry_offsets)) \
KEEP(*(___ksymtab_gpl+xt_alloc_table_info)) \
KEEP(*(___ksymtab_gpl+xt_check_entry_offsets)) \
KEEP(*(___ksymtab_gpl+xt_check_match)) \
KEEP(*(___ksymtab_gpl+xt_check_target)) \
KEEP(*(___ksymtab_gpl+xt_copy_counters_from_user)) \
KEEP(*(___ksymtab_gpl+xt_find_jump_offset)) \
KEEP(*(___ksymtab_gpl+xt_find_revision)) \
KEEP(*(___ksymtab_gpl+xt_find_table_lock)) \
KEEP(*(___ksymtab_gpl+xt_free_table_info)) \
KEEP(*(___ksymtab_gpl+xt_hook_link)) \
KEEP(*(___ksymtab_gpl+xt_hook_unlink)) \
KEEP(*(___ksymtab_gpl+xtnu_skb_make_writable)) \
KEEP(*(___ksymtab_gpl+xt_percpu_counter_alloc)) \
KEEP(*(___ksymtab_gpl+xt_percpu_counter_free)) \
KEEP(*(___ksymtab_gpl+xt_proto_fini)) \
KEEP(*(___ksymtab_gpl+xt_proto_init)) \
KEEP(*(___ksymtab_gpl+xt_recseq)) \
KEEP(*(___ksymtab_gpl+xt_register_match)) \
KEEP(*(___ksymtab_gpl+xt_register_matches)) \
KEEP(*(___ksymtab_gpl+xt_register_table)) \
KEEP(*(___ksymtab_gpl+xt_register_target)) \
KEEP(*(___ksymtab_gpl+xt_register_targets)) \
KEEP(*(___ksymtab_gpl+xt_replace_table)) \
KEEP(*(___ksymtab_gpl+xt_request_find_match)) \
KEEP(*(___ksymtab_gpl+xt_request_find_target)) \
KEEP(*(___ksymtab_gpl+xt_table_unlock)) \
KEEP(*(___ksymtab_gpl+xt_tee_enabled)) \
KEEP(*(___ksymtab_gpl+xt_unregister_match)) \
KEEP(*(___ksymtab_gpl+xt_unregister_matches)) \
KEEP(*(___ksymtab_gpl+xt_unregister_table)) \
KEEP(*(___ksymtab_gpl+xt_unregister_target)) \
KEEP(*(___ksymtab_gpl+xt_unregister_targets)) \
KEEP(*(___ksymtab_gpl+yield)) \
KEEP(*(___ksymtab_gpl+yield_to)) \
KEEP(*(___ksymtab_gpl+zerocopy_sg_from_iter)) \
KEEP(*(___ksymtab_gpl+zlib_deflate)) \
KEEP(*(___ksymtab_gpl+zlib_deflateEnd)) \
KEEP(*(___ksymtab_gpl+zlib_deflateInit2)) \
KEEP(*(___ksymtab_gpl+zlib_deflateReset)) \
KEEP(*(___ksymtab_gpl+zlib_deflate_workspacesize)) \
KEEP(*(___ksymtab_gpl+zlib_inflate)) \
KEEP(*(___ksymtab_gpl+zlib_inflate_blob)) \
KEEP(*(___ksymtab_gpl+zlib_inflateEnd)) \
KEEP(*(___ksymtab_gpl+zlib_inflateIncomp)) \
KEEP(*(___ksymtab_gpl+zlib_inflateInit2)) \
KEEP(*(___ksymtab_gpl+zlib_inflateReset)) \
KEEP(*(___ksymtab_gpl+zlib_inflate_workspacesize)) \

#define SYMTAB_DISCARD \
*(___ksymtab+ablkcipher_walk_phys) \
*(___ksymtab+abort) \
*(___ksymtab+abort_creds) \
*(___ksymtab+account_page_dirtied) \
*(___ksymtab+account_page_redirty) \
*(___ksymtab+acl_by_type) \
*(___ksymtab+add_hwgenerator_randomness) \
*(___ksymtab+add_input_randomness) \
*(___ksymtab+add_mtd_blktrans_dev) \
*(___ksymtab+add_page_wait_queue) \
*(___ksymtab+address_space_init_once) \
*(___ksymtab+adjust_managed_page_count) \
*(___ksymtab+adjust_resource) \
*(___ksymtab+__aeabi_lasr) \
*(___ksymtab+__aeabi_llsl) \
*(___ksymtab+__aeabi_llsr) \
*(___ksymtab+__aeabi_lmul) \
*(___ksymtab+__aeabi_ulcmp) \
*(___ksymtab+aer_irq) \
*(___ksymtab+AES_decrypt) \
*(___ksymtab+AES_encrypt) \
*(___ksymtab+ahash_free_instance) \
*(___ksymtab+ahash_register_instance) \
*(___ksymtab+ai_addrspace) \
*(___ksymtab+ai_addrspacesize) \
*(___ksymtab+ai_clear_backplane_to) \
*(___ksymtab+ai_coreaddrspaceX) \
*(___ksymtab+ai_core_cflags) \
*(___ksymtab+ai_core_cflags_wo) \
*(___ksymtab+ai_core_disable) \
*(___ksymtab+ai_corereg) \
*(___ksymtab+ai_corereg_addr) \
*(___ksymtab+ai_core_reset) \
*(___ksymtab+ai_corerev) \
*(___ksymtab+ai_core_sflags) \
*(___ksymtab+ai_corevendor) \
*(___ksymtab+ai_enable_backplane_timeouts) \
*(___ksymtab+ai_flag) \
*(___ksymtab+ai_flag_alt) \
*(___ksymtab+ai_numaddrspaces) \
*(___ksymtab+ai_scan) \
*(___ksymtab+ai_setcoreidx) \
*(___ksymtab+ai_setint) \
*(___ksymtab+ai_wrap_reg) \
*(___ksymtab+alarm_cancel) \
*(___ksymtab+alarm_expires_remaining) \
*(___ksymtab+alarm_forward) \
*(___ksymtab+alarm_forward_now) \
*(___ksymtab+alarm_init) \
*(___ksymtab+alarm_restart) \
*(___ksymtab+alarm_start) \
*(___ksymtab+alarm_start_relative) \
*(___ksymtab+alarm_try_to_cancel) \
*(___ksymtab+alg_test) \
*(___ksymtab+alloc_anon_inode) \
*(___ksymtab+allocate_resource) \
*(___ksymtab+alloc_chrdev_region) \
*(___ksymtab+alloc_cpu_rmap) \
*(___ksymtab+alloc_file) \
*(___ksymtab+alloc_page_buffers) \
*(___ksymtab+__alloc_page_frag) \
*(___ksymtab+alloc_pages_exact) \
*(___ksymtab+alloc_skb_with_frags) \
*(___ksymtab+alloc_vm_area) \
*(___ksymtab+always_delete_dentry) \
*(___ksymtab+anon_inode_getfd) \
*(___ksymtab+anon_inode_getfile) \
*(___ksymtab+anon_transport_class_register) \
*(___ksymtab+apply_to_page_range) \
*(___ksymtab+argv_free) \
*(___ksymtab+argv_split) \
*(___ksymtab+arm_check_condition) \
*(___ksymtab+arm_clear_user) \
*(___ksymtab+arm_coherent_dma_ops) \
*(___ksymtab+arm_elf_read_implies_exec) \
*(___ksymtab+arm_smccc_hvc) \
*(___ksymtab+arm_smccc_smc) \
*(___ksymtab+arp_spoofing_protect) \
*(___ksymtab+arp_tbl) \
*(___ksymtab+__ashldi3) \
*(___ksymtab+__ashrdi3) \
*(___ksymtab+async_synchronize_cookie) \
*(___ksymtab+async_synchronize_cookie_domain) \
*(___ksymtab+async_synchronize_full) \
*(___ksymtab+atomic_io_modify) \
*(___ksymtab+atomic_io_modify_relaxed) \
*(___ksymtab+__atomic_notifier_call_chain) \
*(___ksymtab+atomic_notifier_call_chain) \
*(___ksymtab+atomic_notifier_chain_register) \
*(___ksymtab+atomic_notifier_chain_unregister) \
*(___ksymtab+attribute_container_classdev_to_container) \
*(___ksymtab+attribute_container_find_class_device) \
*(___ksymtab+attribute_container_register) \
*(___ksymtab+attribute_container_unregister) \
*(___ksymtab+avenrun) \
*(___ksymtab+balance_dirty_pages_ratelimited) \
*(___ksymtab+_bcd2bin) \
*(___ksymtab+bcm_add_64) \
*(___ksymtab+bcm_alloc_rxcplid_list) \
*(___ksymtab+bcm_alloc_rxcplinfo) \
*(___ksymtab+bcm_bitprint32) \
*(___ksymtab+bcm_chain_rxcplid) \
*(___ksymtab+bcm_chipname) \
*(___ksymtab+bcm_cmp_bytes) \
*(___ksymtab+bcm_crypto_algo_name) \
*(___ksymtab+bcmdumpfields) \
*(___ksymtab+bcm_format_flags) \
*(___ksymtab+bcm_free_rxcplinfo) \
*(___ksymtab+bcm_id2rxcplinfo) \
*(___ksymtab+bcm_inc_bytes) \
*(___ksymtab+bcm_ip_cksum) \
*(___ksymtab+bcm_ipv6_ntoa) \
*(___ksymtab+bcm_mdelay) \
*(___ksymtab+bcm_nvram_cache) \
*(___ksymtab+bcm_nvram_vars) \
*(___ksymtab+bcmp) \
*(___ksymtab+bcm_parse_ordered_tlvs) \
*(___ksymtab+bcm_print_bytes) \
*(___ksymtab+bcm_robo_flow_control) \
*(___ksymtab+bcm_rxcplinfo2id) \
*(___ksymtab+bcm_rxcpllist_end) \
*(___ksymtab+bcmstricmp) \
*(___ksymtab+bcmstrnicmp) \
*(___ksymtab+bcmstrnstr) \
*(___ksymtab+bcmstrtok) \
*(___ksymtab+bcm_sub_64) \
*(___ksymtab+bcm_uint64_right_shift) \
*(___ksymtab+_bcmutils_dummy_fn) \
*(___ksymtab+bdev_direct_access) \
*(___ksymtab+bdev_read_page) \
*(___ksymtab+bdev_stack_limits) \
*(___ksymtab+bdev_write_page) \
*(___ksymtab+bdget) \
*(___ksymtab+bdget_disk) \
*(___ksymtab+bdgrab) \
*(___ksymtab+bd_link_disk_holder) \
*(___ksymtab+bd_set_size) \
*(___ksymtab+bd_unlink_disk_holder) \
*(___ksymtab+bfifo_qdisc_ops) \
*(___ksymtab+_bin2bcd) \
*(___ksymtab+bin2hex) \
*(___ksymtab+bio_add_pc_page) \
*(___ksymtab+bio_advance) \
*(___ksymtab+bio_alloc_pages) \
*(___ksymtab+bio_chain) \
*(___ksymtab+bio_clone_bioset) \
*(___ksymtab+__bio_clone_fast) \
*(___ksymtab+bio_clone_fast) \
*(___ksymtab+bio_copy_data) \
*(___ksymtab+bio_copy_kern) \
*(___ksymtab+bio_endio) \
*(___ksymtab+bio_init) \
*(___ksymtab+bio_map_kern) \
*(___ksymtab+bio_phys_segments) \
*(___ksymtab+bio_reset) \
*(___ksymtab+bioset_create) \
*(___ksymtab+bioset_create_nobvec) \
*(___ksymtab+bioset_free) \
*(___ksymtab+bio_split) \
*(___ksymtab+bio_trim) \
*(___ksymtab+bio_uncopy_user) \
*(___ksymtab+bio_unmap_user) \
*(___ksymtab+bitmap_alloc) \
*(___ksymtab+bitmap_allocate_region) \
*(___ksymtab+__bitmap_and) \
*(___ksymtab+__bitmap_andnot) \
*(___ksymtab+bitmap_bitremap) \
*(___ksymtab+__bitmap_complement) \
*(___ksymtab+__bitmap_equal) \
*(___ksymtab+bitmap_find_free_region) \
*(___ksymtab+bitmap_find_next_zero_area_off) \
*(___ksymtab+bitmap_fold) \
*(___ksymtab+bitmap_free) \
*(___ksymtab+__bitmap_intersects) \
*(___ksymtab+bitmap_onto) \
*(___ksymtab+__bitmap_or) \
*(___ksymtab+__bitmap_parse) \
*(___ksymtab+bitmap_parselist) \
*(___ksymtab+bitmap_parselist_user) \
*(___ksymtab+bitmap_parse_user) \
*(___ksymtab+bitmap_print_to_pagebuf) \
*(___ksymtab+bitmap_release_region) \
*(___ksymtab+bitmap_remap) \
*(___ksymtab+bitmap_set) \
*(___ksymtab+__bitmap_shift_right) \
*(___ksymtab+__bitmap_subset) \
*(___ksymtab+__bitmap_xor) \
*(___ksymtab+bitmap_zalloc) \
*(___ksymtab+blk_abort_request) \
*(___ksymtab+blk_alloc_queue) \
*(___ksymtab+blk_alloc_queue_node) \
*(___ksymtab+blk_check_plugged) \
*(___ksymtab+blkcipher_aead_walk_virt_block) \
*(___ksymtab+blkcipher_walk_phys) \
*(___ksymtab+blkcipher_walk_virt) \
*(___ksymtab+__blkdev_driver_ioctl) \
*(___ksymtab+blkdev_fsync) \
*(___ksymtab+blkdev_get) \
*(___ksymtab+blkdev_get_by_path) \
*(___ksymtab+blkdev_ioctl) \
*(___ksymtab+blkdev_issue_write_same) \
*(___ksymtab+blkdev_read_iter) \
*(___ksymtab+__blkdev_reread_part) \
*(___ksymtab+blkdev_reread_part) \
*(___ksymtab+blkdev_write_iter) \
*(___ksymtab+__blk_end_request) \
*(___ksymtab+blk_end_request) \
*(___ksymtab+__blk_end_request_cur) \
*(___ksymtab+blk_end_request_cur) \
*(___ksymtab+__blk_end_request_err) \
*(___ksymtab+blk_end_request_err) \
*(___ksymtab+blk_fetch_request) \
*(___ksymtab+blk_init_allocated_queue) \
*(___ksymtab+blk_insert_cloned_request) \
*(___ksymtab+blk_iopoll_disable) \
*(___ksymtab+blk_iopoll_enable) \
*(___ksymtab+blk_iopoll_init) \
*(___ksymtab+blk_iopoll_sched) \
*(___ksymtab+blk_limits_io_min) \
*(___ksymtab+blk_limits_io_opt) \
*(___ksymtab+blk_lld_busy) \
*(___ksymtab+blk_make_request) \
*(___ksymtab+blk_mq_abort_requeue_list) \
*(___ksymtab+blk_mq_add_to_requeue_list) \
*(___ksymtab+blk_mq_alloc_request) \
*(___ksymtab+blk_mq_all_tag_busy_iter) \
*(___ksymtab+blk_mq_cancel_requeue_work) \
*(___ksymtab+blk_mq_can_queue) \
*(___ksymtab+blk_mq_end_request) \
*(___ksymtab+blk_mq_free_hctx_request) \
*(___ksymtab+blk_mq_free_request) \
*(___ksymtab+blk_mq_init_allocated_queue) \
*(___ksymtab+blk_mq_register_disk) \
*(___ksymtab+blk_mq_request_started) \
*(___ksymtab+blk_mq_run_hw_queues) \
*(___ksymtab+blk_mq_start_hw_queue) \
*(___ksymtab+blk_mq_tags_cpumask) \
*(___ksymtab+blk_mq_tag_to_rq) \
*(___ksymtab+blk_mq_unique_tag) \
*(___ksymtab+blk_queue_bypass_end) \
*(___ksymtab+blk_queue_bypass_start) \
*(___ksymtab+blk_queue_chunk_sectors) \
*(___ksymtab+blk_queue_dma_drain) \
*(___ksymtab+blk_queue_dma_pad) \
*(___ksymtab+blk_queue_end_tag) \
*(___ksymtab+blk_queue_find_tag) \
*(___ksymtab+blk_queue_free_tags) \
*(___ksymtab+blk_queue_invalidate_tags) \
*(___ksymtab+blk_queue_io_opt) \
*(___ksymtab+blk_queue_make_request) \
*(___ksymtab+blk_queue_resize_tags) \
*(___ksymtab+blk_queue_split) \
*(___ksymtab+blk_queue_stack_limits) \
*(___ksymtab+blk_queue_virt_boundary) \
*(___ksymtab+blk_recount_segments) \
*(___ksymtab+blk_rq_prep_clone) \
*(___ksymtab+blk_rq_unprep_clone) \
*(___ksymtab+blk_set_default_limits) \
*(___ksymtab+blk_set_queue_dying) \
*(___ksymtab+blk_set_stacking_limits) \
*(___ksymtab+blk_stack_limits) \
*(___ksymtab+blk_sync_queue) \
*(___ksymtab+blocking_notifier_chain_cond_register) \
*(___ksymtab+__bpf_call_base) \
*(___ksymtab+bpf_prog_alloc) \
*(___ksymtab+bpf_prog_create) \
*(___ksymtab+bpf_prog_create_from_user) \
*(___ksymtab+bpf_prog_destroy) \
*(___ksymtab+__bpf_prog_free) \
*(___ksymtab+bpf_prog_free) \
*(___ksymtab+bpf_prog_realloc) \
*(___ksymtab+bpf_prog_select_runtime) \
*(___ksymtab+bpf_skb_vlan_pop_proto) \
*(___ksymtab+bpf_skb_vlan_push_proto) \
*(___ksymtab+bprm_change_interp) \
*(___ksymtab+br_deliver) \
*(___ksymtab+br_dev_queue_push_xmit) \
*(___ksymtab+br_forward_finish) \
*(___ksymtab+br_handle_frame_finish) \
*(___ksymtab+brioctl_set) \
*(___ksymtab+br_multicast_has_querier_adjacent) \
*(___ksymtab+br_multicast_has_querier_anywhere) \
*(___ksymtab+br_multicast_list_adjacent) \
*(___ksymtab+brnf_call_emf) \
*(___ksymtab+broadcast_uevent) \
*(___ksymtab+__bswapdi2) \
*(___ksymtab+__bswapsi2) \
*(___ksymtab+buffer_check_dirty_writeback) \
*(___ksymtab+build_skb) \
*(___ksymtab+bus_create_file) \
*(___ksymtab+bus_for_each_drv) \
*(___ksymtab+bus_get_kset) \
*(___ksymtab+bus_remove_file) \
*(___ksymtab+bus_rescan_devices) \
*(___ksymtab+cacheid) \
*(___ksymtab+cad_pid) \
*(___ksymtab+call_rcu_bh) \
*(___ksymtab+call_srcu) \
*(___ksymtab+call_usermodehelper) \
*(___ksymtab+call_usermodehelper_exec) \
*(___ksymtab+cancel_dirty_page) \
*(___ksymtab+can_do_mlock) \
*(___ksymtab+can_nice) \
*(___ksymtab+__cap_empty_set) \
*(___ksymtab+cbuck2vreg_tbl) \
*(___ksymtab+cdev_set_parent) \
*(___ksymtab+cfi_build_cmd) \
*(___ksymtab+cfi_build_cmd_addr) \
*(___ksymtab+cfi_cmdset_0001) \
*(___ksymtab+cfi_cmdset_0002) \
*(___ksymtab+cfi_cmdset_0003) \
*(___ksymtab+cfi_cmdset_0006) \
*(___ksymtab+cfi_cmdset_0200) \
*(___ksymtab+cfi_cmdset_0701) \
*(___ksymtab+cfi_merge_status) \
*(___ksymtab+cfi_qry_mode_off) \
*(___ksymtab+cfi_qry_mode_on) \
*(___ksymtab+cfi_qry_present) \
*(___ksymtab+cfi_read_pri) \
*(___ksymtab+cfi_send_gen_cmd) \
*(___ksymtab+cfi_udelay) \
*(___ksymtab+cfi_varsize_frob) \
*(___ksymtab+_change_bit) \
*(___ksymtab+check_disk_size_change) \
*(___ksymtab+__check_sticky) \
*(___ksymtab+check_syslog_permissions) \
*(___ksymtab+class_compat_create_link) \
*(___ksymtab+class_compat_register) \
*(___ksymtab+class_compat_remove_link) \
*(___ksymtab+class_compat_unregister) \
*(___ksymtab+class_create_file_ns) \
*(___ksymtab+class_dev_iter_exit) \
*(___ksymtab+class_dev_iter_init) \
*(___ksymtab+class_dev_iter_next) \
*(___ksymtab+class_for_each_device) \
*(___ksymtab+class_remove_file_ns) \
*(___ksymtab+clk_add_alias) \
*(___ksymtab+clkdev_add) \
*(___ksymtab+clkdev_alloc) \
*(___ksymtab+clkdev_create) \
*(___ksymtab+clkdev_drop) \
*(___ksymtab+clk_get) \
*(___ksymtab+clk_round_rate) \
*(___ksymtab+clk_set_rate) \
*(___ksymtab+clockevent_delta2ns) \
*(___ksymtab+clockevents_config_and_register) \
*(___ksymtab+clockevents_register_device) \
*(___ksymtab+clockevents_unbind_device) \
*(___ksymtab+clocksource_change_rating) \
*(___ksymtab+__clocksource_register_scale) \
*(___ksymtab+clocksource_unregister) \
*(___ksymtab+clone_private_mount) \
*(___ksymtab+__clzdi2) \
*(___ksymtab+__clzsi2) \
*(___ksymtab+coherence_flag) \
*(___ksymtab+coherence_win_sz) \
*(___ksymtab+commit_creds) \
*(___ksymtab+__compat_only_sysfs_link_entry_to_kobj) \
*(___ksymtab+completion_done) \
*(___ksymtab+component_add) \
*(___ksymtab+component_bind_all) \
*(___ksymtab+component_del) \
*(___ksymtab+component_master_add) \
*(___ksymtab+component_master_add_child) \
*(___ksymtab+component_master_add_with_match) \
*(___ksymtab+component_master_del) \
*(___ksymtab+component_match_add) \
*(___ksymtab+component_unbind_all) \
*(___ksymtab+cond_synchronize_rcu) \
*(___ksymtab+console_drivers) \
*(___ksymtab+console_lock) \
*(___ksymtab+console_set_on_cmdline) \
*(___ksymtab+console_start) \
*(___ksymtab+console_stop) \
*(___ksymtab+console_suspend_enabled) \
*(___ksymtab+console_trylock) \
*(___ksymtab+console_unlock) \
*(___ksymtab+__cookie_v4_check) \
*(___ksymtab+__cookie_v4_init_sequence) \
*(___ksymtab+copy_strings_kernel) \
*(___ksymtab+cpu_active_mask) \
*(___ksymtab+cpu_all_bits) \
*(___ksymtab+cpu_bit_bitmap) \
*(___ksymtab+cpu_clock) \
*(___ksymtab+cpu_is_hotpluggable) \
*(___ksymtab+cpumask_local_spread) \
*(___ksymtab+cpumask_next_and) \
*(___ksymtab+cpumask_next_wrap) \
*(___ksymtab+cpu_present_mask) \
*(___ksymtab+cpu_rmap_add) \
*(___ksymtab+cpu_rmap_put) \
*(___ksymtab+cpu_subsys) \
*(___ksymtab+cpu_tlb) \
*(___ksymtab+cpu_topology) \
*(___ksymtab+cpu_user) \
*(___ksymtab+crc_ccitt) \
*(___ksymtab+crc_ccitt_table) \
*(___ksymtab+crypto_aes_expand_key) \
*(___ksymtab+crypto_aes_set_key) \
*(___ksymtab+crypto_ahash_final) \
*(___ksymtab+crypto_ahash_walk_first) \
*(___ksymtab+crypto_alg_extsize) \
*(___ksymtab+crypto_alg_list) \
*(___ksymtab+crypto_alg_sem) \
*(___ksymtab+crypto_alg_tested) \
*(___ksymtab+crypto_alloc_ablkcipher) \
*(___ksymtab+crypto_alloc_akcipher) \
*(___ksymtab+crypto_alloc_pcomp) \
*(___ksymtab+crypto_alloc_skcipher) \
*(___ksymtab+__crypto_alloc_tfm) \
*(___ksymtab+crypto_alloc_tfm) \
*(___ksymtab+crypto_attr_u32) \
*(___ksymtab+crypto_chain) \
*(___ksymtab+crypto_create_tfm) \
*(___ksymtab+crypto_del_default_rng) \
*(___ksymtab+crypto_dequeue_request) \
*(___ksymtab+crypto_enqueue_request) \
*(___ksymtab+crypto_fl_tab) \
*(___ksymtab+crypto_ft_tab) \
*(___ksymtab+crypto_givcipher_type) \
*(___ksymtab+crypto_grab_spawn) \
*(___ksymtab+crypto_hash_alg_has_setkey) \
*(___ksymtab+crypto_hash_walk_done) \
*(___ksymtab+crypto_hash_walk_first) \
*(___ksymtab+crypto_il_tab) \
*(___ksymtab+crypto_init_queue) \
*(___ksymtab+crypto_init_shash_spawn) \
*(___ksymtab+crypto_it_tab) \
*(___ksymtab+crypto_larval_alloc) \
*(___ksymtab+crypto_larval_kill) \
*(___ksymtab+crypto_mod_get) \
*(___ksymtab+crypto_probing_notify) \
*(___ksymtab+crypto_register_aead) \
*(___ksymtab+crypto_register_aeads) \
*(___ksymtab+crypto_register_ahash) \
*(___ksymtab+crypto_register_akcipher) \
*(___ksymtab+crypto_register_notifier) \
*(___ksymtab+crypto_register_pcomp) \
*(___ksymtab+crypto_remove_final) \
*(___ksymtab+crypto_remove_spawns) \
*(___ksymtab+crypto_rng_reset) \
*(___ksymtab+crypto_shash_digest) \
*(___ksymtab+crypto_tfm_in_queue) \
*(___ksymtab+crypto_unregister_aead) \
*(___ksymtab+crypto_unregister_aeads) \
*(___ksymtab+crypto_unregister_ahash) \
*(___ksymtab+crypto_unregister_akcipher) \
*(___ksymtab+crypto_unregister_instance) \
*(___ksymtab+crypto_unregister_notifier) \
*(___ksymtab+crypto_unregister_pcomp) \
*(___ksymtab+__ctzdi2) \
*(___ksymtab+__ctzsi2) \
*(___ksymtab+current_work) \
*(___ksymtab+d_add_ci) \
*(___ksymtab+dbushost_initvars_flash) \
*(___ksymtab+dcache_dir_close) \
*(___ksymtab+dcache_dir_lseek) \
*(___ksymtab+dcache_dir_open) \
*(___ksymtab+dcache_readdir) \
*(___ksymtab+ddr_phys_offset2_va) \
*(___ksymtab+ddr_phys_offset_va) \
*(___ksymtab+debugfs_create_atomic_t) \
*(___ksymtab+debugfs_create_automount) \
*(___ksymtab+debugfs_create_blob) \
*(___ksymtab+debugfs_create_devm_seqfile) \
*(___ksymtab+debugfs_create_regset32) \
*(___ksymtab+debugfs_create_size_t) \
*(___ksymtab+debugfs_create_symlink) \
*(___ksymtab+debugfs_create_u16) \
*(___ksymtab+debugfs_create_u32) \
*(___ksymtab+debugfs_create_u32_array) \
*(___ksymtab+debugfs_create_u64) \
*(___ksymtab+debugfs_create_u8) \
*(___ksymtab+debugfs_create_ulong) \
*(___ksymtab+debugfs_create_x16) \
*(___ksymtab+debugfs_create_x32) \
*(___ksymtab+debugfs_create_x64) \
*(___ksymtab+debugfs_create_x8) \
*(___ksymtab+debugfs_initialized) \
*(___ksymtab+debugfs_print_regs32) \
*(___ksymtab+debug_locks) \
*(___ksymtab+debug_locks_off) \
*(___ksymtab+debug_locks_silent) \
*(___ksymtab+default_file_splice_read) \
*(___ksymtab+default_qdisc_ops) \
*(___ksymtab+delete_from_page_cache) \
*(___ksymtab+del_mtd_blktrans_dev) \
*(___ksymtab+dentry_needs_remove_privs) \
*(___ksymtab+dentry_open) \
*(___ksymtab+dentry_path_raw) \
*(___ksymtab+deregister_mtd_blktrans) \
*(___ksymtab+deregister_mtd_parser) \
*(___ksymtab+__destroy_inode) \
*(___ksymtab+dev_activate) \
*(___ksymtab+dev_add_offload) \
*(___ksymtab+dev_addr_add) \
*(___ksymtab+dev_addr_del) \
*(___ksymtab+dev_addr_flush) \
*(___ksymtab+dev_addr_init) \
*(___ksymtab+dev_alert) \
*(___ksymtab+dev_base_lock) \
*(___ksymtab+dev_change_carrier) \
*(___ksymtab+dev_change_flags) \
*(___ksymtab+dev_change_net_namespace) \
*(___ksymtab+dev_deactivate) \
*(___ksymtab+dev_driver_string) \
*(___ksymtab+dev_emerg) \
*(___ksymtab+dev_fill_metadata_dst) \
*(___ksymtab+dev_getbyhwaddr_rcu) \
*(___ksymtab+__dev_getfirstbyhwtype) \
*(___ksymtab+dev_getfirstbyhwtype) \
*(___ksymtab+dev_get_nest_level) \
*(___ksymtab+dev_get_phys_port_id) \
*(___ksymtab+dev_get_phys_port_name) \
*(___ksymtab+dev_graft_qdisc) \
*(___ksymtab+device_find_child) \
*(___ksymtab+device_get_child_node_count) \
*(___ksymtab+device_get_dma_attr) \
*(___ksymtab+device_get_mac_address) \
*(___ksymtab+device_get_next_child_node) \
*(___ksymtab+device_get_phy_mode) \
*(___ksymtab+device_move) \
*(___ksymtab+device_property_match_string) \
*(___ksymtab+device_property_present) \
*(___ksymtab+device_property_read_u16_array) \
*(___ksymtab+device_property_read_u32_array) \
*(___ksymtab+device_property_read_u64_array) \
*(___ksymtab+device_property_read_u8_array) \
*(___ksymtab+device_rename) \
*(___ksymtab+device_reprobe) \
*(___ksymtab+device_show_bool) \
*(___ksymtab+device_show_int) \
*(___ksymtab+device_show_ulong) \
*(___ksymtab+device_store_bool) \
*(___ksymtab+device_store_int) \
*(___ksymtab+device_store_ulong) \
*(___ksymtab+dev_load) \
*(___ksymtab+devm_add_action) \
*(___ksymtab+dev_mc_init) \
*(___ksymtab+devm_gen_pool_create) \
*(___ksymtab+devm_hwrng_register) \
*(___ksymtab+devm_hwrng_unregister) \
*(___ksymtab+devm_input_allocate_device) \
*(___ksymtab+devm_ioport_map) \
*(___ksymtab+devm_ioport_unmap) \
*(___ksymtab+devm_mdiobus_alloc_size) \
*(___ksymtab+devm_mdiobus_free) \
*(___ksymtab+devm_memremap) \
*(___ksymtab+devm_memunmap) \
*(___ksymtab+__devm_of_phy_provider_register) \
*(___ksymtab+devm_of_phy_provider_unregister) \
*(___ksymtab+devm_phy_create) \
*(___ksymtab+devm_phy_destroy) \
*(___ksymtab+devm_phy_optional_get) \
*(___ksymtab+__devm_release_region) \
*(___ksymtab+devm_release_resource) \
*(___ksymtab+devm_remove_action) \
*(___ksymtab+devm_request_any_context_irq) \
*(___ksymtab+__devm_request_region) \
*(___ksymtab+devm_request_resource) \
*(___ksymtab+dev_remove_offload) \
*(___ksymtab+devres_destroy) \
*(___ksymtab+devres_for_each_res) \
*(___ksymtab+devres_get) \
*(___ksymtab+devres_release) \
*(___ksymtab+devres_remove) \
*(___ksymtab+dev_uc_add) \
*(___ksymtab+dev_uc_add_excl) \
*(___ksymtab+dev_uc_del) \
*(___ksymtab+dev_uc_init) \
*(___ksymtab+d_genocide) \
*(___ksymtab+dio_end_io) \
*(___ksymtab+disable_hardirq) \
*(___ksymtab+disable_irq) \
*(___ksymtab+disable_irq_nosync) \
*(___ksymtab+disable_percpu_irq) \
*(___ksymtab+disk_get_part) \
*(___ksymtab+disk_map_sector_rcu) \
*(___ksymtab+disk_part_iter_exit) \
*(___ksymtab+disk_part_iter_init) \
*(___ksymtab+disk_part_iter_next) \
*(___ksymtab+disk_stack_limits) \
*(___ksymtab+__div0) \
*(___ksymtab+__div64_32) \
*(___ksymtab+div64_s64) \
*(___ksymtab+div_s64_rem) \
*(___ksymtab+__divsi3) \
*(___ksymtab+dlci_ioctl_set) \
*(___ksymtab+dll_pool_alloc) \
*(___ksymtab+dll_pool_detach) \
*(___ksymtab+dll_pool_free) \
*(___ksymtab+dll_pool_free_tail) \
*(___ksymtab+dll_pool_init) \
*(___ksymtab+dma64proc) \
*(___ksymtab+dma_common_get_sgtable) \
*(___ksymtab+dma_common_mmap) \
*(___ksymtab+dma_declare_coherent_memory) \
*(___ksymtab+dma_get_required_mask) \
*(___ksymtab+dma_link_handle) \
*(___ksymtab+dmam_alloc_coherent) \
*(___ksymtab+dmam_alloc_noncoherent) \
*(___ksymtab+dmam_declare_coherent_memory) \
*(___ksymtab+dmam_free_coherent) \
*(___ksymtab+dmam_free_noncoherent) \
*(___ksymtab+dma_mmap_from_coherent) \
*(___ksymtab+dmam_pool_create) \
*(___ksymtab+dmam_pool_destroy) \
*(___ksymtab+dmam_release_declared_memory) \
*(___ksymtab+dma_msgbuf_txfast) \
*(___ksymtab+dma_release_declared_memory) \
*(___ksymtab+dma_rxfast) \
*(___ksymtab+dma_rxfill_suspend) \
*(___ksymtab+dma_rxfill_unframed) \
*(___ksymtab+dma_txp) \
*(___ksymtab+dma_txpioloopback) \
*(___ksymtab+dma_txrewind) \
*(___ksymtab+d_obtain_root) \
*(___ksymtab+do_exit) \
*(___ksymtab+do_gettimeofday) \
*(___ksymtab+do_map_probe) \
*(___ksymtab+done_path_create) \
*(___ksymtab+do_SAK) \
*(___ksymtab+do_settimeofday64) \
*(___ksymtab+do_splice_direct) \
*(___ksymtab+do_trace_rcu_torture_read) \
*(___ksymtab+d_prune_aliases) \
*(___ksymtab+dql_init) \
*(___ksymtab+dql_reset) \
*(___ksymtab+drain_workqueue) \
*(___ksymtab+driver_find) \
*(___ksymtab+driver_find_device) \
*(___ksymtab+driver_for_each_device) \
*(___ksymtab+d_set_d_op) \
*(___ksymtab+d_set_fallthru) \
*(___ksymtab+dst_init) \
*(___ksymtab+dummy_irq_chip) \
*(___ksymtab+dump_fpu) \
*(___ksymtab+dump_page) \
*(___ksymtab+each_symbol_section) \
*(___ksymtab+elevator_alloc) \
*(___ksymtab+elevator_change) \
*(___ksymtab+elevator_exit) \
*(___ksymtab+elevator_init) \
*(___ksymtab+elf_check_arch) \
*(___ksymtab+elf_hwcap) \
*(___ksymtab+elf_hwcap2) \
*(___ksymtab+elf_platform) \
*(___ksymtab+elf_set_personality) \
*(___ksymtab+__elv_add_request) \
*(___ksymtab+elv_add_request) \
*(___ksymtab+elv_dispatch_add_tail) \
*(___ksymtab+elv_rb_add) \
*(___ksymtab+elv_rb_del) \
*(___ksymtab+elv_rb_find) \
*(___ksymtab+elv_rb_former_request) \
*(___ksymtab+elv_rb_latter_request) \
*(___ksymtab+elv_register) \
*(___ksymtab+elv_register_queue) \
*(___ksymtab+elv_rq_merge_ok) \
*(___ksymtab+elv_unregister) \
*(___ksymtab+elv_unregister_queue) \
*(___ksymtab+empty_aops) \
*(___ksymtab+empty_zero_page) \
*(___ksymtab+enable_irq) \
*(___ksymtab+enable_percpu_irq) \
*(___ksymtab+end_buffer_async_write) \
*(___ksymtab+eth_change_mtu) \
*(___ksymtab+eth_get_headlen) \
*(___ksymtab+eth_gro_receive) \
*(___ksymtab+eventfd_ctx_fdget) \
*(___ksymtab+eventfd_ctx_fileget) \
*(___ksymtab+eventfd_ctx_get) \
*(___ksymtab+eventfd_ctx_put) \
*(___ksymtab+eventfd_ctx_read) \
*(___ksymtab+eventfd_signal) \
*(___ksymtab+expand_files) \
*(___ksymtab+fanout_mutex) \
*(___ksymtab+fb_notifier_call_chain) \
*(___ksymtab+fb_register_client) \
*(___ksymtab+fb_unregister_client) \
*(___ksymtab+fd_install) \
*(___ksymtab+fib_select_path) \
*(___ksymtab+fifo_create_dflt) \
*(___ksymtab+fifo_set_limit) \
*(___ksymtab+filemap_page_mkwrite) \
*(___ksymtab+file_open_root) \
*(___ksymtab+file_ra_state_init) \
*(___ksymtab+find_extend_vma) \
*(___ksymtab+find_get_entry) \
*(___ksymtab+find_get_pages_contig) \
*(___ksymtab+find_get_pid) \
*(___ksymtab+find_last_bit) \
*(___ksymtab+find_lock_entry) \
*(___ksymtab+find_module) \
*(___ksymtab+find_pid_ns) \
*(___ksymtab+find_symbol) \
*(___ksymtab+find_task_by_vpid) \
*(___ksymtab+find_vma) \
*(___ksymtab+find_vpid) \
*(___ksymtab+firmware_kobj) \
*(___ksymtab+fixed_size_llseek) \
*(___ksymtab+flex_array_alloc) \
*(___ksymtab+flex_array_clear) \
*(___ksymtab+flex_array_free) \
*(___ksymtab+flex_array_free_parts) \
*(___ksymtab+flex_array_get) \
*(___ksymtab+flex_array_get_ptr) \
*(___ksymtab+flex_array_prealloc) \
*(___ksymtab+flex_array_put) \
*(___ksymtab+flex_array_shrink) \
*(___ksymtab+flow_cache_fini) \
*(___ksymtab+flow_cache_init) \
*(___ksymtab+flow_hash_from_keys) \
*(___ksymtab+flush_kernel_dcache_page) \
*(___ksymtab+flush_kthread_work) \
*(___ksymtab+flush_kthread_worker) \
*(___ksymtab+flush_old_exec) \
*(___ksymtab+flush_signals) \
*(___ksymtab+follow_pfn) \
*(___ksymtab+force_sig) \
*(___ksymtab+forget_all_cached_acls) \
*(___ksymtab+forget_cached_acl) \
*(___ksymtab+free_anon_bdev) \
*(___ksymtab+free_inode_nonrcu) \
*(___ksymtab+__free_page_frag) \
*(___ksymtab+free_reserved_area) \
*(___ksymtab+free_task) \
*(___ksymtab+free_vm_area) \
*(___ksymtab+freeze_bdev) \
*(___ksymtab+f_setown) \
*(___ksymtab+fsl8250_handle_irq) \
*(___ksymtab+fsstack_copy_attr_all) \
*(___ksymtab+fsstack_copy_inode_size) \
*(___ksymtab+fsync_bdev) \
*(___ksymtab+fwnode_handle_put) \
*(___ksymtab+fwnode_property_match_string) \
*(___ksymtab+fwnode_property_present) \
*(___ksymtab+fwnode_property_read_string) \
*(___ksymtab+fwnode_property_read_string_array) \
*(___ksymtab+fwnode_property_read_u16_array) \
*(___ksymtab+fwnode_property_read_u32_array) \
*(___ksymtab+fwnode_property_read_u64_array) \
*(___ksymtab+fwnode_property_read_u8_array) \
*(___ksymtab+generic_end_io_acct) \
*(___ksymtab+generic_handle_irq) \
*(___ksymtab+generic_listxattr) \
*(___ksymtab+generic_make_request) \
*(___ksymtab+generic_mii_ioctl) \
*(___ksymtab+generic_perform_write) \
*(___ksymtab+generic_pipe_buf_confirm) \
*(___ksymtab+generic_pipe_buf_get) \
*(___ksymtab+generic_pipe_buf_release) \
*(___ksymtab+generic_pipe_buf_steal) \
*(___ksymtab+generic_splice_sendpage) \
*(___ksymtab+generic_start_io_acct) \
*(___ksymtab+gen_estimator_active) \
*(___ksymtab+gen_kill_estimator) \
*(___ksymtab+genlmsg_new_unicast) \
*(___ksymtab+genl_notify) \
*(___ksymtab+gen_new_estimator) \
*(___ksymtab+genphy_aneg_done) \
*(___ksymtab+genphy_config_init) \
*(___ksymtab+genphy_restart_aneg) \
*(___ksymtab+genphy_soft_reset) \
*(___ksymtab+gen_pool_add_virt) \
*(___ksymtab+gen_pool_alloc) \
*(___ksymtab+gen_pool_avail) \
*(___ksymtab+gen_pool_best_fit) \
*(___ksymtab+gen_pool_create) \
*(___ksymtab+gen_pool_destroy) \
*(___ksymtab+gen_pool_dma_alloc) \
*(___ksymtab+gen_pool_first_fit) \
*(___ksymtab+gen_pool_first_fit_order_align) \
*(___ksymtab+gen_pool_for_each_chunk) \
*(___ksymtab+gen_pool_free) \
*(___ksymtab+gen_pool_get) \
*(___ksymtab+gen_pool_set_algo) \
*(___ksymtab+gen_pool_size) \
*(___ksymtab+gen_pool_virt_to_phys) \
*(___ksymtab+gen_replace_estimator) \
*(___ksymtab+get_acl) \
*(___ksymtab+get_anon_bdev) \
*(___ksymtab+__getblk_slow) \
*(___ksymtab+getboottime64) \
*(___ksymtab+get_cached_acl) \
*(___ksymtab+get_cached_acl_rcu) \
*(___ksymtab+get_cpu_device) \
*(___ksymtab+get_current_tty) \
*(___ksymtab+get_disk) \
*(___ksymtab+get_fs_type) \
*(___ksymtab+get_gendisk) \
*(___ksymtab+__get_hash_from_flowi4) \
*(___ksymtab+get_io_context) \
*(___ksymtab+get_kernel_page) \
*(___ksymtab+get_kernel_pages) \
*(___ksymtab+get_max_files) \
*(___ksymtab+get_mem_type) \
*(___ksymtab+get_mm_exe_file) \
*(___ksymtab+__get_mtd_device) \
*(___ksymtab+get_mtd_device) \
*(___ksymtab+get_mtd_device_nm) \
*(___ksymtab+get_net_ns_by_fd) \
*(___ksymtab+get_net_ns_by_pid) \
*(___ksymtab+get_option) \
*(___ksymtab+get_options) \
*(___ksymtab+get_phy_device) \
*(___ksymtab+get_phy_id) \
*(___ksymtab+get_pid_task) \
*(___ksymtab+get_pktpools_registry) \
*(___ksymtab+get_random_int) \
*(___ksymtab+get_random_long) \
*(___ksymtab+getrawmonotonic64) \
*(___ksymtab+get_state_synchronize_rcu) \
*(___ksymtab+__get_task_comm) \
*(___ksymtab+get_task_exe_file) \
*(___ksymtab+get_task_io_context) \
*(___ksymtab+get_task_mm) \
*(___ksymtab+get_unmapped_area) \
*(___ksymtab+get_unused_fd_flags) \
*(___ksymtab+__get_user_2) \
*(___ksymtab+__get_user_8) \
*(___ksymtab+__get_user_pages) \
*(___ksymtab+get_user_pages) \
*(___ksymtab+__get_user_pages_fast) \
*(___ksymtab+get_user_pages_fast) \
*(___ksymtab+get_user_pages_locked) \
*(___ksymtab+__get_user_pages_unlocked) \
*(___ksymtab+get_user_pages_unlocked) \
*(___ksymtab+__get_vm_area) \
*(___ksymtab+get_vm_area) \
*(___ksymtab+__gnet_stats_copy_basic) \
*(___ksymtab+gnet_stats_copy_basic) \
*(___ksymtab+gnet_stats_copy_queue) \
*(___ksymtab+gnet_stats_copy_rate_est) \
*(___ksymtab+gnet_stats_finish_copy) \
*(___ksymtab+gnet_stats_start_copy) \
*(___ksymtab+gnet_stats_start_copy_compat) \
*(___ksymtab+gro_find_receive_by_type) \
*(___ksymtab+g_rxcplid_list) \
*(___ksymtab+g_si_pmutmr_lock_arg) \
*(___ksymtab+g_si_pmutmr_lock_cb) \
*(___ksymtab+g_si_pmutmr_unlock_cb) \
*(___ksymtab+handle_bad_irq) \
*(___ksymtab+handle_edge_irq) \
*(___ksymtab+handle_fasteoi_irq) \
*(___ksymtab+handle_level_irq) \
*(___ksymtab+handle_mm_fault) \
*(___ksymtab+handle_nested_irq) \
*(___ksymtab+handle_simple_irq) \
*(___ksymtab+have_submounts) \
*(___ksymtab+hex_to_bin) \
*(___ksymtab+hndcrc8) \
*(___ksymtab+hrtimer_forward) \
*(___ksymtab+__hrtimer_get_remaining) \
*(___ksymtab+hrtimer_resolution) \
*(___ksymtab+hrtimer_try_to_cancel) \
*(___ksymtab+hsiphash_2u32) \
*(___ksymtab+hsiphash_3u32) \
*(___ksymtab+hsiphash_4u32) \
*(___ksymtab+__hsiphash_aligned) \
*(___ksymtab+__hw_addr_init) \
*(___ksymtab+__hw_addr_sync) \
*(___ksymtab+__hw_addr_sync_dev) \
*(___ksymtab+__hw_addr_unsync) \
*(___ksymtab+__hw_addr_unsync_dev) \
*(___ksymtab+hwrng_register) \
*(___ksymtab+hwrng_unregister) \
*(___ksymtab+HX_memmem) \
*(___ksymtab+i2c_adapter_type) \
*(___ksymtab+__i2c_board_list) \
*(___ksymtab+__i2c_board_lock) \
*(___ksymtab+i2c_bus_type) \
*(___ksymtab+i2c_clients_command) \
*(___ksymtab+i2c_del_driver) \
*(___ksymtab+__i2c_first_dynamic_bus_num) \
*(___ksymtab+i2c_for_each_dev) \
*(___ksymtab+i2c_generic_gpio_recovery) \
*(___ksymtab+i2c_generic_scl_recovery) \
*(___ksymtab+i2c_get_adapter) \
*(___ksymtab+i2c_master_recv) \
*(___ksymtab+i2c_new_device) \
*(___ksymtab+i2c_new_dummy) \
*(___ksymtab+i2c_new_probed_device) \
*(___ksymtab+i2c_probe_func_quick_read) \
*(___ksymtab+i2c_put_adapter) \
*(___ksymtab+i2c_recover_bus) \
*(___ksymtab+i2c_register_driver) \
*(___ksymtab+i2c_release_client) \
*(___ksymtab+i2c_smbus_read_block_data) \
*(___ksymtab+i2c_smbus_read_byte) \
*(___ksymtab+i2c_smbus_write_block_data) \
*(___ksymtab+i2c_smbus_write_byte) \
*(___ksymtab+i2c_smbus_xfer) \
*(___ksymtab+i2c_unregister_device) \
*(___ksymtab+i2c_use_client) \
*(___ksymtab+i2c_verify_adapter) \
*(___ksymtab+i2c_verify_client) \
*(___ksymtab+icmp_err_convert) \
*(___ksymtab+id16_map_alloc) \
*(___ksymtab+id16_map_audit) \
*(___ksymtab+id16_map_failures) \
*(___ksymtab+id16_map_fini) \
*(___ksymtab+id16_map_free) \
*(___ksymtab+id16_map_init) \
*(___ksymtab+ida_destroy) \
*(___ksymtab+ida_init) \
*(___ksymtab+ida_simple_get) \
*(___ksymtab+ida_simple_remove) \
*(___ksymtab+idr_get_next) \
*(___ksymtab+idr_init) \
*(___ksymtab+idr_is_empty) \
*(___ksymtab+idr_replace) \
*(___ksymtab+in_aton) \
*(___ksymtab+in_dev_finish_destroy) \
*(___ksymtab+inet6_add_offload) \
*(___ksymtab+inet6_del_offload) \
*(___ksymtab+inet_add_offload) \
*(___ksymtab+inet_csk_addr2sockaddr) \
*(___ksymtab+inet_csk_bind_conflict) \
*(___ksymtab+inet_csk_clear_xmit_timers) \
*(___ksymtab+inet_csk_clone_lock) \
*(___ksymtab+inet_csk_delete_keepalive_timer) \
*(___ksymtab+inet_csk_destroy_sock) \
*(___ksymtab+inet_csk_init_xmit_timers) \
*(___ksymtab+inet_csk_listen_start) \
*(___ksymtab+inet_csk_listen_stop) \
*(___ksymtab+inet_csk_reqsk_queue_add) \
*(___ksymtab+inet_csk_reqsk_queue_drop) \
*(___ksymtab+inet_csk_reqsk_queue_hash_add) \
*(___ksymtab+inet_csk_reset_keepalive_timer) \
*(___ksymtab+inet_csk_route_child_sock) \
*(___ksymtab+inet_csk_route_req) \
*(___ksymtab+inet_csk_timer_bug_msg) \
*(___ksymtab+inet_del_offload) \
*(___ksymtab+inetdev_by_index) \
*(___ksymtab+inet_ehash_locks_alloc) \
*(___ksymtab+inet_frag_create) \
*(___ksymtab+inet_frag_rbtree_purge) \
*(___ksymtab+inet_getname) \
*(___ksymtab+inet_put_port) \
*(___ksymtab+inet_rtx_syn_ack) \
*(___ksymtab+__inet_twsk_hashdance) \
*(___ksymtab+init_buffer) \
*(___ksymtab+init_dummy_netdev) \
*(___ksymtab+__init_kthread_worker) \
*(___ksymtab+init_mtd_partitions) \
*(___ksymtab+init_nflash_mtd_partitions) \
*(___ksymtab+init_pid_ns) \
*(___ksymtab+init_srcu_struct) \
*(___ksymtab+in_lock_functions) \
*(___ksymtab+inode_get_bytes) \
*(___ksymtab+inode_init_always) \
*(___ksymtab+inode_sb_list_add) \
*(___ksymtab+input_alloc_absinfo) \
*(___ksymtab+input_allocate_device) \
*(___ksymtab+input_class) \
*(___ksymtab+input_close_device) \
*(___ksymtab+input_enable_softrepeat) \
*(___ksymtab+input_event) \
*(___ksymtab+input_event_from_user) \
*(___ksymtab+input_event_to_user) \
*(___ksymtab+input_ff_create) \
*(___ksymtab+input_ff_destroy) \
*(___ksymtab+input_ff_effect_from_user) \
*(___ksymtab+input_ff_erase) \
*(___ksymtab+input_ff_event) \
*(___ksymtab+input_flush_device) \
*(___ksymtab+input_free_device) \
*(___ksymtab+input_free_minor) \
*(___ksymtab+input_get_keycode) \
*(___ksymtab+input_get_new_minor) \
*(___ksymtab+input_grab_device) \
*(___ksymtab+input_handler_for_each_handle) \
*(___ksymtab+input_inject_event) \
*(___ksymtab+input_mt_assign_slots) \
*(___ksymtab+input_mt_destroy_slots) \
*(___ksymtab+input_mt_drop_unused) \
*(___ksymtab+input_mt_get_slot_by_key) \
*(___ksymtab+input_mt_init_slots) \
*(___ksymtab+input_mt_report_finger_count) \
*(___ksymtab+input_mt_report_pointer_emulation) \
*(___ksymtab+input_mt_report_slot_state) \
*(___ksymtab+input_mt_sync_frame) \
*(___ksymtab+input_open_device) \
*(___ksymtab+input_register_device) \
*(___ksymtab+input_register_handle) \
*(___ksymtab+input_register_handler) \
*(___ksymtab+input_release_device) \
*(___ksymtab+input_reset_device) \
*(___ksymtab+input_scancode_to_scalar) \
*(___ksymtab+input_set_abs_params) \
*(___ksymtab+input_set_capability) \
*(___ksymtab+input_set_keycode) \
*(___ksymtab+input_unregister_device) \
*(___ksymtab+input_unregister_handle) \
*(___ksymtab+input_unregister_handler) \
*(___ksymtab+install_exec_creds) \
*(___ksymtab+int_sqrt) \
*(___ksymtab+invalidate_bh_lrus) \
*(___ksymtab+__invalidate_device) \
*(___ksymtab+invalidate_partition) \
*(___ksymtab+iommu_area_alloc) \
*(___ksymtab+iommu_tbl_pool_init) \
*(___ksymtab+iommu_tbl_range_alloc) \
*(___ksymtab+iommu_tbl_range_free) \
*(___ksymtab+ioport_map) \
*(___ksymtab+ioport_unmap) \
*(___ksymtab+iov_iter_bvec) \
*(___ksymtab+iov_iter_kvec) \
*(___ksymtab+iov_iter_zero) \
*(___ksymtab+iov_shorten) \
*(___ksymtab+__iowrite32_copy) \
*(___ksymtab+__iowrite64_copy) \
*(___ksymtab+ip4_datagram_connect) \
*(___ksymtab+ip4_datagram_release_cb) \
*(___ksymtab+ip_build_and_send_pkt) \
*(___ksymtab+ip_check_defrag) \
*(___ksymtab+ip_ct_attach) \
*(___ksymtab+__ip_dev_find) \
*(___ksymtab+ip_do_fragment) \
*(___ksymtab+ip_idents_reserve) \
*(___ksymtab+ip_mc_check_igmp) \
*(___ksymtab+ip_options_compile) \
*(___ksymtab+ip_options_rcv_srr) \
*(___ksymtab+__ip_route_output_key_hash) \
*(___ksymtab+ip_set_add) \
*(___ksymtab+ip_set_alloc) \
*(___ksymtab+ip_set_del) \
*(___ksymtab+ip_set_elem_len) \
*(___ksymtab+ip_set_extensions) \
*(___ksymtab+ip_set_free) \
*(___ksymtab+ip_set_get_byname) \
*(___ksymtab+ip_set_get_extensions) \
*(___ksymtab+ip_set_get_ip4_port) \
*(___ksymtab+ip_set_get_ip6_port) \
*(___ksymtab+ip_set_get_ipaddr4) \
*(___ksymtab+ip_set_get_ipaddr6) \
*(___ksymtab+ip_set_get_ip_port) \
*(___ksymtab+ip_set_hostmask_map) \
*(___ksymtab+ip_set_name_byindex) \
*(___ksymtab+ip_set_netmask_map) \
*(___ksymtab+ip_set_nfnl_get_byindex) \
*(___ksymtab+ip_set_nfnl_put) \
*(___ksymtab+ip_set_put_byindex) \
*(___ksymtab+ip_set_put_extensions) \
*(___ksymtab+ip_set_range_to_cidr) \
*(___ksymtab+ip_set_test) \
*(___ksymtab+ip_set_type_register) \
*(___ksymtab+ip_set_type_unregister) \
*(___ksymtab+ipt_alloc_initial_table) \
*(___ksymtab+ipt_do_table) \
*(___ksymtab+ip_tos2prio) \
*(___ksymtab+ipt_register_table) \
*(___ksymtab+ip_tunnel_metadata_cnt) \
*(___ksymtab+iptunnel_metadata_reply) \
*(___ksymtab+ip_tunnel_need_metadata) \
*(___ksymtab+ip_tunnel_unneed_metadata) \
*(___ksymtab+ipt_unregister_table) \
*(___ksymtab+ipv4_sk_redirect) \
*(___ksymtab+ipv6_mc_check_mld) \
*(___ksymtab+ipv6_proxy_select_ident) \
*(___ksymtab+__irq_alloc_descs) \
*(___ksymtab+irq_cpu_rmap_add) \
*(___ksymtab+irq_create_direct_mapping) \
*(___ksymtab+irq_create_fwspec_mapping) \
*(___ksymtab+irq_create_mapping) \
*(___ksymtab+irq_create_of_mapping) \
*(___ksymtab+irq_create_strict_mappings) \
*(___ksymtab+irq_dispose_mapping) \
*(___ksymtab+__irq_domain_add) \
*(___ksymtab+irq_domain_add_legacy) \
*(___ksymtab+irq_domain_add_simple) \
*(___ksymtab+irq_domain_associate) \
*(___ksymtab+irq_domain_associate_many) \
*(___ksymtab+irq_domain_remove) \
*(___ksymtab+irq_domain_simple_ops) \
*(___ksymtab+irq_domain_xlate_onecell) \
*(___ksymtab+irq_domain_xlate_onetwocell) \
*(___ksymtab+irq_domain_xlate_twocell) \
*(___ksymtab+irq_find_mapping) \
*(___ksymtab+irq_find_matching_fwnode) \
*(___ksymtab+irq_free_descs) \
*(___ksymtab+irq_get_irqchip_state) \
*(___ksymtab+irq_get_irq_data) \
*(___ksymtab+irq_modify_status) \
*(___ksymtab+__irq_regs) \
*(___ksymtab+irq_set_affinity_hint) \
*(___ksymtab+irq_set_affinity_notifier) \
*(___ksymtab+irq_set_chained_handler_and_data) \
*(___ksymtab+irq_set_chip) \
*(___ksymtab+irq_set_chip_and_handler_name) \
*(___ksymtab+irq_set_chip_data) \
*(___ksymtab+irq_set_default_host) \
*(___ksymtab+__irq_set_handler) \
*(___ksymtab+irq_set_handler_data) \
*(___ksymtab+irq_set_irqchip_state) \
*(___ksymtab+irq_set_irq_type) \
*(___ksymtab+irq_set_irq_wake) \
*(___ksymtab+irq_set_vcpu_affinity) \
*(___ksymtab+irq_stat) \
*(___ksymtab+irq_to_desc) \
*(___ksymtab+irq_wake_thread) \
*(___ksymtab+irq_work_queue) \
*(___ksymtab+irq_work_queue_on) \
*(___ksymtab+irq_work_run) \
*(___ksymtab+irq_work_sync) \
*(___ksymtab+isa_dma_bridge_buggy) \
*(___ksymtab+is_skb_forwardable) \
*(___ksymtab+iterate_dir) \
*(___ksymtab+iterate_fd) \
*(___ksymtab+iter_div_u64_rem) \
*(___ksymtab+iw_handler_get_spy) \
*(___ksymtab+iw_handler_get_thrspy) \
*(___ksymtab+iw_handler_set_spy) \
*(___ksymtab+iw_handler_set_thrspy) \
*(___ksymtab+jump_label_rate_limit) \
*(___ksymtab+kallsyms_on_each_symbol) \
*(___ksymtab+kcrypto_wq) \
*(___ksymtab+kernel_accept) \
*(___ksymtab+kernel_cpustat) \
*(___ksymtab+kernel_getpeername) \
*(___ksymtab+kernel_getsockname) \
*(___ksymtab+kernel_getsockopt) \
*(___ksymtab+kernel_halt) \
*(___ksymtab+kernel_listen) \
*(___ksymtab+kernel_param_lock) \
*(___ksymtab+kernel_param_unlock) \
*(___ksymtab+kernel_power_off) \
*(___ksymtab+kernel_restart) \
*(___ksymtab+kernel_sendpage) \
*(___ksymtab+kernel_sock_ioctl) \
*(___ksymtab+__kernel_write) \
*(___ksymtab+kernel_write) \
*(___ksymtab+kernfs_find_and_get_ns) \
*(___ksymtab+kernfs_get) \
*(___ksymtab+kernfs_notify) \
*(___ksymtab+kernfs_path) \
*(___ksymtab+kernfs_put) \
*(___ksymtab+kern_mount_data) \
*(___ksymtab+kern_unmount) \
*(___ksymtab+key_alloc) \
*(___ksymtab+key_instantiate_and_link) \
*(___ksymtab+key_invalidate) \
*(___ksymtab+key_link) \
*(___ksymtab+key_payload_reserve) \
*(___ksymtab+key_reject_and_link) \
*(___ksymtab+keyring_clear) \
*(___ksymtab+keyring_search) \
*(___ksymtab+key_set_timeout) \
*(___ksymtab+key_task_permission) \
*(___ksymtab+key_type_keyring) \
*(___ksymtab+key_type_user) \
*(___ksymtab+key_unlink) \
*(___ksymtab+__kfifo_dma_in_finish_r) \
*(___ksymtab+__kfifo_dma_in_prepare) \
*(___ksymtab+__kfifo_dma_in_prepare_r) \
*(___ksymtab+__kfifo_dma_out_finish_r) \
*(___ksymtab+__kfifo_dma_out_prepare) \
*(___ksymtab+__kfifo_dma_out_prepare_r) \
*(___ksymtab+__kfifo_from_user) \
*(___ksymtab+__kfifo_from_user_r) \
*(___ksymtab+__kfifo_len_r) \
*(___ksymtab+__kfifo_max_r) \
*(___ksymtab+__kfifo_skip_r) \
*(___ksymtab+__kfifo_to_user) \
*(___ksymtab+__kfifo_to_user_r) \
*(___ksymtab+kick_all_cpus_sync) \
*(___ksymtab+kick_process) \
*(___ksymtab+kill_bdev) \
*(___ksymtab+kill_pgrp) \
*(___ksymtab+kill_pid) \
*(___ksymtab+kill_proc_info) \
*(___ksymtab+klist_add_before) \
*(___ksymtab+klist_add_behind) \
*(___ksymtab+klist_add_head) \
*(___ksymtab+klist_add_tail) \
*(___ksymtab+klist_del) \
*(___ksymtab+klist_init) \
*(___ksymtab+klist_iter_exit) \
*(___ksymtab+klist_iter_init) \
*(___ksymtab+klist_iter_init_node) \
*(___ksymtab+klist_next) \
*(___ksymtab+klist_node_attached) \
*(___ksymtab+klist_prev) \
*(___ksymtab+klist_remove) \
*(___ksymtab+kmalloc_order) \
*(___ksymtab+kmem_cache_shrink) \
*(___ksymtab+kmem_cache_size) \
*(___ksymtab+km_is_alive) \
*(___ksymtab+km_new_mapping) \
*(___ksymtab+km_policy_expired) \
*(___ksymtab+km_policy_notify) \
*(___ksymtab+km_query) \
*(___ksymtab+kmsg_dump_get_buffer) \
*(___ksymtab+kmsg_dump_get_line) \
*(___ksymtab+kmsg_dump_register) \
*(___ksymtab+kmsg_dump_rewind) \
*(___ksymtab+kmsg_dump_unregister) \
*(___ksymtab+km_state_expired) \
*(___ksymtab+km_state_notify) \
*(___ksymtab+kobject_add) \
*(___ksymtab+kobject_get) \
*(___ksymtab+kobject_get_path) \
*(___ksymtab+kobject_get_unless_zero) \
*(___ksymtab+kobject_init) \
*(___ksymtab+kobject_move) \
*(___ksymtab+kobject_rename) \
*(___ksymtab+kobj_sysfs_ops) \
*(___ksymtab+kset_create_and_add) \
*(___ksymtab+ksize) \
*(___ksymtab+kstat) \
*(___ksymtab+kstrtol_from_user) \
*(___ksymtab+kstrtoll) \
*(___ksymtab+kstrtoll_from_user) \
*(___ksymtab+kstrtos16) \
*(___ksymtab+kstrtos16_from_user) \
*(___ksymtab+kstrtos8) \
*(___ksymtab+kstrtos8_from_user) \
*(___ksymtab+kstrtou16) \
*(___ksymtab+kstrtou16_from_user) \
*(___ksymtab+kstrtou8) \
*(___ksymtab+kstrtou8_from_user) \
*(___ksymtab+kthread_bind) \
*(___ksymtab+kthread_freezable_should_stop) \
*(___ksymtab+kthread_park) \
*(___ksymtab+kthread_parkme) \
*(___ksymtab+kthread_should_park) \
*(___ksymtab+kthread_unpark) \
*(___ksymtab+kthread_worker_fn) \
*(___ksymtab+ktime_add_safe) \
*(___ksymtab+__ktime_divns) \
*(___ksymtab+ktime_mono_to_any) \
*(___ksymtab+l2x0_read_event_cnt) \
*(___ksymtab+l2x0_reg_lock) \
*(___ksymtab+laptop_mode) \
*(___ksymtab+lcm) \
*(___ksymtab+lcm_not_zero) \
*(___ksymtab+lease_get_mtime) \
*(___ksymtab+lease_modify) \
*(___ksymtab+lg_global_lock) \
*(___ksymtab+lg_global_unlock) \
*(___ksymtab+lg_local_lock) \
*(___ksymtab+lg_local_lock_cpu) \
*(___ksymtab+lg_local_unlock) \
*(___ksymtab+lg_local_unlock_cpu) \
*(___ksymtab+lg_lock_init) \
*(___ksymtab+linkwatch_fire_event) \
*(___ksymtab+list_lru_add) \
*(___ksymtab+list_lru_count_node) \
*(___ksymtab+list_lru_count_one) \
*(___ksymtab+list_lru_del) \
*(___ksymtab+list_lru_destroy) \
*(___ksymtab+__list_lru_init) \
*(___ksymtab+list_lru_isolate) \
*(___ksymtab+list_lru_isolate_move) \
*(___ksymtab+list_lru_walk_node) \
*(___ksymtab+list_lru_walk_one) \
*(___ksymtab+llc_add_pack) \
*(___ksymtab+llc_build_and_send_ui_pkt) \
*(___ksymtab+llc_mac_hdr_init) \
*(___ksymtab+llc_remove_pack) \
*(___ksymtab+llc_sap_close) \
*(___ksymtab+llc_sap_find) \
*(___ksymtab+llc_sap_list) \
*(___ksymtab+llc_sap_open) \
*(___ksymtab+llc_set_station_handler) \
*(___ksymtab+llist_add_batch) \
*(___ksymtab+llist_del_first) \
*(___ksymtab+llist_reverse_order) \
*(___ksymtab+_local_bh_enable) \
*(___ksymtab+local_clock) \
*(___ksymtab+lockref_mark_dead) \
*(___ksymtab+lockref_put_or_lock) \
*(___ksymtab+lockref_put_return) \
*(___ksymtab+lock_rename) \
*(___ksymtab+locks_alloc_lock) \
*(___ksymtab+locks_copy_conflock) \
*(___ksymtab+locks_copy_lock) \
*(___ksymtab+locks_free_lock) \
*(___ksymtab+locks_init_lock) \
*(___ksymtab+locks_mandatory_area) \
*(___ksymtab+locks_release_private) \
*(___ksymtab+locks_remove_posix) \
*(___ksymtab+loop_register_transfer) \
*(___ksymtab+loops_per_jiffy) \
*(___ksymtab+loop_unregister_transfer) \
*(___ksymtab+lro_flush_all) \
*(___ksymtab+lro_receive_skb) \
*(___ksymtab+__lshrdi3) \
*(___ksymtab+__machine_arch_type) \
*(___ksymtab+mac_pton) \
*(___ksymtab+make_flow_keys_digest) \
*(___ksymtab+mangle_path) \
*(___ksymtab+map_destroy) \
*(___ksymtab+map_vm_area) \
*(___ksymtab+mark_buffer_async_write) \
*(___ksymtab+mark_mounts_for_expiry) \
*(___ksymtab+match_hex) \
*(___ksymtab+match_wildcard) \
*(___ksymtab+max_mapnr) \
*(___ksymtab+may_umount) \
*(___ksymtab+may_umount_tree) \
*(___ksymtab+__mdio_board_list) \
*(___ksymtab+__mdio_board_lock) \
*(___ksymtab+mdiobus_alloc_size) \
*(___ksymtab+mdiobus_free) \
*(___ksymtab+mdiobus_scan) \
*(___ksymtab+mdio_bus_type) \
*(___ksymtab+memalloc_socks) \
*(___ksymtab+memparse) \
*(___ksymtab+mempool_kmalloc) \
*(___ksymtab+memremap) \
*(___ksymtab+memunmap) \
*(___ksymtab+mii_check_link) \
*(___ksymtab+mii_check_media) \
*(___ksymtab+__mmdrop) \
*(___ksymtab+mmiocpy) \
*(___ksymtab+mmioset) \
*(___ksymtab+mm_kobj) \
*(___ksymtab+mmput) \
*(___ksymtab+mnt_clone_write) \
*(___ksymtab+mnt_drop_write) \
*(___ksymtab+mntget) \
*(___ksymtab+__mnt_is_readonly) \
*(___ksymtab+mntput) \
*(___ksymtab+mnt_set_expiry) \
*(___ksymtab+mnt_want_write) \
*(___ksymtab+__modsi3) \
*(___ksymtab+__module_address) \
*(___ksymtab+module_mutex) \
*(___ksymtab+module_refcount) \
*(___ksymtab+__module_text_address) \
*(___ksymtab+__mod_zone_page_state) \
*(___ksymtab+mod_zone_page_state) \
*(___ksymtab+mount_ns) \
*(___ksymtab+mount_pseudo) \
*(___ksymtab+mount_subtree) \
*(___ksymtab+mpage_writepage) \
*(___ksymtab+mtd_add_partition) \
*(___ksymtab+mtd_blktrans_cease_background) \
*(___ksymtab+mtd_block_isreserved) \
*(___ksymtab+mtd_concat_create) \
*(___ksymtab+mtd_concat_destroy) \
*(___ksymtab+mtd_del_partition) \
*(___ksymtab+mtd_device_parse_register) \
*(___ksymtab+mtd_do_chip_probe) \
*(___ksymtab+mtd_get_fact_prot_info) \
*(___ksymtab+mtd_get_unmapped_area) \
*(___ksymtab+mtd_get_user_prot_info) \
*(___ksymtab+mtd_is_locked) \
*(___ksymtab+mtd_is_partition) \
*(___ksymtab+mtd_lock) \
*(___ksymtab+mtd_lock_user_prot_reg) \
*(___ksymtab+__mtd_next_device) \
*(___ksymtab+mtd_table_mutex) \
*(___ksymtab+mtd_unlock) \
*(___ksymtab+__muldi3) \
*(___ksymtab+name_to_dev_t) \
*(___ksymtab+__nand_calculate_ecc) \
*(___ksymtab+nand_calculate_ecc) \
*(___ksymtab+nand_check_erased_ecc_chunk) \
*(___ksymtab+__nand_correct_data) \
*(___ksymtab+nand_correct_data) \
*(___ksymtab+nand_flash_ids) \
*(___ksymtab+nand_hwcontrol_lock_init) \
*(___ksymtab+nand_lock) \
*(___ksymtab+nand_manuf_ids) \
*(___ksymtab+nand_release) \
*(___ksymtab+nand_scan) \
*(___ksymtab+nand_scan_bbt) \
*(___ksymtab+nand_scan_ident) \
*(___ksymtab+nand_scan_tail) \
*(___ksymtab+nand_unlock) \
*(___ksymtab+nand_wait_ready) \
*(___ksymtab+napi_alloc_frag) \
*(___ksymtab+__napi_alloc_skb) \
*(___ksymtab+napi_by_id) \
*(___ksymtab+napi_get_frags) \
*(___ksymtab+napi_gro_flush) \
*(___ksymtab+napi_gro_frags) \
*(___ksymtab+napi_hash_add) \
*(___ksymtab+napi_hash_del) \
*(___ksymtab+ndo_dflt_bridge_getlink) \
*(___ksymtab+ndo_dflt_fdb_add) \
*(___ksymtab+ndo_dflt_fdb_del) \
*(___ksymtab+ndo_dflt_fdb_dump) \
*(___ksymtab+neigh_event_ns) \
*(___ksymtab+__neigh_event_send) \
*(___ksymtab+neigh_for_each) \
*(___ksymtab+__neigh_for_each_release) \
*(___ksymtab+neigh_seq_next) \
*(___ksymtab+neigh_seq_start) \
*(___ksymtab+neigh_seq_stop) \
*(___ksymtab+net_dec_ingress_queue) \
*(___ksymtab+netdev_alert) \
*(___ksymtab+netdev_alloc_frag) \
*(___ksymtab+netdev_emerg) \
*(___ksymtab+netdev_features_change) \
*(___ksymtab+netdev_lower_get_next) \
*(___ksymtab+netdev_notify_peers) \
*(___ksymtab+netdev_refcnt_read) \
*(___ksymtab+netdev_rss_key_fill) \
*(___ksymtab+netdev_set_default_ethtool_ops) \
*(___ksymtab+netdev_stats_to_stats64) \
*(___ksymtab+net_disable_timestamp) \
*(___ksymtab+net_enable_timestamp) \
*(___ksymtab+netif_get_num_default_rss_queues) \
*(___ksymtab+netif_receive_skb) \
*(___ksymtab+netif_receive_skb_list) \
*(___ksymtab+netif_set_xps_queue) \
*(___ksymtab+netif_skb_features) \
*(___ksymtab+netif_stacked_transfer_operstate) \
*(___ksymtab+netif_wake_subqueue) \
*(___ksymtab+net_inc_ingress_queue) \
*(___ksymtab+netlink_ack) \
*(___ksymtab+netlink_add_tap) \
*(___ksymtab+__netlink_alloc_skb) \
*(___ksymtab+__netlink_dump_start) \
*(___ksymtab+netlink_rcv_skb) \
*(___ksymtab+netlink_register_notifier) \
*(___ksymtab+netlink_remove_tap) \
*(___ksymtab+netlink_set_err) \
*(___ksymtab+netlink_unregister_notifier) \
*(___ksymtab+net_ns_type_operations) \
*(___ksymtab+nf_br_ops) \
*(___ksymtab+nf_conntrack_alloc) \
*(___ksymtab+nf_conntrack_broadcast_help) \
*(___ksymtab+nf_conntrack_dscpremark_ext_get_dscp_rule_validity) \
*(___ksymtab+nf_conntrack_flush) \
*(___ksymtab+nf_conntrack_free) \
*(___ksymtab+nf_conntrack_hash_check_insert) \
*(___ksymtab+nf_conntrack_hash_rnd) \
*(___ksymtab+__nf_conntrack_helper_find) \
*(___ksymtab+nf_conntrack_htable_size) \
*(___ksymtab+nf_conntrack_l3proto_generic) \
*(___ksymtab+nf_conntrack_l4proto_tcp4) \
*(___ksymtab+nf_conntrack_l4proto_udp4) \
*(___ksymtab+nf_conntrack_locks) \
*(___ksymtab+nf_conntrack_max) \
*(___ksymtab+nf_conntrack_set_hashsize) \
*(___ksymtab+nf_ct_alloc_hashtable) \
*(___ksymtab+nf_ct_delete) \
*(___ksymtab+nf_ct_destroy) \
*(___ksymtab+nf_ct_expect_hsize) \
*(___ksymtab+nf_ct_expect_register_notifier) \
*(___ksymtab+nf_ct_expect_unregister_notifier) \
*(___ksymtab+__nf_ct_ext_destroy) \
*(___ksymtab+nf_ct_ext_seq_print) \
*(___ksymtab+nf_ct_free_hashtable) \
*(___ksymtab+nf_ct_get_id) \
*(___ksymtab+nf_ct_helper_expectfn_find_by_name) \
*(___ksymtab+nf_ct_helper_expectfn_find_by_symbol) \
*(___ksymtab+nf_ct_helper_ext_add) \
*(___ksymtab+nf_ct_helper_hash) \
*(___ksymtab+nf_ct_helper_hsize) \
*(___ksymtab+nf_ct_l3proto_find_get) \
*(___ksymtab+nf_ct_l3protos) \
*(___ksymtab+nf_ct_l4proto_find_get) \
*(___ksymtab+nf_ct_l4proto_put) \
*(___ksymtab+nf_ct_remove_expectations) \
*(___ksymtab+nf_ct_seq_offset) \
*(___ksymtab+nf_ct_tcp_seqadj_set) \
*(___ksymtab+__nf_ct_try_assign_helper) \
*(___ksymtab+nf_ct_untracked_status_or) \
*(___ksymtab+nf_defrag_ipv4_enable) \
*(___ksymtab+nf_ip_checksum) \
*(___ksymtab+nf_log_bind_pf) \
*(___ksymtab+nf_logger_find_get) \
*(___ksymtab+nf_logger_put) \
*(___ksymtab+nf_logger_request_module) \
*(___ksymtab+nf_log_trace) \
*(___ksymtab+nf_log_unbind_pf) \
*(___ksymtab+nf_nat_decode_session_hook) \
*(___ksymtab+nf_nat_follow_master) \
*(___ksymtab+nf_nat_ftp_hook) \
*(___ksymtab+nf_nat_icmp_reply_translation) \
*(___ksymtab+nf_nat_ipv4_fn) \
*(___ksymtab+nf_nat_ipv4_in) \
*(___ksymtab+nf_nat_ipv4_local_fn) \
*(___ksymtab+nf_nat_ipv4_out) \
*(___ksymtab+nf_nat_irc_hook) \
*(___ksymtab+nf_nat_masquerade_ipv4) \
*(___ksymtab+nf_nat_masquerade_ipv4_register_notifier) \
*(___ksymtab+nf_nat_masquerade_ipv4_unregister_notifier) \
*(___ksymtab+nf_nat_redirect_ipv4) \
*(___ksymtab+nf_nat_redirect_ipv6) \
*(___ksymtab+nf_nat_rtsp_hook) \
*(___ksymtab+nf_nat_snmp_hook) \
*(___ksymtab+nf_nat_tftp_hook) \
*(___ksymtab+nfnetlink_alloc_skb) \
*(___ksymtab+nfnetlink_send) \
*(___ksymtab+nfnetlink_set_err) \
*(___ksymtab+nfnetlink_subsys_register) \
*(___ksymtab+nfnetlink_subsys_unregister) \
*(___ksymtab+nfnl_ct_hook) \
*(___ksymtab+nfnl_lock) \
*(___ksymtab+nfnl_unlock) \
*(___ksymtab+nf_register_hook) \
*(___ksymtab+nf_register_net_hook) \
*(___ksymtab+nf_register_queue_handler) \
*(___ksymtab+nf_reject_iphdr_put) \
*(___ksymtab+nf_reject_ip_tcphdr_get) \
*(___ksymtab+nf_reject_ip_tcphdr_put) \
*(___ksymtab+nf_send_reset) \
*(___ksymtab+nf_send_unreach) \
*(___ksymtab+nfulnl_log_packet) \
*(___ksymtab+nf_unregister_hook) \
*(___ksymtab+nf_unregister_net_hook) \
*(___ksymtab+nf_unregister_queue_handler) \
*(___ksymtab+nla_append) \
*(___ksymtab+nla_policy_len) \
*(___ksymtab+nla_validate) \
*(___ksymtab+nlmsg_notify) \
*(___ksymtab+nl_table) \
*(___ksymtab+nl_table_lock) \
*(___ksymtab+no_action) \
*(___ksymtab+nobh_truncate_page) \
*(___ksymtab+nobh_write_begin) \
*(___ksymtab+nobh_write_end) \
*(___ksymtab+nobh_writepage) \
*(___ksymtab+node_states) \
*(___ksymtab+noop_fsync) \
*(___ksymtab+no_pci_devices) \
*(___ksymtab+notify_change) \
*(___ksymtab+nr_irqs) \
*(___ksymtab+ns_to_timespec) \
*(___ksymtab+ns_to_timespec64) \
*(___ksymtab+ns_to_timeval) \
*(___ksymtab+n_tty_inherit_ops) \
*(___ksymtab+n_tty_ioctl_helper) \
*(___ksymtab+nvram_commit) \
*(___ksymtab+nvram_init) \
*(___ksymtab+nvram_set) \
*(___ksymtab+nvram_unset) \
*(___ksymtab+__of_phy_provider_register) \
*(___ksymtab+of_phy_provider_unregister) \
*(___ksymtab+of_phy_simple_xlate) \
*(___ksymtab+on_each_cpu) \
*(___ksymtab+on_each_cpu_cond) \
*(___ksymtab+on_each_cpu_mask) \
*(___ksymtab+onfi_async_timing_mode_to_sdr_timings) \
*(___ksymtab+oops_in_progress) \
*(___ksymtab+open_exec) \
*(___ksymtab+orderly_poweroff) \
*(___ksymtab+orderly_reboot) \
*(___ksymtab+osl_check_memleak) \
*(___ksymtab+osl_dma_consistent_align) \
*(___ksymtab+osl_get_bus_handle) \
*(___ksymtab+osl_is_flag_set) \
*(___ksymtab+osl_os_close_image) \
*(___ksymtab+osl_os_get_image_block) \
*(___ksymtab+osl_os_image_size) \
*(___ksymtab+osl_os_open_image) \
*(___ksymtab+osl_rand) \
*(___ksymtab+osl_set_bus_handle) \
*(___ksymtab+osl_static_mem_deinit) \
*(___ksymtab+otp_avsbitslen) \
*(___ksymtab+otp_init) \
*(___ksymtab+otp_isunified) \
*(___ksymtab+otp_msg_level) \
*(___ksymtab+otp_newcis) \
*(___ksymtab+otp_nvread) \
*(___ksymtab+otp_read_bit) \
*(___ksymtab+otp_read_region) \
*(___ksymtab+otp_size) \
*(___ksymtab+otp_status) \
*(___ksymtab+outer_cache) \
*(___ksymtab+page_cache_async_readahead) \
*(___ksymtab+page_cache_next_hole) \
*(___ksymtab+page_cache_prev_hole) \
*(___ksymtab+page_endio) \
*(___ksymtab+__page_file_index) \
*(___ksymtab+__page_file_mapping) \
*(___ksymtab+page_is_ram) \
*(___ksymtab+page_mkclean) \
*(___ksymtab+page_readlink) \
*(___ksymtab+__pagevec_lru_add) \
*(___ksymtab+page_waitqueue) \
*(___ksymtab+page_zero_new_buffers) \
*(___ksymtab+param_free_charp) \
*(___ksymtab+param_get_bool) \
*(___ksymtab+param_get_byte) \
*(___ksymtab+param_get_charp) \
*(___ksymtab+param_get_int) \
*(___ksymtab+param_get_invbool) \
*(___ksymtab+param_get_long) \
*(___ksymtab+param_get_short) \
*(___ksymtab+param_get_ullong) \
*(___ksymtab+param_get_ulong) \
*(___ksymtab+param_get_ushort) \
*(___ksymtab+param_ops_bint) \
*(___ksymtab+param_ops_byte) \
*(___ksymtab+param_ops_invbool) \
*(___ksymtab+param_ops_long) \
*(___ksymtab+param_ops_short) \
*(___ksymtab+param_set_bint) \
*(___ksymtab+param_set_bool) \
*(___ksymtab+param_set_bool_enable_only) \
*(___ksymtab+param_set_byte) \
*(___ksymtab+param_set_charp) \
*(___ksymtab+param_set_int) \
*(___ksymtab+param_set_invbool) \
*(___ksymtab+param_set_long) \
*(___ksymtab+param_set_short) \
*(___ksymtab+param_set_ullong) \
*(___ksymtab+param_set_ulong) \
*(___ksymtab+param_set_ushort) \
*(___ksymtab+partitions_lock_init) \
*(___ksymtab+part_round_stats) \
*(___ksymtab+patch_pair) \
*(___ksymtab+path_get) \
*(___ksymtab+path_is_under) \
*(___ksymtab+pci_add_dynid) \
*(___ksymtab+pci_add_new_bus) \
*(___ksymtab+pci_add_resource) \
*(___ksymtab+pci_add_resource_offset) \
*(___ksymtab+pci_alloc_dev) \
*(___ksymtab+pci_assign_resource) \
*(___ksymtab+pci_assign_unassigned_bridge_resources) \
*(___ksymtab+pci_assign_unassigned_bus_resources) \
*(___ksymtab+pci_back_from_sleep) \
*(___ksymtab+pcibios_bus_to_resource) \
*(___ksymtab+pcibios_min_io) \
*(___ksymtab+pcibios_min_mem) \
*(___ksymtab+pcibios_resource_to_bus) \
*(___ksymtab+pci_bus_add_device) \
*(___ksymtab+pci_bus_add_devices) \
*(___ksymtab+pci_bus_alloc_resource) \
*(___ksymtab+pci_bus_assign_resources) \
*(___ksymtab+pci_bus_find_capability) \
*(___ksymtab+pci_bus_get) \
*(___ksymtab+pci_bus_max_busnr) \
*(___ksymtab+pci_bus_put) \
*(___ksymtab+pci_bus_read_dev_vendor_id) \
*(___ksymtab+pci_bus_resource_n) \
*(___ksymtab+pci_bus_sem) \
*(___ksymtab+pci_bus_set_ops) \
*(___ksymtab+pci_bus_size_bridges) \
*(___ksymtab+pci_bus_type) \
*(___ksymtab+pci_bus_write_config_word) \
*(___ksymtab+pci_cfg_access_lock) \
*(___ksymtab+pci_cfg_access_trylock) \
*(___ksymtab+pci_cfg_access_unlock) \
*(___ksymtab+pci_check_and_mask_intx) \
*(___ksymtab+pci_check_and_unmask_intx) \
*(___ksymtab+pci_choose_state) \
*(___ksymtab+pci_claim_resource) \
*(___ksymtab+pci_clear_master) \
*(___ksymtab+pci_clear_mwi) \
*(___ksymtab+pci_common_swizzle) \
*(___ksymtab+pcicore_attach) \
*(___ksymtab+pcicore_deinit) \
*(___ksymtab+pcicore_find_pci_capability) \
*(___ksymtab+pcicore_init) \
*(___ksymtab+pcicore_pciereg) \
*(___ksymtab+pcicore_pcieserdesreg) \
*(___ksymtab+pcicore_pmecap_fast) \
*(___ksymtab+pcicore_pmeclr) \
*(___ksymtab+pcicore_pmeen) \
*(___ksymtab+pcicore_pmestat) \
*(___ksymtab+pcicore_pmestatclr) \
*(___ksymtab+pcicore_sleep) \
*(___ksymtab+pci_create_root_bus) \
*(___ksymtab+pci_create_slot) \
*(___ksymtab+pci_destroy_slot) \
*(___ksymtab+pci_dev_driver) \
*(___ksymtab+pci_dev_get) \
*(___ksymtab+pci_device_is_present) \
*(___ksymtab+pci_dev_present) \
*(___ksymtab+pci_disable_pcie_error_reporting) \
*(___ksymtab+pci_disable_rom) \
*(___ksymtab+pcie_bus_configure_settings) \
*(___ksymtab+pcie_capability_clear_and_set_dword) \
*(___ksymtab+pcie_capability_clear_and_set_word) \
*(___ksymtab+pcie_capability_read_dword) \
*(___ksymtab+pcie_capability_read_word) \
*(___ksymtab+pcie_capability_write_dword) \
*(___ksymtab+pcie_capability_write_word) \
*(___ksymtab+pcie_clkreq) \
*(___ksymtab+pcie_configspace_cache) \
*(___ksymtab+pcie_configspace_get) \
*(___ksymtab+pcie_configspace_restore) \
*(___ksymtab+pciedev_crwlpciegen2) \
*(___ksymtab+pciedev_prep_D3) \
*(___ksymtab+pciedev_reg_pm_clk_period) \
*(___ksymtab+pcie_disable_TL_clk_gating) \
*(___ksymtab+pcie_get_bar0) \
*(___ksymtab+pcie_get_L1substate) \
*(___ksymtab+pcie_get_link_speed) \
*(___ksymtab+pcie_get_maxpayload_size) \
*(___ksymtab+pcie_get_minimum_link) \
*(___ksymtab+pcie_get_mps) \
*(___ksymtab+pcie_get_readrq) \
*(___ksymtab+pcie_get_request_size) \
*(___ksymtab+pcie_get_ssid) \
*(___ksymtab+pcie_hw_L1SS_war) \
*(___ksymtab+pcie_hw_LTR_war) \
*(___ksymtab+pcie_lcreg) \
*(___ksymtab+pcie_ltrenable) \
*(___ksymtab+pcieltrhysteresiscnt_reg) \
*(___ksymtab+pcie_ltr_reg) \
*(___ksymtab+pcieltrspacing_reg) \
*(___ksymtab+pcie_ltr_war) \
*(___ksymtab+pci_enable_bridges) \
*(___ksymtab+pci_enable_pcie_error_reporting) \
*(___ksymtab+pci_enable_rom) \
*(___ksymtab+pcie_obffenable) \
*(___ksymtab+pcie_port_bus_type) \
*(___ksymtab+pcie_port_service_register) \
*(___ksymtab+pcie_port_service_unregister) \
*(___ksymtab+pcie_power_save_enable) \
*(___ksymtab+pcie_readreg) \
*(___ksymtab+pcie_set_ctrlreg) \
*(___ksymtab+pcie_set_error_injection) \
*(___ksymtab+pcie_set_L1_entry_time) \
*(___ksymtab+pcie_set_L1substate) \
*(___ksymtab+pcie_set_maxpayload_size) \
*(___ksymtab+pcie_set_mps) \
*(___ksymtab+pcie_set_readrq) \
*(___ksymtab+pcie_set_request_size) \
*(___ksymtab+pcie_survive_perst) \
*(___ksymtab+pcie_watchdog_reset) \
*(___ksymtab+pcie_writereg) \
*(___ksymtab+pci_find_bus) \
*(___ksymtab+pci_find_ext_capability) \
*(___ksymtab+pci_find_ht_capability) \
*(___ksymtab+pci_find_next_bus) \
*(___ksymtab+pci_find_next_capability) \
*(___ksymtab+pci_find_next_ext_capability) \
*(___ksymtab+pci_find_next_ht_capability) \
*(___ksymtab+pci_find_parent_resource) \
*(___ksymtab+pci_find_pcie_root_port) \
*(___ksymtab+pci_free_resource_list) \
*(___ksymtab+pci_generic_config_read) \
*(___ksymtab+pci_generic_config_read32) \
*(___ksymtab+pci_generic_config_write) \
*(___ksymtab+pci_generic_config_write32) \
*(___ksymtab+pci_get_class) \
*(___ksymtab+pci_get_domain_bus_and_slot) \
*(___ksymtab+pci_get_subsys) \
*(___ksymtab+pci_ignore_hotplug) \
*(___ksymtab+pci_intx) \
*(___ksymtab+pci_iomap) \
*(___ksymtab+pci_iomap_range) \
*(___ksymtab+pci_iomap_wc) \
*(___ksymtab+pci_iomap_wc_range) \
*(___ksymtab+pci_load_and_free_saved_state) \
*(___ksymtab+pci_load_saved_state) \
*(___ksymtab+pci_lock_rescan_remove) \
*(___ksymtab+pci_map_rom) \
*(___ksymtab+pcim_enable_device) \
*(___ksymtab+pcim_iomap) \
*(___ksymtab+pcim_iomap_regions) \
*(___ksymtab+pcim_iomap_regions_request_all) \
*(___ksymtab+pcim_iomap_table) \
*(___ksymtab+pcim_pin_device) \
*(___ksymtab+pci_pci_problems) \
*(___ksymtab+pci_platform_rom) \
*(___ksymtab+pci_pme_active) \
*(___ksymtab+pci_power_names) \
*(___ksymtab+pci_prepare_to_sleep) \
*(___ksymtab+pci_probe_reset_bus) \
*(___ksymtab+pci_probe_reset_slot) \
*(___ksymtab+pci_read_vpd) \
*(___ksymtab+pci_reenable_device) \
*(___ksymtab+pci_release_region) \
*(___ksymtab+pci_release_regions) \
*(___ksymtab+pci_release_selected_regions) \
*(___ksymtab+pci_remove_bus) \
*(___ksymtab+pci_remove_root_bus) \
*(___ksymtab+pci_request_region) \
*(___ksymtab+pci_request_region_exclusive) \
*(___ksymtab+pci_request_regions) \
*(___ksymtab+pci_request_regions_exclusive) \
*(___ksymtab+pci_request_selected_regions) \
*(___ksymtab+pci_request_selected_regions_exclusive) \
*(___ksymtab+pci_rescan_bus) \
*(___ksymtab+pci_reset_bridge_secondary_bus) \
*(___ksymtab+pci_reset_bus) \
*(___ksymtab+__pci_reset_function) \
*(___ksymtab+pci_reset_function) \
*(___ksymtab+__pci_reset_function_locked) \
*(___ksymtab+pci_reset_slot) \
*(___ksymtab+pci_root_buses) \
*(___ksymtab+pci_scan_bridge) \
*(___ksymtab+pci_scan_bus) \
*(___ksymtab+pci_scan_child_bus) \
*(___ksymtab+pci_scan_root_bus) \
*(___ksymtab+pci_scan_single_device) \
*(___ksymtab+pci_scan_slot) \
*(___ksymtab+pci_select_bars) \
*(___ksymtab+pciserial_init_ports) \
*(___ksymtab+pciserial_remove_ports) \
*(___ksymtab+pciserial_resume_ports) \
*(___ksymtab+pciserial_suspend_ports) \
*(___ksymtab+pci_set_cacheline_size) \
*(___ksymtab+pci_set_dma_max_seg_size) \
*(___ksymtab+pci_set_dma_seg_boundary) \
*(___ksymtab+pci_set_pcie_reset_state) \
*(___ksymtab+pci_slots_kset) \
*(___ksymtab+pci_stop_and_remove_bus_device) \
*(___ksymtab+pci_stop_and_remove_bus_device_locked) \
*(___ksymtab+pci_stop_root_bus) \
*(___ksymtab+pci_store_saved_state) \
*(___ksymtab+pci_try_reset_bus) \
*(___ksymtab+pci_try_reset_function) \
*(___ksymtab+pci_try_reset_slot) \
*(___ksymtab+pci_try_set_mwi) \
*(___ksymtab+pci_unlock_rescan_remove) \
*(___ksymtab+pci_unmap_rom) \
*(___ksymtab+pci_user_write_config_byte) \
*(___ksymtab+pci_user_write_config_dword) \
*(___ksymtab+pci_user_write_config_word) \
*(___ksymtab+pci_vpd_find_info_keyword) \
*(___ksymtab+pci_vpd_find_tag) \
*(___ksymtab+pci_wait_for_pending_transaction) \
*(___ksymtab+pci_wake_from_d3) \
*(___ksymtab+pci_walk_bus) \
*(___ksymtab+pci_write_vpd) \
*(___ksymtab+pcix_get_max_mmrbc) \
*(___ksymtab+pcix_get_mmrbc) \
*(___ksymtab+pcix_set_mmrbc) \
*(___ksymtab+pcpu_base_addr) \
*(___ksymtab+pdesc25) \
*(___ksymtab+pdesc97) \
*(___ksymtab+__percpu_counter_compare) \
*(___ksymtab+percpu_counter_set) \
*(___ksymtab+percpu_ida_alloc) \
*(___ksymtab+percpu_ida_destroy) \
*(___ksymtab+percpu_ida_for_each_free) \
*(___ksymtab+percpu_ida_free) \
*(___ksymtab+percpu_ida_free_tags) \
*(___ksymtab+__percpu_ida_init) \
*(___ksymtab+__percpu_init_rwsem) \
*(___ksymtab+percpu_ref_exit) \
*(___ksymtab+percpu_ref_init) \
*(___ksymtab+percpu_ref_kill_and_confirm) \
*(___ksymtab+percpu_ref_reinit) \
*(___ksymtab+pfifo_qdisc_ops) \
*(___ksymtab+pfn_valid) \
*(___ksymtab+pgprot_kernel) \
*(___ksymtab+pgprot_user) \
*(___ksymtab+phy_attach) \
*(___ksymtab+phy_attach_direct) \
*(___ksymtab+phy_connect) \
*(___ksymtab+phy_connect_direct) \
*(___ksymtab+phy_create) \
*(___ksymtab+phy_destroy) \
*(___ksymtab+phy_detach) \
*(___ksymtab+phy_device_free) \
*(___ksymtab+phy_device_remove) \
*(___ksymtab+phy_disconnect) \
*(___ksymtab+phy_ethtool_get_eee) \
*(___ksymtab+phy_ethtool_get_wol) \
*(___ksymtab+phy_ethtool_gset) \
*(___ksymtab+phy_ethtool_ioctl) \
*(___ksymtab+phy_ethtool_set_eee) \
*(___ksymtab+phy_ethtool_set_wol) \
*(___ksymtab+phy_ethtool_sset) \
*(___ksymtab+phy_find_first) \
*(___ksymtab+phy_mii_ioctl) \
*(___ksymtab+phy_optional_get) \
*(___ksymtab+phy_pm_runtime_allow) \
*(___ksymtab+phy_pm_runtime_forbid) \
*(___ksymtab+phy_pm_runtime_get) \
*(___ksymtab+phy_pm_runtime_get_sync) \
*(___ksymtab+phy_pm_runtime_put) \
*(___ksymtab+phy_pm_runtime_put_sync) \
*(___ksymtab+phy_print_status) \
*(___ksymtab+phy_read_mmd_indirect) \
*(___ksymtab+phy_resume) \
*(___ksymtab+phy_set_max_speed) \
*(___ksymtab+phys_mem_access_prot) \
*(___ksymtab+phy_start) \
*(___ksymtab+phy_start_aneg) \
*(___ksymtab+phy_stop) \
*(___ksymtab+phy_suspend) \
*(___ksymtab+phy_write_mmd_indirect) \
*(___ksymtab+pid_task) \
*(___ksymtab+pid_vnr) \
*(___ksymtab+ping_prot) \
*(___ksymtab+pkpool_haddr_avail_register_cb) \
*(___ksymtab+pktdataoffset) \
*(___ksymtab+pktfrombuf) \
*(___ksymtab+pktoffset) \
*(___ksymtab+pktpool_add) \
*(___ksymtab+pktpool_attach) \
*(___ksymtab+pktpool_avail_notify_exclusive) \
*(___ksymtab+pktpool_avail_notify_normal) \
*(___ksymtab+pktpool_avail_register) \
*(___ksymtab+pktpool_deinit) \
*(___ksymtab+pktpool_dettach) \
*(___ksymtab+pktpool_emptycb_disable) \
*(___ksymtab+pktpool_emptycb_disabled) \
*(___ksymtab+pktpool_empty_register) \
*(___ksymtab+pktpool_fill) \
*(___ksymtab+pktpool_free) \
*(___ksymtab+pktpool_get) \
*(___ksymtab+pktpool_hostaddr_fill_register) \
*(___ksymtab+pktpool_init) \
*(___ksymtab+pktpool_invoke_dmarxfill) \
*(___ksymtab+pktpool_rxcplid_fill_register) \
*(___ksymtab+pktpool_setmaxlen) \
*(___ksymtab+pktpools_max) \
*(___ksymtab+pktpools_registry) \
*(___ksymtab+pktq_append) \
*(___ksymtab+pktq_deinit) \
*(___ksymtab+pktq_mpeek) \
*(___ksymtab+pktq_pdel) \
*(___ksymtab+pktq_peek) \
*(___ksymtab+pktq_prepend) \
*(___ksymtab+platform_add_devices) \
*(___ksymtab+__platform_create_bundle) \
*(___ksymtab+platform_device_alloc) \
*(___ksymtab+platform_device_put) \
*(___ksymtab+__platform_register_drivers) \
*(___ksymtab+platform_unregister_drivers) \
*(___ksymtab+pm_power_off) \
*(___ksymtab+pm_qos_add_notifier) \
*(___ksymtab+pm_qos_add_request) \
*(___ksymtab+pm_qos_remove_notifier) \
*(___ksymtab+pm_qos_remove_request) \
*(___ksymtab+pm_qos_request) \
*(___ksymtab+pm_qos_request_active) \
*(___ksymtab+poll_freewait) \
*(___ksymtab+poll_initwait) \
*(___ksymtab+posix_acl_equiv_mode) \
*(___ksymtab+posix_acl_from_mode) \
*(___ksymtab+posix_acl_from_xattr) \
*(___ksymtab+posix_acl_init) \
*(___ksymtab+posix_acl_to_xattr) \
*(___ksymtab+posix_acl_valid) \
*(___ksymtab+posix_clock_register) \
*(___ksymtab+posix_clock_unregister) \
*(___ksymtab+posix_timer_event) \
*(___ksymtab+posix_timers_register_clock) \
*(___ksymtab+ppp_channel_index) \
*(___ksymtab+ppp_register_compressor) \
*(___ksymtab+ppp_unit_number) \
*(___ksymtab+ppp_unregister_channel) \
*(___ksymtab+ppp_unregister_compressor) \
*(___ksymtab+prandom_bytes) \
*(___ksymtab+prandom_bytes_state) \
*(___ksymtab+prepare_binprm) \
*(___ksymtab+prepare_creds) \
*(___ksymtab+printbig) \
*(___ksymtab+__print_symbol) \
*(___ksymtab+private_AES_set_decrypt_key) \
*(___ksymtab+private_AES_set_encrypt_key) \
*(___ksymtab+probe_irq_mask) \
*(___ksymtab+probe_irq_off) \
*(___ksymtab+probe_irq_on) \
*(___ksymtab+probe_kernel_write) \
*(___ksymtab+probe_user_write) \
*(___ksymtab+proc_douintvec) \
*(___ksymtab+process_nvram_vars) \
*(___ksymtab+processor) \
*(___ksymtab+processor_id) \
*(___ksymtab+process_srcu) \
*(___ksymtab+proc_get_parent_data) \
*(___ksymtab+proc_set_size) \
*(___ksymtab+proc_set_user) \
*(___ksymtab+proc_symlink) \
*(___ksymtab+profile_pc) \
*(___ksymtab+psched_ratecfg_precompute) \
*(___ksymtab+put_io_context) \
*(___ksymtab+__put_mtd_device) \
*(___ksymtab+put_mtd_device) \
*(___ksymtab+put_unused_fd) \
*(___ksymtab+__put_user_8) \
*(___ksymtab+pvclock_gtod_register_notifier) \
*(___ksymtab+pvclock_gtod_unregister_notifier) \
*(___ksymtab+__pv_offset) \
*(___ksymtab+__pv_phys_pfn_offset) \
*(___ksymtab+qdisc_class_hash_destroy) \
*(___ksymtab+qdisc_class_hash_grow) \
*(___ksymtab+qdisc_class_hash_init) \
*(___ksymtab+qdisc_class_hash_insert) \
*(___ksymtab+qdisc_class_hash_remove) \
*(___ksymtab+qdisc_create_dflt) \
*(___ksymtab+qdisc_destroy) \
*(___ksymtab+qdisc_get_rtab) \
*(___ksymtab+qdisc_list_add) \
*(___ksymtab+qdisc_list_del) \
*(___ksymtab+qdisc_put_rtab) \
*(___ksymtab+qdisc_put_stab) \
*(___ksymtab+qdisc_reset) \
*(___ksymtab+qdisc_warn_nonwc) \
*(___ksymtab+qdisc_watchdog_cancel) \
*(___ksymtab+qdisc_watchdog_init) \
*(___ksymtab+queue_kthread_work) \
*(___ksymtab+radix_tree_next_chunk) \
*(___ksymtab+radix_tree_preload) \
*(___ksymtab+radix_tree_range_tag_if_tagged) \
*(___ksymtab+radix_tree_tagged) \
*(___ksymtab+random_input_wait) \
*(___ksymtab+random_input_words) \
*(___ksymtab+ras_userspace_consumers) \
*(___ksymtab+rational_best_approximation) \
*(___ksymtab+__raw_notifier_call_chain) \
*(___ksymtab+raw_notifier_call_chain) \
*(___ksymtab+raw_notifier_chain_register) \
*(___ksymtab+raw_notifier_chain_unregister) \
*(___ksymtab+__raw_readsb) \
*(___ksymtab+__raw_readsl) \
*(___ksymtab+__raw_readsw) \
*(___ksymtab+__raw_writesb) \
*(___ksymtab+__raw_writesl) \
*(___ksymtab+__raw_writesw) \
*(___ksymtab+__rb_insert_augmented) \
*(___ksymtab+rcu_all_qs) \
*(___ksymtab+rcu_batches_started) \
*(___ksymtab+rcu_batches_started_bh) \
*(___ksymtab+rcu_batches_started_sched) \
*(___ksymtab+rcu_bh_force_quiescent_state) \
*(___ksymtab+rcu_expedite_gp) \
*(___ksymtab+rcu_force_quiescent_state) \
*(___ksymtab+rcu_gp_is_expedited) \
*(___ksymtab+rcu_idle_enter) \
*(___ksymtab+rcu_idle_exit) \
*(___ksymtab+rcu_is_watching) \
*(___ksymtab+rcu_note_context_switch) \
*(___ksymtab+rcu_qs_ctr) \
*(___ksymtab+rcu_sched_force_quiescent_state) \
*(___ksymtab+rcutorture_get_gp_data) \
*(___ksymtab+rcutorture_record_progress) \
*(___ksymtab+rcutorture_record_test_transition) \
*(___ksymtab+rcu_unexpedite_gp) \
*(___ksymtab+read_code) \
*(___ksymtab+readlink_copy) \
*(___ksymtab+__readwrite_bug) \
*(___ksymtab+recalc_sigpending) \
*(___ksymtab+ref_module) \
*(___ksymtab+refresh_mtd_partitions) \
*(___ksymtab+register_8022_client) \
*(___ksymtab+__register_binfmt) \
*(___ksymtab+register_console) \
*(___ksymtab+__register_cpu_notifier) \
*(___ksymtab+register_cpu_notifier) \
*(___ksymtab+register_die_notifier) \
*(___ksymtab+register_gifconf) \
*(___ksymtab+register_inet6addr_notifier) \
*(___ksymtab+register_module_notifier) \
*(___ksymtab+register_mtd_blktrans) \
*(___ksymtab+register_mtd_chip_driver) \
*(___ksymtab+register_mtd_parser) \
*(___ksymtab+register_mtd_user) \
*(___ksymtab+register_netevent_notifier) \
*(___ksymtab+register_oom_notifier) \
*(___ksymtab+register_restart_handler) \
*(___ksymtab+register_snap_client) \
*(___ksymtab+register_syscore_ops) \
*(___ksymtab+register_sysctl) \
*(___ksymtab+register_sysctl_paths) \
*(___ksymtab+register_sysrq_key) \
*(___ksymtab+register_tcf_proto_ops) \
*(___ksymtab+relay_buf_full) \
*(___ksymtab+relay_close) \
*(___ksymtab+relay_file_operations) \
*(___ksymtab+relay_flush) \
*(___ksymtab+relay_open) \
*(___ksymtab+relay_reset) \
*(___ksymtab+relay_subbufs_consumed) \
*(___ksymtab+relay_switch_subbuf) \
*(___ksymtab+release_dentry_name_snapshot) \
*(___ksymtab+release_firmware) \
*(___ksymtab+release_resource) \
*(___ksymtab+remap_pfn_range) \
*(___ksymtab+remove_arg_zero) \
*(___ksymtab+__remove_inode_hash) \
*(___ksymtab+remove_irq) \
*(___ksymtab+remove_proc_subtree) \
*(___ksymtab+replace_mount_options) \
*(___ksymtab+request_any_context_irq) \
*(___ksymtab+request_firmware) \
*(___ksymtab+request_firmware_direct) \
*(___ksymtab+request_firmware_nowait) \
*(___ksymtab+request_percpu_irq) \
*(___ksymtab+request_resource) \
*(___ksymtab+reset_devices) \
*(___ksymtab+resource_list_create_entry) \
*(___ksymtab+resource_list_free) \
*(___ksymtab+return_address) \
*(___ksymtab+rfkill_blocked) \
*(___ksymtab+rfkill_pause_polling) \
*(___ksymtab+rfkill_resume_polling) \
*(___ksymtab+rfkill_set_states) \
*(___ksymtab+rfkill_set_sw_state) \
*(___ksymtab+rhashtable_destroy) \
*(___ksymtab+rhashtable_free_and_destroy) \
*(___ksymtab+rhashtable_insert_rehash) \
*(___ksymtab+rhashtable_insert_slow) \
*(___ksymtab+rhashtable_walk_exit) \
*(___ksymtab+rhashtable_walk_init) \
*(___ksymtab+rhashtable_walk_next) \
*(___ksymtab+rhashtable_walk_start) \
*(___ksymtab+rhashtable_walk_stop) \
*(___ksymtab+robo_eee_advertise_init) \
*(___ksymtab+robo_power_save_mode) \
*(___ksymtab+rps_may_expire_flow) \
*(___ksymtab+rtc_month_days) \
*(___ksymtab+rtc_time64_to_tm) \
*(___ksymtab+rtc_tm_to_ktime) \
*(___ksymtab+rtc_tm_to_time64) \
*(___ksymtab+rtc_valid_tm) \
*(___ksymtab+rtc_year_days) \
*(___ksymtab+rt_mutex_destroy) \
*(___ksymtab+__rt_mutex_init) \
*(___ksymtab+rt_mutex_timed_lock) \
*(___ksymtab+rtnl_configure_link) \
*(___ksymtab+rtnl_create_link) \
*(___ksymtab+rtnl_delete_link) \
*(___ksymtab+rtnl_is_locked) \
*(___ksymtab+rtnl_link_get_net) \
*(___ksymtab+rwsem_wake) \
*(___ksymtab+saved_command_line) \
*(___ksymtab+sb_addrspace) \
*(___ksymtab+sb_addrspacesize) \
*(___ksymtab+sb_base) \
*(___ksymtab+sb_commit) \
*(___ksymtab+sb_core_cflags) \
*(___ksymtab+sb_core_cflags_wo) \
*(___ksymtab+sb_core_disable) \
*(___ksymtab+sb_coreid) \
*(___ksymtab+sb_corereg) \
*(___ksymtab+sb_corereg_addr) \
*(___ksymtab+sb_core_reset) \
*(___ksymtab+sb_corerev) \
*(___ksymtab+sb_core_sflags) \
*(___ksymtab+sb_corevendor) \
*(___ksymtab+sb_flag) \
*(___ksymtab+sb_intflag) \
*(___ksymtab+sb_numaddrspaces) \
*(___ksymtab+sb_scan) \
*(___ksymtab+sb_setcoreidx) \
*(___ksymtab+sb_set_initiator_to) \
*(___ksymtab+sb_setint) \
*(___ksymtab+sb_size) \
*(___ksymtab+scatterwalk_bytes_sglen) \
*(___ksymtab+scatterwalk_copychunks) \
*(___ksymtab+scatterwalk_done) \
*(___ksymtab+scatterwalk_map) \
*(___ksymtab+scatterwalk_start) \
*(___ksymtab+sched_clock) \
*(___ksymtab+sched_setattr) \
*(___ksymtab+__scm_destroy) \
*(___ksymtab+scm_detach_fds) \
*(___ksymtab+__scm_send) \
*(___ksymtab+scsi_cmd_ioctl) \
*(___ksymtab+search_binary_handler) \
*(___ksymtab+secure_ipv4_port_ephemeral) \
*(___ksymtab+seq_dentry) \
*(___ksymtab+seq_hex_dump) \
*(___ksymtab+seq_hlist_next) \
*(___ksymtab+seq_hlist_next_percpu) \
*(___ksymtab+seq_hlist_next_rcu) \
*(___ksymtab+seq_hlist_start) \
*(___ksymtab+seq_hlist_start_head) \
*(___ksymtab+seq_hlist_start_head_rcu) \
*(___ksymtab+seq_hlist_start_percpu) \
*(___ksymtab+seq_hlist_start_rcu) \
*(___ksymtab+seq_list_next) \
*(___ksymtab+seq_list_start) \
*(___ksymtab+seq_list_start_head) \
*(___ksymtab+seq_pad) \
*(___ksymtab+seq_path) \
*(___ksymtab+seq_print_acct) \
*(___ksymtab+seq_put_decimal_ll) \
*(___ksymtab+seq_put_decimal_ull) \
*(___ksymtab+seq_vprintf) \
*(___ksymtab+seq_write) \
*(___ksymtab+serial8250_clear_and_reinit_fifos) \
*(___ksymtab+serial8250_do_pm) \
*(___ksymtab+serial8250_do_set_mctrl) \
*(___ksymtab+serial8250_do_set_termios) \
*(___ksymtab+serial8250_get_port) \
*(___ksymtab+serial8250_handle_irq) \
*(___ksymtab+serial8250_init_port) \
*(___ksymtab+serial8250_modem_status) \
*(___ksymtab+serial8250_register_8250_port) \
*(___ksymtab+serial8250_resume_port) \
*(___ksymtab+serial8250_rpm_get) \
*(___ksymtab+serial8250_rpm_put) \
*(___ksymtab+serial8250_rx_chars) \
*(___ksymtab+serial8250_set_defaults) \
*(___ksymtab+serial8250_set_isa_configurator) \
*(___ksymtab+serial8250_suspend_port) \
*(___ksymtab+serial8250_tx_chars) \
*(___ksymtab+serial8250_unregister_port) \
*(___ksymtab+set_binfmt) \
*(___ksymtab+set_bitrange) \
*(___ksymtab+set_cpus_allowed_ptr) \
*(___ksymtab+set_create_files_as) \
*(___ksymtab+set_device_ro) \
*(___ksymtab+set_hc595) \
*(___ksymtab+set_hc595_core) \
*(___ksymtab+set_hc595_reset) \
*(___ksymtab+set_normalized_timespec) \
*(___ksymtab+set_normalized_timespec64) \
*(___ksymtab+set_posix_acl) \
*(___ksymtab+set_primary_fwnode) \
*(___ksymtab+set_security_override) \
*(___ksymtab+set_security_override_from_ctx) \
*(___ksymtab+sg_alloc_table) \
*(___ksymtab+sg_alloc_table_from_pages) \
*(___ksymtab+sg_copy_buffer) \
*(___ksymtab+sg_copy_from_buffer) \
*(___ksymtab+sg_copy_to_buffer) \
*(___ksymtab+sg_free_table) \
*(___ksymtab+sg_last) \
*(___ksymtab+__sg_page_iter_next) \
*(___ksymtab+__sg_page_iter_start) \
*(___ksymtab+sg_pcopy_from_buffer) \
*(___ksymtab+sg_pcopy_to_buffer) \
*(___ksymtab+shash_ahash_digest) \
*(___ksymtab+shash_attr_alg) \
*(___ksymtab+shash_no_setkey) \
*(___ksymtab+shmem_read_mapping_page_gfp) \
*(___ksymtab+shmem_set_file) \
*(___ksymtab+shmem_truncate_range) \
*(___ksymtab+show_class_attr_string) \
*(___ksymtab+show_rcu_gp_kthreads) \
*(___ksymtab+shrink_dcache_sb) \
*(___ksymtab+si_addrspace) \
*(___ksymtab+si_addrspacesize) \
*(___ksymtab+si_backplane64) \
*(___ksymtab+si_bpind_access) \
*(___ksymtab+si_cc_get_reg16) \
*(___ksymtab+si_cc_get_reg32) \
*(___ksymtab+si_cc_set_reg32) \
*(___ksymtab+si_chipcontrl_read) \
*(___ksymtab+si_chipcontrl_restore) \
*(___ksymtab+si_chip_hostif) \
*(___ksymtab+si_chipid) \
*(___ksymtab+si_chippkg_set) \
*(___ksymtab+si_cis_source) \
*(___ksymtab+si_clear_backplane_to) \
*(___ksymtab+si_coded_devpathvar) \
*(___ksymtab+si_config_4364_d11_oob) \
*(___ksymtab+si_config_53573_d11_oob) \
*(___ksymtab+si_coreaddrspaceX) \
*(___ksymtab+si_corebist) \
*(___ksymtab+si_corelist) \
*(___ksymtab+si_corepciid) \
*(___ksymtab+si_corevendor) \
*(___ksymtab+si_core_wrapperreg) \
*(___ksymtab+si_d11_devid) \
*(___ksymtab+si_d11_switch_addrbase) \
*(___ksymtab+si_deepsleep_count) \
*(___ksymtab+si_devpath) \
*(___ksymtab+si_devpath_pcie) \
*(___ksymtab+si_enable_device_wake) \
*(___ksymtab+si_enable_perst_wake) \
*(___ksymtab+si_findcoreidx) \
*(___ksymtab+si_flag) \
*(___ksymtab+si_flag_alt) \
*(___ksymtab+si_gci_chipctrl_overrides) \
*(___ksymtab+si_gci_chipstatus) \
*(___ksymtab+si_gci_clear_functionsel) \
*(___ksymtab+si_gci_config_wake_pin) \
*(___ksymtab+si_gci_direct) \
*(___ksymtab+si_gci_free_wake_pin) \
*(___ksymtab+si_gci_get_functionsel) \
*(___ksymtab+si_gci_gpioint_handler_register) \
*(___ksymtab+si_gci_gpioint_handler_unregister) \
*(___ksymtab+si_gci_gpio_status) \
*(___ksymtab+si_gci_handler_process) \
*(___ksymtab+si_gci_host_wake_gpio_enable) \
*(___ksymtab+si_gci_host_wake_gpio_init) \
*(___ksymtab+si_gci_indirect) \
*(___ksymtab+si_gci_input) \
*(___ksymtab+si_gci_int_enable) \
*(___ksymtab+si_gci_output) \
*(___ksymtab+si_gci_reset) \
*(___ksymtab+si_gci_set_femctrl) \
*(___ksymtab+si_gci_set_functionsel) \
*(___ksymtab+si_gci_uart_init) \
*(___ksymtab+si_getdevpathintvar) \
*(___ksymtab+si_getdevpathvar) \
*(___ksymtab+si_get_macclk_mul_fact) \
*(___ksymtab+si_getnvramflvar) \
*(___ksymtab+si_gpioevent) \
*(___ksymtab+si_gpioeventintmask) \
*(___ksymtab+si_gpio_int_enable) \
*(___ksymtab+si_gpiorelease) \
*(___ksymtab+si_gpioreserve) \
*(___ksymtab+si_ilp_clock) \
*(___ksymtab+si_intflag) \
*(___ksymtab+si_is_otp_disabled) \
*(___ksymtab+si_is_otp_powered) \
*(___ksymtab+si_mem_available) \
*(___ksymtab+simple_dentry_operations) \
*(___ksymtab+simple_dname) \
*(___ksymtab+simple_getattr) \
*(___ksymtab+simple_link) \
*(___ksymtab+simple_map_init) \
*(___ksymtab+simple_nosetlease) \
*(___ksymtab+simple_readpage) \
*(___ksymtab+simple_rename) \
*(___ksymtab+simple_rmdir) \
*(___ksymtab+simple_setattr) \
*(___ksymtab+simple_strtol) \
*(___ksymtab+simple_strtoll) \
*(___ksymtab+simple_symlink_inode_operations) \
*(___ksymtab+simple_transaction_get) \
*(___ksymtab+simple_transaction_read) \
*(___ksymtab+simple_transaction_release) \
*(___ksymtab+simple_transaction_set) \
*(___ksymtab+simple_unlink) \
*(___ksymtab+simple_write_begin) \
*(___ksymtab+simple_write_to_buffer) \
*(___ksymtab+si_muxenab) \
*(___ksymtab+single_task_running) \
*(___ksymtab+si_numaddrspaces) \
*(___ksymtab+si_numcoreunits) \
*(___ksymtab+si_numd11coreunits) \
*(___ksymtab+si_otp_fabid) \
*(___ksymtab+si_otp_power) \
*(___ksymtab+si_pcie_configspace_get) \
*(___ksymtab+si_pcie_disable_oobselltr) \
*(___ksymtab+si_pcie_get_bar0) \
*(___ksymtab+si_pcie_get_maxpayload_size) \
*(___ksymtab+si_pcie_get_ssid) \
*(___ksymtab+si_pcie_hw_L1SS_war) \
*(___ksymtab+si_pcieltrhysteresiscnt_reg) \
*(___ksymtab+si_pcieltr_reg) \
*(___ksymtab+si_pcieltrspacing_reg) \
*(___ksymtab+si_pcie_prep_D3) \
*(___ksymtab+si_pcie_readreg) \
*(___ksymtab+si_pcie_set_error_injection) \
*(___ksymtab+si_pcie_writereg) \
*(___ksymtab+si_pci_pmeclr) \
*(___ksymtab+si_pci_pmeen) \
*(___ksymtab+si_pci_pmestat) \
*(___ksymtab+si_pci_pmestatclr) \
*(___ksymtab+siphash_1u32) \
*(___ksymtab+siphash_1u64) \
*(___ksymtab+siphash_2u64) \
*(___ksymtab+siphash_3u32) \
*(___ksymtab+siphash_3u64) \
*(___ksymtab+siphash_4u64) \
*(___ksymtab+__siphash_aligned) \
*(___ksymtab+si_pll_closeloop) \
*(___ksymtab+si_pll_minresmask_reset) \
*(___ksymtab+si_pll_reset) \
*(___ksymtab+si_pll_sr_reinit) \
*(___ksymtab+si_pmu_alp_clock) \
*(___ksymtab+si_pmu_avb_clk_set) \
*(___ksymtab+si_pmu_avbtimer_enable) \
*(___ksymtab+si_pmu_cal_fvco) \
*(___ksymtab+si_pmu_corereg) \
*(___ksymtab+si_pmu_cpu_clock) \
*(___ksymtab+si_pmu_def_alp_clock) \
*(___ksymtab+si_pmu_dump_buf_size_pmucap) \
*(___ksymtab+si_pmu_dump_pmucap_binary) \
*(___ksymtab+si_pmu_force_ilp) \
*(___ksymtab+si_pmu_fvco_pllreg) \
*(___ksymtab+si_pmu_get_pmutime_diff) \
*(___ksymtab+si_pmu_get_pmutimer) \
*(___ksymtab+si_pmu_ilp_clock) \
*(___ksymtab+si_pmu_ilp_clock_set) \
*(___ksymtab+si_pmu_init) \
*(___ksymtab+si_pmu_is_otp_powered) \
*(___ksymtab+si_pmu_is_sprom_enabled) \
*(___ksymtab+si_pmu_measure_alpclk) \
*(___ksymtab+si_pmu_mem_clock) \
*(___ksymtab+si_pmu_minresmask_htavail_set) \
*(___ksymtab+si_pmu_otp_chipcontrol) \
*(___ksymtab+si_pmu_otp_pllcontrol) \
*(___ksymtab+si_pmu_otp_power) \
*(___ksymtab+si_pmu_otp_regcontrol) \
*(___ksymtab+si_pmu_paref_ldo_enable) \
*(___ksymtab+si_pmu_pll_init) \
*(___ksymtab+si_pmu_pll_off_PARR) \
*(___ksymtab+si_pmu_pllreset) \
*(___ksymtab+si_pmu_rcal) \
*(___ksymtab+si_pmu_reset_ret_sleep_log) \
*(___ksymtab+si_pmu_res_req_timer_clr) \
*(___ksymtab+si_pmu_set_4330_plldivs) \
*(___ksymtab+si_pmu_set_switcher_voltage) \
*(___ksymtab+si_pmu_set_ulbmode) \
*(___ksymtab+si_pmu_sprom_enable) \
*(___ksymtab+si_pmu_switch_off_PARLDO) \
*(___ksymtab+si_pmu_swreg_init) \
*(___ksymtab+si_pmu_waitforclk_on_backplane) \
*(___ksymtab+si_pmu_wait_for_res_pending) \
*(___ksymtab+si_pmu_wait_for_steady_state) \
*(___ksymtab+si_sdiod_drive_strength_init) \
*(___ksymtab+si_setint) \
*(___ksymtab+si_setosh) \
*(___ksymtab+si_slave_wrapper_add) \
*(___ksymtab+si_socdevram) \
*(___ksymtab+si_socdevram_pkg) \
*(___ksymtab+si_socdevram_remap_isenb) \
*(___ksymtab+si_socdevram_remap_size) \
*(___ksymtab+si_socdevram_size) \
*(___ksymtab+si_socram_size) \
*(___ksymtab+si_socram_srmem_size) \
*(___ksymtab+si_survive_perst_war) \
*(___ksymtab+si_swdenable) \
*(___ksymtab+si_taclear) \
*(___ksymtab+si_wrapperreg) \
*(___ksymtab+si_wrapperregs) \
*(___ksymtab+__sk_backlog_rcv) \
*(___ksymtab+skb_add_rx_frag) \
*(___ksymtab+skb_append) \
*(___ksymtab+skb_append_pagefrags) \
*(___ksymtab+skb_coalesce_rx_frag) \
*(___ksymtab+skb_ensure_writable) \
*(___ksymtab+skb_find_text) \
*(___ksymtab+skb_flow_dissector_init) \
*(___ksymtab+skb_get_hash_perturb) \
*(___ksymtab+skb_insert) \
*(___ksymtab+skb_mac_gso_segment) \
*(___ksymtab+skb_orphan_partial) \
*(___ksymtab+skb_pad) \
*(___ksymtab+skb_page_frag_refill) \
*(___ksymtab+skb_segment) \
*(___ksymtab+skb_splice_bits) \
*(___ksymtab+__skb_tx_hash) \
*(___ksymtab+skb_vlan_pop) \
*(___ksymtab+skb_vlan_push) \
*(___ksymtab+skb_vlan_untag) \
*(___ksymtab+skb_zerocopy) \
*(___ksymtab+skb_zerocopy_headlen) \
*(___ksymtab+sk_clear_memalloc) \
*(___ksymtab+sk_clone_lock) \
*(___ksymtab+__sk_mem_reclaim) \
*(___ksymtab+sk_reset_timer) \
*(___ksymtab+sk_set_memalloc) \
*(___ksymtab+sk_stop_timer) \
*(___ksymtab+sk_stream_error) \
*(___ksymtab+sk_stream_kill_queues) \
*(___ksymtab+sk_stream_wait_close) \
*(___ksymtab+sk_stream_wait_connect) \
*(___ksymtab+sk_stream_wait_memory) \
*(___ksymtab+sk_stream_write_space) \
*(___ksymtab+sk_wait_data) \
*(___ksymtab+slhc_compress) \
*(___ksymtab+slhc_free) \
*(___ksymtab+slhc_init) \
*(___ksymtab+slhc_remember) \
*(___ksymtab+slhc_toss) \
*(___ksymtab+slhc_uncompress) \
*(___ksymtab+smpboot_register_percpu_thread_cpumask) \
*(___ksymtab+smpboot_unregister_percpu_thread) \
*(___ksymtab+smp_call_function) \
*(___ksymtab+smp_call_function_any) \
*(___ksymtab+smp_call_function_many) \
*(___ksymtab+smp_call_function_single) \
*(___ksymtab+smp_call_function_single_async) \
*(___ksymtab+snmp_get_cpu_field) \
*(___ksymtab+sock_alloc_file) \
*(___ksymtab+sock_cmsg_send) \
*(___ksymtab+sock_create) \
*(___ksymtab+sock_create_lite) \
*(___ksymtab+sock_efree) \
*(___ksymtab+sock_from_file) \
*(___ksymtab+sock_gen_put) \
*(___ksymtab+sock_no_connect) \
*(___ksymtab+sock_no_getname) \
*(___ksymtab+sock_no_ioctl) \
*(___ksymtab+sock_recvmsg) \
*(___ksymtab+sock_sendmsg) \
*(___ksymtab+sock_setsockopt) \
*(___ksymtab+sock_wake_async) \
*(___ksymtab+softnet_data) \
*(___ksymtab+spi_add_device) \
*(___ksymtab+spi_alloc_device) \
*(___ksymtab+spi_bus_lock) \
*(___ksymtab+spi_busnum_to_master) \
*(___ksymtab+spi_bus_type) \
*(___ksymtab+spi_bus_unlock) \
*(___ksymtab+spi_finalize_current_message) \
*(___ksymtab+spi_finalize_current_transfer) \
*(___ksymtab+spi_get_next_queued_message) \
*(___ksymtab+spi_master_resume) \
*(___ksymtab+spi_master_suspend) \
*(___ksymtab+spi_new_device) \
*(___ksymtab+__spi_register_driver) \
*(___ksymtab+spi_statistics_add_transfer_stats) \
*(___ksymtab+splice_direct_to_actor) \
*(___ksymtab+__splice_from_pipe) \
*(___ksymtab+splice_to_pipe) \
*(___ksymtab+split_page) \
*(___ksymtab+sprint_symbol) \
*(___ksymtab+sprint_symbol_no_offset) \
*(___ksymtab+srcu_init_notifier_head) \
*(___ksymtab+__srcu_notifier_call_chain) \
*(___ksymtab+srcu_notifier_call_chain) \
*(___ksymtab+srcu_notifier_chain_register) \
*(___ksymtab+srcu_notifier_chain_unregister) \
*(___ksymtab+__srcu_read_lock) \
*(___ksymtab+__srcu_read_unlock) \
*(___ksymtab+srom_otp_write_region_crc) \
*(___ksymtab+srom_parsecis) \
*(___ksymtab+srom_var_deinit) \
*(___ksymtab+srom_var_init) \
*(___ksymtab+start_tty) \
*(___ksymtab+static_key_deferred_flush) \
*(___ksymtab+static_key_initialized) \
*(___ksymtab+static_key_slow_dec) \
*(___ksymtab+static_key_slow_dec_deferred) \
*(___ksymtab+stop_machine) \
*(___ksymtab+stop_tty) \
*(___ksymtab+strim) \
*(___ksymtab+string_escape_mem) \
*(___ksymtab+string_unescape) \
*(___ksymtab+strlcat) \
*(___ksymtab+strnstr) \
*(___ksymtab+subsys_dev_iter_exit) \
*(___ksymtab+subsys_dev_iter_init) \
*(___ksymtab+subsys_dev_iter_next) \
*(___ksymtab+subsys_find_device_by_id) \
*(___ksymtab+subsys_interface_register) \
*(___ksymtab+subsys_interface_unregister) \
*(___ksymtab+subsys_system_register) \
*(___ksymtab+subsys_virtual_register) \
*(___ksymtab+__sw_hweight16) \
*(___ksymtab+__sw_hweight64) \
*(___ksymtab+__sw_hweight8) \
*(___ksymtab+swiotlb_alloc_coherent) \
*(___ksymtab+swiotlb_free_coherent) \
*(___ksymtab+swiotlb_map_page) \
*(___ksymtab+swiotlb_map_sg) \
*(___ksymtab+swiotlb_map_sg_attrs) \
*(___ksymtab+swiotlb_nr_tbl) \
*(___ksymtab+swiotlb_sync_sg_for_cpu) \
*(___ksymtab+swiotlb_sync_sg_for_device) \
*(___ksymtab+swiotlb_sync_single_for_cpu) \
*(___ksymtab+swiotlb_sync_single_for_device) \
*(___ksymtab+swiotlb_tbl_map_single) \
*(___ksymtab+swiotlb_tbl_sync_single) \
*(___ksymtab+swiotlb_tbl_unmap_single) \
*(___ksymtab+swiotlb_unmap_page) \
*(___ksymtab+swiotlb_unmap_sg) \
*(___ksymtab+swiotlb_unmap_sg_attrs) \
*(___ksymtab+__symbol_get) \
*(___ksymtab+__symbol_put) \
*(___ksymtab+symbol_put_addr) \
*(___ksymtab+synchronize_hardirq) \
*(___ksymtab+synchronize_rcu_bh) \
*(___ksymtab+synchronize_rcu_expedited) \
*(___ksymtab+synchronize_srcu) \
*(___ksymtab+synchronize_srcu_expedited) \
*(___ksymtab+sync_inode) \
*(___ksymtab+sync_inodes_sb) \
*(___ksymtab+sys_close) \
*(___ksymtab+sysctl_max_skb_frags) \
*(___ksymtab+sysctl_max_syn_backlog) \
*(___ksymtab+sysctl_tcp_low_latency) \
*(___ksymtab+sysctl_tcp_reordering) \
*(___ksymtab+sysfs_chmod_file) \
*(___ksymtab+sysfs_create_bin_file) \
*(___ksymtab+sysfs_create_files) \
*(___ksymtab+sysfs_format_mac) \
*(___ksymtab+sysfs_notify) \
*(___ksymtab+sysfs_remove_bin_file) \
*(___ksymtab+sysfs_remove_files) \
*(___ksymtab+sysfs_rename_link_ns) \
*(___ksymtab+system_freezable_power_efficient_wq) \
*(___ksymtab+system_highpri_wq) \
*(___ksymtab+system_rev) \
*(___ksymtab+system_serial) \
*(___ksymtab+system_serial_high) \
*(___ksymtab+system_serial_low) \
*(___ksymtab+system_unbound_wq) \
*(___ksymtab+take_dentry_name_snapshot) \
*(___ksymtab+task_cputime_adjusted) \
*(___ksymtab+task_user_regset_view) \
*(___ksymtab+tc_classify) \
*(___ksymtab+tcf_action_dump_1) \
*(___ksymtab+tcf_action_exec) \
*(___ksymtab+tcf_destroy_chain) \
*(___ksymtab+tcf_exts_change) \
*(___ksymtab+tcf_exts_destroy) \
*(___ksymtab+tcf_exts_dump) \
*(___ksymtab+tcf_exts_dump_stats) \
*(___ksymtab+tcf_exts_validate) \
*(___ksymtab+tcf_hash_check) \
*(___ksymtab+tcf_hash_create) \
*(___ksymtab+tcf_hash_insert) \
*(___ksymtab+tcf_hash_new_index) \
*(___ksymtab+__tcf_hash_release) \
*(___ksymtab+tcf_hash_search) \
*(___ksymtab+tcf_register_action) \
*(___ksymtab+tcf_unregister_action) \
*(___ksymtab+tcp_ca_get_name_by_key) \
*(___ksymtab+tcp_cong_avoid_ai) \
*(___ksymtab+tcp_enter_cwr) \
*(___ksymtab+tcp_enter_quickack_mode) \
*(___ksymtab+tcp_get_info) \
*(___ksymtab+tcp_openreq_init_rwin) \
*(___ksymtab+tcp_peer_is_proven) \
*(___ksymtab+tcp_read_sock) \
*(___ksymtab+tcp_register_congestion_control) \
*(___ksymtab+tcp_reno_cong_avoid) \
*(___ksymtab+tcp_reno_ssthresh) \
*(___ksymtab+__tcp_send_ack) \
*(___ksymtab+tcp_slow_start) \
*(___ksymtab+tcp_unregister_congestion_control) \
*(___ksymtab+tcp_vegas_cwnd_event) \
*(___ksymtab+tcp_vegas_get_info) \
*(___ksymtab+tcp_vegas_init) \
*(___ksymtab+tcp_vegas_pkts_acked) \
*(___ksymtab+tcp_vegas_state) \
*(___ksymtab+_test_and_change_bit) \
*(___ksymtab+test_taint) \
*(___ksymtab+textsearch_destroy) \
*(___ksymtab+textsearch_find_continuous) \
*(___ksymtab+textsearch_prepare) \
*(___ksymtab+textsearch_register) \
*(___ksymtab+textsearch_unregister) \
*(___ksymtab+thaw_bdev) \
*(___ksymtab+thread_notify_head) \
*(___ksymtab+tick_broadcast_control) \
*(___ksymtab+tick_broadcast_oneshot_control) \
*(___ksymtab+timecounter_cyc2time) \
*(___ksymtab+timecounter_init) \
*(___ksymtab+timecounter_read) \
*(___ksymtab+timekeeping_inject_offset) \
*(___ksymtab+timerqueue_add) \
*(___ksymtab+timerqueue_del) \
*(___ksymtab+timerqueue_iterate_next) \
*(___ksymtab+timespec_trunc) \
*(___ksymtab+totalhigh_pages) \
*(___ksymtab+touch_buffer) \
*(___ksymtab+transport_class_register) \
*(___ksymtab+tso_build_data) \
*(___ksymtab+tso_build_hdr) \
*(___ksymtab+tso_count_descs) \
*(___ksymtab+tso_start) \
*(___ksymtab+tty_buffer_lock_exclusive) \
*(___ksymtab+tty_buffer_set_limit) \
*(___ksymtab+tty_buffer_space_avail) \
*(___ksymtab+tty_buffer_unlock_exclusive) \
*(___ksymtab+tty_chars_in_buffer) \
*(___ksymtab+tty_check_change) \
*(___ksymtab+tty_devnum) \
*(___ksymtab+tty_do_resize) \
*(___ksymtab+tty_driver_flush_buffer) \
*(___ksymtab+tty_driver_kref_put) \
*(___ksymtab+tty_free_termios) \
*(___ksymtab+tty_get_pgrp) \
*(___ksymtab+tty_init_termios) \
*(___ksymtab+tty_insert_flip_string_flags) \
*(___ksymtab+tty_ldisc_flush) \
*(___ksymtab+tty_lock) \
*(___ksymtab+tty_mode_ioctl) \
*(___ksymtab+tty_mutex) \
*(___ksymtab+tty_name) \
*(___ksymtab+tty_perform_flush) \
*(___ksymtab+tty_port_alloc_xmit_buf) \
*(___ksymtab+tty_port_block_til_ready) \
*(___ksymtab+tty_port_carrier_raised) \
*(___ksymtab+tty_port_free_xmit_buf) \
*(___ksymtab+tty_port_link_device) \
*(___ksymtab+tty_port_lower_dtr_rts) \
*(___ksymtab+tty_port_raise_dtr_rts) \
*(___ksymtab+tty_prepare_flip_string) \
*(___ksymtab+tty_put_char) \
*(___ksymtab+tty_register_ldisc) \
*(___ksymtab+tty_set_termios) \
*(___ksymtab+tty_termios_input_baud_rate) \
*(___ksymtab+tty_throttle) \
*(___ksymtab+tty_unlock) \
*(___ksymtab+tty_unregister_ldisc) \
*(___ksymtab+tty_unthrottle) \
*(___ksymtab+tty_wait_until_sent) \
*(___ksymtab+tty_write_room) \
*(___ksymtab+twd_timer_get_rate) \
*(___ksymtab+uart_add_one_port) \
*(___ksymtab+uart_console_write) \
*(___ksymtab+uart_get_baud_rate) \
*(___ksymtab+uart_get_divisor) \
*(___ksymtab+uart_handle_cts_change) \
*(___ksymtab+uart_handle_dcd_change) \
*(___ksymtab+uart_insert_char) \
*(___ksymtab+uart_match_port) \
*(___ksymtab+uart_parse_earlycon) \
*(___ksymtab+uart_parse_options) \
*(___ksymtab+uart_register_driver) \
*(___ksymtab+uart_remove_one_port) \
*(___ksymtab+uart_resume_port) \
*(___ksymtab+uart_set_options) \
*(___ksymtab+uart_suspend_port) \
*(___ksymtab+uart_unregister_driver) \
*(___ksymtab+__ucmpdi2) \
*(___ksymtab+__udivsi3) \
*(___ksymtab+udp4_hwcsum) \
*(___ksymtab+udp_rcv) \
*(___ksymtab+uevent_next_seqnum) \
*(___ksymtab+uhci_check_and_reset_hc) \
*(___ksymtab+__umodsi3) \
*(___ksymtab+unix_inq_len) \
*(___ksymtab+unix_outq_len) \
*(___ksymtab+unix_peer_get) \
*(___ksymtab+unix_socket_table) \
*(___ksymtab+unix_table_lock) \
*(___ksymtab+unlock_rename) \
*(___ksymtab+unmap_kernel_range) \
*(___ksymtab+unmap_kernel_range_noflush) \
*(___ksymtab+unmap_mapping_range) \
*(___ksymtab+unregister_8022_client) \
*(___ksymtab+unregister_binfmt) \
*(___ksymtab+unregister_console) \
*(___ksymtab+__unregister_cpu_notifier) \
*(___ksymtab+unregister_cpu_notifier) \
*(___ksymtab+unregister_die_notifier) \
*(___ksymtab+unregister_inet6addr_notifier) \
*(___ksymtab+unregister_module_notifier) \
*(___ksymtab+unregister_mtd_chip_driver) \
*(___ksymtab+unregister_mtd_user) \
*(___ksymtab+unregister_netevent_notifier) \
*(___ksymtab+unregister_oom_notifier) \
*(___ksymtab+unregister_restart_handler) \
*(___ksymtab+unregister_snap_client) \
*(___ksymtab+unregister_syscore_ops) \
*(___ksymtab+unregister_sysrq_key) \
*(___ksymtab+unregister_tcf_proto_ops) \
*(___ksymtab+unshare_fs_struct) \
*(___ksymtab+unuse_mm) \
*(___ksymtab+usb_enable_intel_xhci_ports) \
*(___ksymtab+use_mm) \
*(___ksymtab+user_describe) \
*(___ksymtab+user_free_preparse) \
*(___ksymtab+usermodehelper_read_lock_wait) \
*(___ksymtab+usermodehelper_read_trylock) \
*(___ksymtab+usermodehelper_read_unlock) \
*(___ksymtab+user_path_at_empty) \
*(___ksymtab+user_path_create) \
*(___ksymtab+user_preparse) \
*(___ksymtab+uuid_be_gen) \
*(___ksymtab+uuid_le_gen) \
*(___ksymtab+v7_coherent_kern_range) \
*(___ksymtab+v7_flush_kern_cache_all) \
*(___ksymtab+v7_flush_kern_dcache_area) \
*(___ksymtab+v7_flush_user_cache_all) \
*(___ksymtab+v7_flush_user_cache_range) \
*(___ksymtab+verify_spi_info) \
*(___ksymtab+vfs_cancel_lock) \
*(___ksymtab+vfs_create) \
*(___ksymtab+vfs_fallocate) \
*(___ksymtab+vfs_fstat) \
*(___ksymtab+vfs_fstatat) \
*(___ksymtab+vfs_fsync) \
*(___ksymtab+vfs_getattr) \
*(___ksymtab+vfs_getattr_nosec) \
*(___ksymtab+vfs_getxattr) \
*(___ksymtab+vfs_iter_read) \
*(___ksymtab+vfs_iter_write) \
*(___ksymtab+vfs_kern_mount) \
*(___ksymtab+vfs_link) \
*(___ksymtab+vfs_listxattr) \
*(___ksymtab+vfs_llseek) \
*(___ksymtab+vfs_lock_file) \
*(___ksymtab+vfs_lstat) \
*(___ksymtab+vfs_mkdir) \
*(___ksymtab+vfs_mknod) \
*(___ksymtab+__vfs_read) \
*(___ksymtab+vfs_read) \
*(___ksymtab+vfs_readv) \
*(___ksymtab+vfs_removexattr) \
*(___ksymtab+vfs_rename) \
*(___ksymtab+vfs_rmdir) \
*(___ksymtab+vfs_setlease) \
*(___ksymtab+vfs_setxattr) \
*(___ksymtab+vfs_stat) \
*(___ksymtab+vfs_statfs) \
*(___ksymtab+vfs_symlink) \
*(___ksymtab+vfs_test_lock) \
*(___ksymtab+vfs_truncate) \
*(___ksymtab+vfs_unlink) \
*(___ksymtab+vfs_whiteout) \
*(___ksymtab+__vfs_write) \
*(___ksymtab+vfs_write) \
*(___ksymtab+vfs_writev) \
*(___ksymtab+vga_base) \
*(___ksymtab+vlan_dev_real_dev) \
*(___ksymtab+__vlan_hwaccel_rx) \
*(___ksymtab+vlan_ioctl_set) \
*(___ksymtab+vmap) \
*(___ksymtab+vm_brk) \
*(___ksymtab+vm_get_page_prot) \
*(___ksymtab+vm_insert_mixed) \
*(___ksymtab+vm_insert_page) \
*(___ksymtab+vm_insert_pfn) \
*(___ksymtab+vm_insert_pfn_prot) \
*(___ksymtab+vm_iomap_memory) \
*(___ksymtab+vm_map_ram) \
*(___ksymtab+vm_memory_committed) \
*(___ksymtab+vm_mmap) \
*(___ksymtab+vm_munmap) \
*(___ksymtab+vm_stat) \
*(___ksymtab+vm_unmap_aliases) \
*(___ksymtab+vm_unmap_ram) \
*(___ksymtab+vunmap) \
*(___ksymtab+wait_for_device_probe) \
*(___ksymtab+wait_for_key_construction) \
*(___ksymtab+wait_iff_congested) \
*(___ksymtab+__wait_on_bit) \
*(___ksymtab+__wait_on_bit_lock) \
*(___ksymtab+__wait_rcu_gp) \
*(___ksymtab+wait_woken) \
*(___ksymtab+wakeme_after_rcu) \
*(___ksymtab+walk_stackframe) \
*(___ksymtab+watchdog_init_timeout) \
*(___ksymtab+wireless_nlevent_flush) \
*(___ksymtab+woken_wake_function) \
*(___ksymtab+work_busy) \
*(___ksymtab+work_on_cpu) \
*(___ksymtab+would_dump) \
*(___ksymtab+writeback_inodes_sb) \
*(___ksymtab+writeback_inodes_sb_nr) \
*(___ksymtab+write_one_page) \
*(___ksymtab+xattr_full_name) \
*(___ksymtab+xattr_getsecurity) \
*(___ksymtab+xfrm4_prepare_output) \
*(___ksymtab+xfrm4_protocol_deregister) \
*(___ksymtab+xfrm4_protocol_init) \
*(___ksymtab+xfrm4_protocol_register) \
*(___ksymtab+xfrm4_rcv) \
*(___ksymtab+xfrm4_rcv_cb) \
*(___ksymtab+xfrm4_rcv_encap) \
*(___ksymtab+xfrm_alloc_spi) \
*(___ksymtab+xfrm_find_acq) \
*(___ksymtab+xfrm_find_acq_byseq) \
*(___ksymtab+xfrm_garbage_collect) \
*(___ksymtab+xfrm_get_acqseq) \
*(___ksymtab+xfrm_init_replay) \
*(___ksymtab+xfrm_policy_alloc) \
*(___ksymtab+xfrm_policy_byid) \
*(___ksymtab+xfrm_policy_bysel_ctx) \
*(___ksymtab+xfrm_policy_delete) \
*(___ksymtab+xfrm_policy_flush) \
*(___ksymtab+xfrm_policy_hash_rebuild) \
*(___ksymtab+xfrm_policy_insert) \
*(___ksymtab+xfrm_policy_walk) \
*(___ksymtab+xfrm_policy_walk_done) \
*(___ksymtab+xfrm_policy_walk_init) \
*(___ksymtab+xfrm_register_km) \
*(___ksymtab+xfrm_sad_getinfo) \
*(___ksymtab+xfrm_spd_getinfo) \
*(___ksymtab+xfrm_state_add) \
*(___ksymtab+__xfrm_state_delete) \
*(___ksymtab+xfrm_state_delete) \
*(___ksymtab+xfrm_state_flush) \
*(___ksymtab+xfrm_stateonly_find) \
*(___ksymtab+xfrm_state_walk) \
*(___ksymtab+xfrm_state_walk_done) \
*(___ksymtab+xfrm_state_walk_init) \
*(___ksymtab+xfrm_unregister_km) \
*(___ksymtab+xt_check_proc_name) \
*(___ksymtab+xt_find_match) \
*(___ksymtab+xt_find_target) \
*(___ksymtab+xtnu_register_target) \
*(___ksymtab+xtnu_register_targets) \
*(___ksymtab+xtnu_request_find_match) \
*(___ksymtab+xtnu_unregister_target) \
*(___ksymtab+xtnu_unregister_targets) \
*(___ksymtab+xz_dec_end) \
*(___ksymtab+xz_dec_init) \
*(___ksymtab+xz_dec_reset) \
*(___ksymtab+xz_dec_run) \
*(___ksymtab+zap_vma_ptes) \
*(___ksymtab+zero_fill_bio) \
*(___ksymtab+zero_pfn) \

#define SYMTAB_DISCARD_GPL \
*(___ksymtab_gpl+ablkcipher_walk_phys) \
*(___ksymtab_gpl+abort) \
*(___ksymtab_gpl+abort_creds) \
*(___ksymtab_gpl+account_page_dirtied) \
*(___ksymtab_gpl+account_page_redirty) \
*(___ksymtab_gpl+acl_by_type) \
*(___ksymtab_gpl+add_hwgenerator_randomness) \
*(___ksymtab_gpl+add_input_randomness) \
*(___ksymtab_gpl+add_mtd_blktrans_dev) \
*(___ksymtab_gpl+add_page_wait_queue) \
*(___ksymtab_gpl+address_space_init_once) \
*(___ksymtab_gpl+adjust_managed_page_count) \
*(___ksymtab_gpl+adjust_resource) \
*(___ksymtab_gpl+__aeabi_lasr) \
*(___ksymtab_gpl+__aeabi_llsl) \
*(___ksymtab_gpl+__aeabi_llsr) \
*(___ksymtab_gpl+__aeabi_lmul) \
*(___ksymtab_gpl+__aeabi_ulcmp) \
*(___ksymtab_gpl+aer_irq) \
*(___ksymtab_gpl+AES_decrypt) \
*(___ksymtab_gpl+AES_encrypt) \
*(___ksymtab_gpl+ahash_free_instance) \
*(___ksymtab_gpl+ahash_register_instance) \
*(___ksymtab_gpl+ai_addrspace) \
*(___ksymtab_gpl+ai_addrspacesize) \
*(___ksymtab_gpl+ai_clear_backplane_to) \
*(___ksymtab_gpl+ai_coreaddrspaceX) \
*(___ksymtab_gpl+ai_core_cflags) \
*(___ksymtab_gpl+ai_core_cflags_wo) \
*(___ksymtab_gpl+ai_core_disable) \
*(___ksymtab_gpl+ai_corereg) \
*(___ksymtab_gpl+ai_corereg_addr) \
*(___ksymtab_gpl+ai_core_reset) \
*(___ksymtab_gpl+ai_corerev) \
*(___ksymtab_gpl+ai_core_sflags) \
*(___ksymtab_gpl+ai_corevendor) \
*(___ksymtab_gpl+ai_enable_backplane_timeouts) \
*(___ksymtab_gpl+ai_flag) \
*(___ksymtab_gpl+ai_flag_alt) \
*(___ksymtab_gpl+ai_numaddrspaces) \
*(___ksymtab_gpl+ai_scan) \
*(___ksymtab_gpl+ai_setcoreidx) \
*(___ksymtab_gpl+ai_setint) \
*(___ksymtab_gpl+ai_wrap_reg) \
*(___ksymtab_gpl+alarm_cancel) \
*(___ksymtab_gpl+alarm_expires_remaining) \
*(___ksymtab_gpl+alarm_forward) \
*(___ksymtab_gpl+alarm_forward_now) \
*(___ksymtab_gpl+alarm_init) \
*(___ksymtab_gpl+alarm_restart) \
*(___ksymtab_gpl+alarm_start) \
*(___ksymtab_gpl+alarm_start_relative) \
*(___ksymtab_gpl+alarm_try_to_cancel) \
*(___ksymtab_gpl+alg_test) \
*(___ksymtab_gpl+alloc_anon_inode) \
*(___ksymtab_gpl+allocate_resource) \
*(___ksymtab_gpl+alloc_chrdev_region) \
*(___ksymtab_gpl+alloc_cpu_rmap) \
*(___ksymtab_gpl+alloc_file) \
*(___ksymtab_gpl+alloc_page_buffers) \
*(___ksymtab_gpl+__alloc_page_frag) \
*(___ksymtab_gpl+alloc_pages_exact) \
*(___ksymtab_gpl+alloc_skb_with_frags) \
*(___ksymtab_gpl+alloc_vm_area) \
*(___ksymtab_gpl+always_delete_dentry) \
*(___ksymtab_gpl+anon_inode_getfd) \
*(___ksymtab_gpl+anon_inode_getfile) \
*(___ksymtab_gpl+anon_transport_class_register) \
*(___ksymtab_gpl+apply_to_page_range) \
*(___ksymtab_gpl+argv_free) \
*(___ksymtab_gpl+argv_split) \
*(___ksymtab_gpl+arm_check_condition) \
*(___ksymtab_gpl+arm_clear_user) \
*(___ksymtab_gpl+arm_coherent_dma_ops) \
*(___ksymtab_gpl+arm_elf_read_implies_exec) \
*(___ksymtab_gpl+arm_smccc_hvc) \
*(___ksymtab_gpl+arm_smccc_smc) \
*(___ksymtab_gpl+arp_spoofing_protect) \
*(___ksymtab_gpl+arp_tbl) \
*(___ksymtab_gpl+__ashldi3) \
*(___ksymtab_gpl+__ashrdi3) \
*(___ksymtab_gpl+async_synchronize_cookie) \
*(___ksymtab_gpl+async_synchronize_cookie_domain) \
*(___ksymtab_gpl+async_synchronize_full) \
*(___ksymtab_gpl+atomic_io_modify) \
*(___ksymtab_gpl+atomic_io_modify_relaxed) \
*(___ksymtab_gpl+__atomic_notifier_call_chain) \
*(___ksymtab_gpl+atomic_notifier_call_chain) \
*(___ksymtab_gpl+atomic_notifier_chain_register) \
*(___ksymtab_gpl+atomic_notifier_chain_unregister) \
*(___ksymtab_gpl+attribute_container_classdev_to_container) \
*(___ksymtab_gpl+attribute_container_find_class_device) \
*(___ksymtab_gpl+attribute_container_register) \
*(___ksymtab_gpl+attribute_container_unregister) \
*(___ksymtab_gpl+avenrun) \
*(___ksymtab_gpl+balance_dirty_pages_ratelimited) \
*(___ksymtab_gpl+_bcd2bin) \
*(___ksymtab_gpl+bcm_add_64) \
*(___ksymtab_gpl+bcm_alloc_rxcplid_list) \
*(___ksymtab_gpl+bcm_alloc_rxcplinfo) \
*(___ksymtab_gpl+bcm_bitprint32) \
*(___ksymtab_gpl+bcm_chain_rxcplid) \
*(___ksymtab_gpl+bcm_chipname) \
*(___ksymtab_gpl+bcm_cmp_bytes) \
*(___ksymtab_gpl+bcm_crypto_algo_name) \
*(___ksymtab_gpl+bcmdumpfields) \
*(___ksymtab_gpl+bcm_format_flags) \
*(___ksymtab_gpl+bcm_free_rxcplinfo) \
*(___ksymtab_gpl+bcm_id2rxcplinfo) \
*(___ksymtab_gpl+bcm_inc_bytes) \
*(___ksymtab_gpl+bcm_ip_cksum) \
*(___ksymtab_gpl+bcm_ipv6_ntoa) \
*(___ksymtab_gpl+bcm_mdelay) \
*(___ksymtab_gpl+bcm_nvram_cache) \
*(___ksymtab_gpl+bcm_nvram_vars) \
*(___ksymtab_gpl+bcmp) \
*(___ksymtab_gpl+bcm_parse_ordered_tlvs) \
*(___ksymtab_gpl+bcm_print_bytes) \
*(___ksymtab_gpl+bcm_robo_flow_control) \
*(___ksymtab_gpl+bcm_rxcplinfo2id) \
*(___ksymtab_gpl+bcm_rxcpllist_end) \
*(___ksymtab_gpl+bcmstricmp) \
*(___ksymtab_gpl+bcmstrnicmp) \
*(___ksymtab_gpl+bcmstrnstr) \
*(___ksymtab_gpl+bcmstrtok) \
*(___ksymtab_gpl+bcm_sub_64) \
*(___ksymtab_gpl+bcm_uint64_right_shift) \
*(___ksymtab_gpl+_bcmutils_dummy_fn) \
*(___ksymtab_gpl+bdev_direct_access) \
*(___ksymtab_gpl+bdev_read_page) \
*(___ksymtab_gpl+bdev_stack_limits) \
*(___ksymtab_gpl+bdev_write_page) \
*(___ksymtab_gpl+bdget) \
*(___ksymtab_gpl+bdget_disk) \
*(___ksymtab_gpl+bdgrab) \
*(___ksymtab_gpl+bd_link_disk_holder) \
*(___ksymtab_gpl+bd_set_size) \
*(___ksymtab_gpl+bd_unlink_disk_holder) \
*(___ksymtab_gpl+bfifo_qdisc_ops) \
*(___ksymtab_gpl+_bin2bcd) \
*(___ksymtab_gpl+bin2hex) \
*(___ksymtab_gpl+bio_add_pc_page) \
*(___ksymtab_gpl+bio_advance) \
*(___ksymtab_gpl+bio_alloc_pages) \
*(___ksymtab_gpl+bio_chain) \
*(___ksymtab_gpl+bio_clone_bioset) \
*(___ksymtab_gpl+__bio_clone_fast) \
*(___ksymtab_gpl+bio_clone_fast) \
*(___ksymtab_gpl+bio_copy_data) \
*(___ksymtab_gpl+bio_copy_kern) \
*(___ksymtab_gpl+bio_endio) \
*(___ksymtab_gpl+bio_init) \
*(___ksymtab_gpl+bio_map_kern) \
*(___ksymtab_gpl+bio_phys_segments) \
*(___ksymtab_gpl+bio_reset) \
*(___ksymtab_gpl+bioset_create) \
*(___ksymtab_gpl+bioset_create_nobvec) \
*(___ksymtab_gpl+bioset_free) \
*(___ksymtab_gpl+bio_split) \
*(___ksymtab_gpl+bio_trim) \
*(___ksymtab_gpl+bio_uncopy_user) \
*(___ksymtab_gpl+bio_unmap_user) \
*(___ksymtab_gpl+bitmap_alloc) \
*(___ksymtab_gpl+bitmap_allocate_region) \
*(___ksymtab_gpl+__bitmap_and) \
*(___ksymtab_gpl+__bitmap_andnot) \
*(___ksymtab_gpl+bitmap_bitremap) \
*(___ksymtab_gpl+__bitmap_complement) \
*(___ksymtab_gpl+__bitmap_equal) \
*(___ksymtab_gpl+bitmap_find_free_region) \
*(___ksymtab_gpl+bitmap_find_next_zero_area_off) \
*(___ksymtab_gpl+bitmap_fold) \
*(___ksymtab_gpl+bitmap_free) \
*(___ksymtab_gpl+__bitmap_intersects) \
*(___ksymtab_gpl+bitmap_onto) \
*(___ksymtab_gpl+__bitmap_or) \
*(___ksymtab_gpl+__bitmap_parse) \
*(___ksymtab_gpl+bitmap_parselist) \
*(___ksymtab_gpl+bitmap_parselist_user) \
*(___ksymtab_gpl+bitmap_parse_user) \
*(___ksymtab_gpl+bitmap_print_to_pagebuf) \
*(___ksymtab_gpl+bitmap_release_region) \
*(___ksymtab_gpl+bitmap_remap) \
*(___ksymtab_gpl+bitmap_set) \
*(___ksymtab_gpl+__bitmap_shift_right) \
*(___ksymtab_gpl+__bitmap_subset) \
*(___ksymtab_gpl+__bitmap_xor) \
*(___ksymtab_gpl+bitmap_zalloc) \
*(___ksymtab_gpl+blk_abort_request) \
*(___ksymtab_gpl+blk_alloc_queue) \
*(___ksymtab_gpl+blk_alloc_queue_node) \
*(___ksymtab_gpl+blk_check_plugged) \
*(___ksymtab_gpl+blkcipher_aead_walk_virt_block) \
*(___ksymtab_gpl+blkcipher_walk_phys) \
*(___ksymtab_gpl+blkcipher_walk_virt) \
*(___ksymtab_gpl+__blkdev_driver_ioctl) \
*(___ksymtab_gpl+blkdev_fsync) \
*(___ksymtab_gpl+blkdev_get) \
*(___ksymtab_gpl+blkdev_get_by_path) \
*(___ksymtab_gpl+blkdev_ioctl) \
*(___ksymtab_gpl+blkdev_issue_write_same) \
*(___ksymtab_gpl+blkdev_read_iter) \
*(___ksymtab_gpl+__blkdev_reread_part) \
*(___ksymtab_gpl+blkdev_reread_part) \
*(___ksymtab_gpl+blkdev_write_iter) \
*(___ksymtab_gpl+__blk_end_request) \
*(___ksymtab_gpl+blk_end_request) \
*(___ksymtab_gpl+__blk_end_request_cur) \
*(___ksymtab_gpl+blk_end_request_cur) \
*(___ksymtab_gpl+__blk_end_request_err) \
*(___ksymtab_gpl+blk_end_request_err) \
*(___ksymtab_gpl+blk_fetch_request) \
*(___ksymtab_gpl+blk_init_allocated_queue) \
*(___ksymtab_gpl+blk_insert_cloned_request) \
*(___ksymtab_gpl+blk_iopoll_disable) \
*(___ksymtab_gpl+blk_iopoll_enable) \
*(___ksymtab_gpl+blk_iopoll_init) \
*(___ksymtab_gpl+blk_iopoll_sched) \
*(___ksymtab_gpl+blk_limits_io_min) \
*(___ksymtab_gpl+blk_limits_io_opt) \
*(___ksymtab_gpl+blk_lld_busy) \
*(___ksymtab_gpl+blk_make_request) \
*(___ksymtab_gpl+blk_mq_abort_requeue_list) \
*(___ksymtab_gpl+blk_mq_add_to_requeue_list) \
*(___ksymtab_gpl+blk_mq_alloc_request) \
*(___ksymtab_gpl+blk_mq_all_tag_busy_iter) \
*(___ksymtab_gpl+blk_mq_cancel_requeue_work) \
*(___ksymtab_gpl+blk_mq_can_queue) \
*(___ksymtab_gpl+blk_mq_end_request) \
*(___ksymtab_gpl+blk_mq_free_hctx_request) \
*(___ksymtab_gpl+blk_mq_free_request) \
*(___ksymtab_gpl+blk_mq_init_allocated_queue) \
*(___ksymtab_gpl+blk_mq_register_disk) \
*(___ksymtab_gpl+blk_mq_request_started) \
*(___ksymtab_gpl+blk_mq_run_hw_queues) \
*(___ksymtab_gpl+blk_mq_start_hw_queue) \
*(___ksymtab_gpl+blk_mq_tags_cpumask) \
*(___ksymtab_gpl+blk_mq_tag_to_rq) \
*(___ksymtab_gpl+blk_mq_unique_tag) \
*(___ksymtab_gpl+blk_queue_bypass_end) \
*(___ksymtab_gpl+blk_queue_bypass_start) \
*(___ksymtab_gpl+blk_queue_chunk_sectors) \
*(___ksymtab_gpl+blk_queue_dma_drain) \
*(___ksymtab_gpl+blk_queue_dma_pad) \
*(___ksymtab_gpl+blk_queue_end_tag) \
*(___ksymtab_gpl+blk_queue_find_tag) \
*(___ksymtab_gpl+blk_queue_free_tags) \
*(___ksymtab_gpl+blk_queue_invalidate_tags) \
*(___ksymtab_gpl+blk_queue_io_opt) \
*(___ksymtab_gpl+blk_queue_make_request) \
*(___ksymtab_gpl+blk_queue_resize_tags) \
*(___ksymtab_gpl+blk_queue_split) \
*(___ksymtab_gpl+blk_queue_stack_limits) \
*(___ksymtab_gpl+blk_queue_virt_boundary) \
*(___ksymtab_gpl+blk_recount_segments) \
*(___ksymtab_gpl+blk_rq_prep_clone) \
*(___ksymtab_gpl+blk_rq_unprep_clone) \
*(___ksymtab_gpl+blk_set_default_limits) \
*(___ksymtab_gpl+blk_set_queue_dying) \
*(___ksymtab_gpl+blk_set_stacking_limits) \
*(___ksymtab_gpl+blk_stack_limits) \
*(___ksymtab_gpl+blk_sync_queue) \
*(___ksymtab_gpl+blocking_notifier_chain_cond_register) \
*(___ksymtab_gpl+__bpf_call_base) \
*(___ksymtab_gpl+bpf_prog_alloc) \
*(___ksymtab_gpl+bpf_prog_create) \
*(___ksymtab_gpl+bpf_prog_create_from_user) \
*(___ksymtab_gpl+bpf_prog_destroy) \
*(___ksymtab_gpl+__bpf_prog_free) \
*(___ksymtab_gpl+bpf_prog_free) \
*(___ksymtab_gpl+bpf_prog_realloc) \
*(___ksymtab_gpl+bpf_prog_select_runtime) \
*(___ksymtab_gpl+bpf_skb_vlan_pop_proto) \
*(___ksymtab_gpl+bpf_skb_vlan_push_proto) \
*(___ksymtab_gpl+bprm_change_interp) \
*(___ksymtab_gpl+br_deliver) \
*(___ksymtab_gpl+br_dev_queue_push_xmit) \
*(___ksymtab_gpl+br_forward_finish) \
*(___ksymtab_gpl+br_handle_frame_finish) \
*(___ksymtab_gpl+brioctl_set) \
*(___ksymtab_gpl+br_multicast_has_querier_adjacent) \
*(___ksymtab_gpl+br_multicast_has_querier_anywhere) \
*(___ksymtab_gpl+br_multicast_list_adjacent) \
*(___ksymtab_gpl+brnf_call_emf) \
*(___ksymtab_gpl+broadcast_uevent) \
*(___ksymtab_gpl+__bswapdi2) \
*(___ksymtab_gpl+__bswapsi2) \
*(___ksymtab_gpl+buffer_check_dirty_writeback) \
*(___ksymtab_gpl+build_skb) \
*(___ksymtab_gpl+bus_create_file) \
*(___ksymtab_gpl+bus_for_each_drv) \
*(___ksymtab_gpl+bus_get_kset) \
*(___ksymtab_gpl+bus_remove_file) \
*(___ksymtab_gpl+bus_rescan_devices) \
*(___ksymtab_gpl+cacheid) \
*(___ksymtab_gpl+cad_pid) \
*(___ksymtab_gpl+call_rcu_bh) \
*(___ksymtab_gpl+call_srcu) \
*(___ksymtab_gpl+call_usermodehelper) \
*(___ksymtab_gpl+call_usermodehelper_exec) \
*(___ksymtab_gpl+cancel_dirty_page) \
*(___ksymtab_gpl+can_do_mlock) \
*(___ksymtab_gpl+can_nice) \
*(___ksymtab_gpl+__cap_empty_set) \
*(___ksymtab_gpl+cbuck2vreg_tbl) \
*(___ksymtab_gpl+cdev_set_parent) \
*(___ksymtab_gpl+cfi_build_cmd) \
*(___ksymtab_gpl+cfi_build_cmd_addr) \
*(___ksymtab_gpl+cfi_cmdset_0001) \
*(___ksymtab_gpl+cfi_cmdset_0002) \
*(___ksymtab_gpl+cfi_cmdset_0003) \
*(___ksymtab_gpl+cfi_cmdset_0006) \
*(___ksymtab_gpl+cfi_cmdset_0200) \
*(___ksymtab_gpl+cfi_cmdset_0701) \
*(___ksymtab_gpl+cfi_merge_status) \
*(___ksymtab_gpl+cfi_qry_mode_off) \
*(___ksymtab_gpl+cfi_qry_mode_on) \
*(___ksymtab_gpl+cfi_qry_present) \
*(___ksymtab_gpl+cfi_read_pri) \
*(___ksymtab_gpl+cfi_send_gen_cmd) \
*(___ksymtab_gpl+cfi_udelay) \
*(___ksymtab_gpl+cfi_varsize_frob) \
*(___ksymtab_gpl+_change_bit) \
*(___ksymtab_gpl+check_disk_size_change) \
*(___ksymtab_gpl+__check_sticky) \
*(___ksymtab_gpl+check_syslog_permissions) \
*(___ksymtab_gpl+class_compat_create_link) \
*(___ksymtab_gpl+class_compat_register) \
*(___ksymtab_gpl+class_compat_remove_link) \
*(___ksymtab_gpl+class_compat_unregister) \
*(___ksymtab_gpl+class_create_file_ns) \
*(___ksymtab_gpl+class_dev_iter_exit) \
*(___ksymtab_gpl+class_dev_iter_init) \
*(___ksymtab_gpl+class_dev_iter_next) \
*(___ksymtab_gpl+class_for_each_device) \
*(___ksymtab_gpl+class_remove_file_ns) \
*(___ksymtab_gpl+clk_add_alias) \
*(___ksymtab_gpl+clkdev_add) \
*(___ksymtab_gpl+clkdev_alloc) \
*(___ksymtab_gpl+clkdev_create) \
*(___ksymtab_gpl+clkdev_drop) \
*(___ksymtab_gpl+clk_get) \
*(___ksymtab_gpl+clk_round_rate) \
*(___ksymtab_gpl+clk_set_rate) \
*(___ksymtab_gpl+clockevent_delta2ns) \
*(___ksymtab_gpl+clockevents_config_and_register) \
*(___ksymtab_gpl+clockevents_register_device) \
*(___ksymtab_gpl+clockevents_unbind_device) \
*(___ksymtab_gpl+clocksource_change_rating) \
*(___ksymtab_gpl+__clocksource_register_scale) \
*(___ksymtab_gpl+clocksource_unregister) \
*(___ksymtab_gpl+clone_private_mount) \
*(___ksymtab_gpl+__clzdi2) \
*(___ksymtab_gpl+__clzsi2) \
*(___ksymtab_gpl+coherence_flag) \
*(___ksymtab_gpl+coherence_win_sz) \
*(___ksymtab_gpl+commit_creds) \
*(___ksymtab_gpl+__compat_only_sysfs_link_entry_to_kobj) \
*(___ksymtab_gpl+completion_done) \
*(___ksymtab_gpl+component_add) \
*(___ksymtab_gpl+component_bind_all) \
*(___ksymtab_gpl+component_del) \
*(___ksymtab_gpl+component_master_add) \
*(___ksymtab_gpl+component_master_add_child) \
*(___ksymtab_gpl+component_master_add_with_match) \
*(___ksymtab_gpl+component_master_del) \
*(___ksymtab_gpl+component_match_add) \
*(___ksymtab_gpl+component_unbind_all) \
*(___ksymtab_gpl+cond_synchronize_rcu) \
*(___ksymtab_gpl+console_drivers) \
*(___ksymtab_gpl+console_lock) \
*(___ksymtab_gpl+console_set_on_cmdline) \
*(___ksymtab_gpl+console_start) \
*(___ksymtab_gpl+console_stop) \
*(___ksymtab_gpl+console_suspend_enabled) \
*(___ksymtab_gpl+console_trylock) \
*(___ksymtab_gpl+console_unlock) \
*(___ksymtab_gpl+__cookie_v4_check) \
*(___ksymtab_gpl+__cookie_v4_init_sequence) \
*(___ksymtab_gpl+copy_strings_kernel) \
*(___ksymtab_gpl+cpu_active_mask) \
*(___ksymtab_gpl+cpu_all_bits) \
*(___ksymtab_gpl+cpu_bit_bitmap) \
*(___ksymtab_gpl+cpu_clock) \
*(___ksymtab_gpl+cpu_is_hotpluggable) \
*(___ksymtab_gpl+cpumask_local_spread) \
*(___ksymtab_gpl+cpumask_next_and) \
*(___ksymtab_gpl+cpumask_next_wrap) \
*(___ksymtab_gpl+cpu_present_mask) \
*(___ksymtab_gpl+cpu_rmap_add) \
*(___ksymtab_gpl+cpu_rmap_put) \
*(___ksymtab_gpl+cpu_subsys) \
*(___ksymtab_gpl+cpu_tlb) \
*(___ksymtab_gpl+cpu_topology) \
*(___ksymtab_gpl+cpu_user) \
*(___ksymtab_gpl+crc_ccitt) \
*(___ksymtab_gpl+crc_ccitt_table) \
*(___ksymtab_gpl+crypto_aes_expand_key) \
*(___ksymtab_gpl+crypto_aes_set_key) \
*(___ksymtab_gpl+crypto_ahash_final) \
*(___ksymtab_gpl+crypto_ahash_walk_first) \
*(___ksymtab_gpl+crypto_alg_extsize) \
*(___ksymtab_gpl+crypto_alg_list) \
*(___ksymtab_gpl+crypto_alg_sem) \
*(___ksymtab_gpl+crypto_alg_tested) \
*(___ksymtab_gpl+crypto_alloc_ablkcipher) \
*(___ksymtab_gpl+crypto_alloc_akcipher) \
*(___ksymtab_gpl+crypto_alloc_pcomp) \
*(___ksymtab_gpl+crypto_alloc_skcipher) \
*(___ksymtab_gpl+__crypto_alloc_tfm) \
*(___ksymtab_gpl+crypto_alloc_tfm) \
*(___ksymtab_gpl+crypto_attr_u32) \
*(___ksymtab_gpl+crypto_chain) \
*(___ksymtab_gpl+crypto_create_tfm) \
*(___ksymtab_gpl+crypto_del_default_rng) \
*(___ksymtab_gpl+crypto_dequeue_request) \
*(___ksymtab_gpl+crypto_enqueue_request) \
*(___ksymtab_gpl+crypto_fl_tab) \
*(___ksymtab_gpl+crypto_ft_tab) \
*(___ksymtab_gpl+crypto_givcipher_type) \
*(___ksymtab_gpl+crypto_grab_spawn) \
*(___ksymtab_gpl+crypto_hash_alg_has_setkey) \
*(___ksymtab_gpl+crypto_hash_walk_done) \
*(___ksymtab_gpl+crypto_hash_walk_first) \
*(___ksymtab_gpl+crypto_il_tab) \
*(___ksymtab_gpl+crypto_init_queue) \
*(___ksymtab_gpl+crypto_init_shash_spawn) \
*(___ksymtab_gpl+crypto_it_tab) \
*(___ksymtab_gpl+crypto_larval_alloc) \
*(___ksymtab_gpl+crypto_larval_kill) \
*(___ksymtab_gpl+crypto_mod_get) \
*(___ksymtab_gpl+crypto_probing_notify) \
*(___ksymtab_gpl+crypto_register_aead) \
*(___ksymtab_gpl+crypto_register_aeads) \
*(___ksymtab_gpl+crypto_register_ahash) \
*(___ksymtab_gpl+crypto_register_akcipher) \
*(___ksymtab_gpl+crypto_register_notifier) \
*(___ksymtab_gpl+crypto_register_pcomp) \
*(___ksymtab_gpl+crypto_remove_final) \
*(___ksymtab_gpl+crypto_remove_spawns) \
*(___ksymtab_gpl+crypto_rng_reset) \
*(___ksymtab_gpl+crypto_shash_digest) \
*(___ksymtab_gpl+crypto_tfm_in_queue) \
*(___ksymtab_gpl+crypto_unregister_aead) \
*(___ksymtab_gpl+crypto_unregister_aeads) \
*(___ksymtab_gpl+crypto_unregister_ahash) \
*(___ksymtab_gpl+crypto_unregister_akcipher) \
*(___ksymtab_gpl+crypto_unregister_instance) \
*(___ksymtab_gpl+crypto_unregister_notifier) \
*(___ksymtab_gpl+crypto_unregister_pcomp) \
*(___ksymtab_gpl+__ctzdi2) \
*(___ksymtab_gpl+__ctzsi2) \
*(___ksymtab_gpl+current_work) \
*(___ksymtab_gpl+d_add_ci) \
*(___ksymtab_gpl+dbushost_initvars_flash) \
*(___ksymtab_gpl+dcache_dir_close) \
*(___ksymtab_gpl+dcache_dir_lseek) \
*(___ksymtab_gpl+dcache_dir_open) \
*(___ksymtab_gpl+dcache_readdir) \
*(___ksymtab_gpl+ddr_phys_offset2_va) \
*(___ksymtab_gpl+ddr_phys_offset_va) \
*(___ksymtab_gpl+debugfs_create_atomic_t) \
*(___ksymtab_gpl+debugfs_create_automount) \
*(___ksymtab_gpl+debugfs_create_blob) \
*(___ksymtab_gpl+debugfs_create_devm_seqfile) \
*(___ksymtab_gpl+debugfs_create_regset32) \
*(___ksymtab_gpl+debugfs_create_size_t) \
*(___ksymtab_gpl+debugfs_create_symlink) \
*(___ksymtab_gpl+debugfs_create_u16) \
*(___ksymtab_gpl+debugfs_create_u32) \
*(___ksymtab_gpl+debugfs_create_u32_array) \
*(___ksymtab_gpl+debugfs_create_u64) \
*(___ksymtab_gpl+debugfs_create_u8) \
*(___ksymtab_gpl+debugfs_create_ulong) \
*(___ksymtab_gpl+debugfs_create_x16) \
*(___ksymtab_gpl+debugfs_create_x32) \
*(___ksymtab_gpl+debugfs_create_x64) \
*(___ksymtab_gpl+debugfs_create_x8) \
*(___ksymtab_gpl+debugfs_initialized) \
*(___ksymtab_gpl+debugfs_print_regs32) \
*(___ksymtab_gpl+debug_locks) \
*(___ksymtab_gpl+debug_locks_off) \
*(___ksymtab_gpl+debug_locks_silent) \
*(___ksymtab_gpl+default_file_splice_read) \
*(___ksymtab_gpl+default_qdisc_ops) \
*(___ksymtab_gpl+delete_from_page_cache) \
*(___ksymtab_gpl+del_mtd_blktrans_dev) \
*(___ksymtab_gpl+dentry_needs_remove_privs) \
*(___ksymtab_gpl+dentry_open) \
*(___ksymtab_gpl+dentry_path_raw) \
*(___ksymtab_gpl+deregister_mtd_blktrans) \
*(___ksymtab_gpl+deregister_mtd_parser) \
*(___ksymtab_gpl+__destroy_inode) \
*(___ksymtab_gpl+dev_activate) \
*(___ksymtab_gpl+dev_add_offload) \
*(___ksymtab_gpl+dev_addr_add) \
*(___ksymtab_gpl+dev_addr_del) \
*(___ksymtab_gpl+dev_addr_flush) \
*(___ksymtab_gpl+dev_addr_init) \
*(___ksymtab_gpl+dev_alert) \
*(___ksymtab_gpl+dev_base_lock) \
*(___ksymtab_gpl+dev_change_carrier) \
*(___ksymtab_gpl+dev_change_flags) \
*(___ksymtab_gpl+dev_change_net_namespace) \
*(___ksymtab_gpl+dev_deactivate) \
*(___ksymtab_gpl+dev_driver_string) \
*(___ksymtab_gpl+dev_emerg) \
*(___ksymtab_gpl+dev_fill_metadata_dst) \
*(___ksymtab_gpl+dev_getbyhwaddr_rcu) \
*(___ksymtab_gpl+__dev_getfirstbyhwtype) \
*(___ksymtab_gpl+dev_getfirstbyhwtype) \
*(___ksymtab_gpl+dev_get_nest_level) \
*(___ksymtab_gpl+dev_get_phys_port_id) \
*(___ksymtab_gpl+dev_get_phys_port_name) \
*(___ksymtab_gpl+dev_graft_qdisc) \
*(___ksymtab_gpl+device_find_child) \
*(___ksymtab_gpl+device_get_child_node_count) \
*(___ksymtab_gpl+device_get_dma_attr) \
*(___ksymtab_gpl+device_get_mac_address) \
*(___ksymtab_gpl+device_get_next_child_node) \
*(___ksymtab_gpl+device_get_phy_mode) \
*(___ksymtab_gpl+device_move) \
*(___ksymtab_gpl+device_property_match_string) \
*(___ksymtab_gpl+device_property_present) \
*(___ksymtab_gpl+device_property_read_u16_array) \
*(___ksymtab_gpl+device_property_read_u32_array) \
*(___ksymtab_gpl+device_property_read_u64_array) \
*(___ksymtab_gpl+device_property_read_u8_array) \
*(___ksymtab_gpl+device_rename) \
*(___ksymtab_gpl+device_reprobe) \
*(___ksymtab_gpl+device_show_bool) \
*(___ksymtab_gpl+device_show_int) \
*(___ksymtab_gpl+device_show_ulong) \
*(___ksymtab_gpl+device_store_bool) \
*(___ksymtab_gpl+device_store_int) \
*(___ksymtab_gpl+device_store_ulong) \
*(___ksymtab_gpl+dev_load) \
*(___ksymtab_gpl+devm_add_action) \
*(___ksymtab_gpl+dev_mc_init) \
*(___ksymtab_gpl+devm_gen_pool_create) \
*(___ksymtab_gpl+devm_hwrng_register) \
*(___ksymtab_gpl+devm_hwrng_unregister) \
*(___ksymtab_gpl+devm_input_allocate_device) \
*(___ksymtab_gpl+devm_ioport_map) \
*(___ksymtab_gpl+devm_ioport_unmap) \
*(___ksymtab_gpl+devm_mdiobus_alloc_size) \
*(___ksymtab_gpl+devm_mdiobus_free) \
*(___ksymtab_gpl+devm_memremap) \
*(___ksymtab_gpl+devm_memunmap) \
*(___ksymtab_gpl+__devm_of_phy_provider_register) \
*(___ksymtab_gpl+devm_of_phy_provider_unregister) \
*(___ksymtab_gpl+devm_phy_create) \
*(___ksymtab_gpl+devm_phy_destroy) \
*(___ksymtab_gpl+devm_phy_optional_get) \
*(___ksymtab_gpl+__devm_release_region) \
*(___ksymtab_gpl+devm_release_resource) \
*(___ksymtab_gpl+devm_remove_action) \
*(___ksymtab_gpl+devm_request_any_context_irq) \
*(___ksymtab_gpl+__devm_request_region) \
*(___ksymtab_gpl+devm_request_resource) \
*(___ksymtab_gpl+dev_remove_offload) \
*(___ksymtab_gpl+devres_destroy) \
*(___ksymtab_gpl+devres_for_each_res) \
*(___ksymtab_gpl+devres_get) \
*(___ksymtab_gpl+devres_release) \
*(___ksymtab_gpl+devres_remove) \
*(___ksymtab_gpl+dev_uc_add) \
*(___ksymtab_gpl+dev_uc_add_excl) \
*(___ksymtab_gpl+dev_uc_del) \
*(___ksymtab_gpl+dev_uc_init) \
*(___ksymtab_gpl+d_genocide) \
*(___ksymtab_gpl+dio_end_io) \
*(___ksymtab_gpl+disable_hardirq) \
*(___ksymtab_gpl+disable_irq) \
*(___ksymtab_gpl+disable_irq_nosync) \
*(___ksymtab_gpl+disable_percpu_irq) \
*(___ksymtab_gpl+disk_get_part) \
*(___ksymtab_gpl+disk_map_sector_rcu) \
*(___ksymtab_gpl+disk_part_iter_exit) \
*(___ksymtab_gpl+disk_part_iter_init) \
*(___ksymtab_gpl+disk_part_iter_next) \
*(___ksymtab_gpl+disk_stack_limits) \
*(___ksymtab_gpl+__div0) \
*(___ksymtab_gpl+__div64_32) \
*(___ksymtab_gpl+div64_s64) \
*(___ksymtab_gpl+div_s64_rem) \
*(___ksymtab_gpl+__divsi3) \
*(___ksymtab_gpl+dlci_ioctl_set) \
*(___ksymtab_gpl+dll_pool_alloc) \
*(___ksymtab_gpl+dll_pool_detach) \
*(___ksymtab_gpl+dll_pool_free) \
*(___ksymtab_gpl+dll_pool_free_tail) \
*(___ksymtab_gpl+dll_pool_init) \
*(___ksymtab_gpl+dma64proc) \
*(___ksymtab_gpl+dma_common_get_sgtable) \
*(___ksymtab_gpl+dma_common_mmap) \
*(___ksymtab_gpl+dma_declare_coherent_memory) \
*(___ksymtab_gpl+dma_get_required_mask) \
*(___ksymtab_gpl+dma_link_handle) \
*(___ksymtab_gpl+dmam_alloc_coherent) \
*(___ksymtab_gpl+dmam_alloc_noncoherent) \
*(___ksymtab_gpl+dmam_declare_coherent_memory) \
*(___ksymtab_gpl+dmam_free_coherent) \
*(___ksymtab_gpl+dmam_free_noncoherent) \
*(___ksymtab_gpl+dma_mmap_from_coherent) \
*(___ksymtab_gpl+dmam_pool_create) \
*(___ksymtab_gpl+dmam_pool_destroy) \
*(___ksymtab_gpl+dmam_release_declared_memory) \
*(___ksymtab_gpl+dma_msgbuf_txfast) \
*(___ksymtab_gpl+dma_release_declared_memory) \
*(___ksymtab_gpl+dma_rxfast) \
*(___ksymtab_gpl+dma_rxfill_suspend) \
*(___ksymtab_gpl+dma_rxfill_unframed) \
*(___ksymtab_gpl+dma_txp) \
*(___ksymtab_gpl+dma_txpioloopback) \
*(___ksymtab_gpl+dma_txrewind) \
*(___ksymtab_gpl+d_obtain_root) \
*(___ksymtab_gpl+do_exit) \
*(___ksymtab_gpl+do_gettimeofday) \
*(___ksymtab_gpl+do_map_probe) \
*(___ksymtab_gpl+done_path_create) \
*(___ksymtab_gpl+do_SAK) \
*(___ksymtab_gpl+do_settimeofday64) \
*(___ksymtab_gpl+do_splice_direct) \
*(___ksymtab_gpl+do_trace_rcu_torture_read) \
*(___ksymtab_gpl+d_prune_aliases) \
*(___ksymtab_gpl+dql_init) \
*(___ksymtab_gpl+dql_reset) \
*(___ksymtab_gpl+drain_workqueue) \
*(___ksymtab_gpl+driver_find) \
*(___ksymtab_gpl+driver_find_device) \
*(___ksymtab_gpl+driver_for_each_device) \
*(___ksymtab_gpl+d_set_d_op) \
*(___ksymtab_gpl+d_set_fallthru) \
*(___ksymtab_gpl+dst_init) \
*(___ksymtab_gpl+dummy_irq_chip) \
*(___ksymtab_gpl+dump_fpu) \
*(___ksymtab_gpl+dump_page) \
*(___ksymtab_gpl+each_symbol_section) \
*(___ksymtab_gpl+elevator_alloc) \
*(___ksymtab_gpl+elevator_change) \
*(___ksymtab_gpl+elevator_exit) \
*(___ksymtab_gpl+elevator_init) \
*(___ksymtab_gpl+elf_check_arch) \
*(___ksymtab_gpl+elf_hwcap) \
*(___ksymtab_gpl+elf_hwcap2) \
*(___ksymtab_gpl+elf_platform) \
*(___ksymtab_gpl+elf_set_personality) \
*(___ksymtab_gpl+__elv_add_request) \
*(___ksymtab_gpl+elv_add_request) \
*(___ksymtab_gpl+elv_dispatch_add_tail) \
*(___ksymtab_gpl+elv_rb_add) \
*(___ksymtab_gpl+elv_rb_del) \
*(___ksymtab_gpl+elv_rb_find) \
*(___ksymtab_gpl+elv_rb_former_request) \
*(___ksymtab_gpl+elv_rb_latter_request) \
*(___ksymtab_gpl+elv_register) \
*(___ksymtab_gpl+elv_register_queue) \
*(___ksymtab_gpl+elv_rq_merge_ok) \
*(___ksymtab_gpl+elv_unregister) \
*(___ksymtab_gpl+elv_unregister_queue) \
*(___ksymtab_gpl+empty_aops) \
*(___ksymtab_gpl+empty_zero_page) \
*(___ksymtab_gpl+enable_irq) \
*(___ksymtab_gpl+enable_percpu_irq) \
*(___ksymtab_gpl+end_buffer_async_write) \
*(___ksymtab_gpl+eth_change_mtu) \
*(___ksymtab_gpl+eth_get_headlen) \
*(___ksymtab_gpl+eth_gro_receive) \
*(___ksymtab_gpl+eventfd_ctx_fdget) \
*(___ksymtab_gpl+eventfd_ctx_fileget) \
*(___ksymtab_gpl+eventfd_ctx_get) \
*(___ksymtab_gpl+eventfd_ctx_put) \
*(___ksymtab_gpl+eventfd_ctx_read) \
*(___ksymtab_gpl+eventfd_signal) \
*(___ksymtab_gpl+expand_files) \
*(___ksymtab_gpl+fanout_mutex) \
*(___ksymtab_gpl+fb_notifier_call_chain) \
*(___ksymtab_gpl+fb_register_client) \
*(___ksymtab_gpl+fb_unregister_client) \
*(___ksymtab_gpl+fd_install) \
*(___ksymtab_gpl+fib_select_path) \
*(___ksymtab_gpl+fifo_create_dflt) \
*(___ksymtab_gpl+fifo_set_limit) \
*(___ksymtab_gpl+filemap_page_mkwrite) \
*(___ksymtab_gpl+file_open_root) \
*(___ksymtab_gpl+file_ra_state_init) \
*(___ksymtab_gpl+find_extend_vma) \
*(___ksymtab_gpl+find_get_entry) \
*(___ksymtab_gpl+find_get_pages_contig) \
*(___ksymtab_gpl+find_get_pid) \
*(___ksymtab_gpl+find_last_bit) \
*(___ksymtab_gpl+find_lock_entry) \
*(___ksymtab_gpl+find_module) \
*(___ksymtab_gpl+find_pid_ns) \
*(___ksymtab_gpl+find_symbol) \
*(___ksymtab_gpl+find_task_by_vpid) \
*(___ksymtab_gpl+find_vma) \
*(___ksymtab_gpl+find_vpid) \
*(___ksymtab_gpl+firmware_kobj) \
*(___ksymtab_gpl+fixed_size_llseek) \
*(___ksymtab_gpl+flex_array_alloc) \
*(___ksymtab_gpl+flex_array_clear) \
*(___ksymtab_gpl+flex_array_free) \
*(___ksymtab_gpl+flex_array_free_parts) \
*(___ksymtab_gpl+flex_array_get) \
*(___ksymtab_gpl+flex_array_get_ptr) \
*(___ksymtab_gpl+flex_array_prealloc) \
*(___ksymtab_gpl+flex_array_put) \
*(___ksymtab_gpl+flex_array_shrink) \
*(___ksymtab_gpl+flow_cache_fini) \
*(___ksymtab_gpl+flow_cache_init) \
*(___ksymtab_gpl+flow_hash_from_keys) \
*(___ksymtab_gpl+flush_kernel_dcache_page) \
*(___ksymtab_gpl+flush_kthread_work) \
*(___ksymtab_gpl+flush_kthread_worker) \
*(___ksymtab_gpl+flush_old_exec) \
*(___ksymtab_gpl+flush_signals) \
*(___ksymtab_gpl+follow_pfn) \
*(___ksymtab_gpl+force_sig) \
*(___ksymtab_gpl+forget_all_cached_acls) \
*(___ksymtab_gpl+forget_cached_acl) \
*(___ksymtab_gpl+free_anon_bdev) \
*(___ksymtab_gpl+free_inode_nonrcu) \
*(___ksymtab_gpl+__free_page_frag) \
*(___ksymtab_gpl+free_reserved_area) \
*(___ksymtab_gpl+free_task) \
*(___ksymtab_gpl+free_vm_area) \
*(___ksymtab_gpl+freeze_bdev) \
*(___ksymtab_gpl+f_setown) \
*(___ksymtab_gpl+fsl8250_handle_irq) \
*(___ksymtab_gpl+fsstack_copy_attr_all) \
*(___ksymtab_gpl+fsstack_copy_inode_size) \
*(___ksymtab_gpl+fsync_bdev) \
*(___ksymtab_gpl+fwnode_handle_put) \
*(___ksymtab_gpl+fwnode_property_match_string) \
*(___ksymtab_gpl+fwnode_property_present) \
*(___ksymtab_gpl+fwnode_property_read_string) \
*(___ksymtab_gpl+fwnode_property_read_string_array) \
*(___ksymtab_gpl+fwnode_property_read_u16_array) \
*(___ksymtab_gpl+fwnode_property_read_u32_array) \
*(___ksymtab_gpl+fwnode_property_read_u64_array) \
*(___ksymtab_gpl+fwnode_property_read_u8_array) \
*(___ksymtab_gpl+generic_end_io_acct) \
*(___ksymtab_gpl+generic_handle_irq) \
*(___ksymtab_gpl+generic_listxattr) \
*(___ksymtab_gpl+generic_make_request) \
*(___ksymtab_gpl+generic_mii_ioctl) \
*(___ksymtab_gpl+generic_perform_write) \
*(___ksymtab_gpl+generic_pipe_buf_confirm) \
*(___ksymtab_gpl+generic_pipe_buf_get) \
*(___ksymtab_gpl+generic_pipe_buf_release) \
*(___ksymtab_gpl+generic_pipe_buf_steal) \
*(___ksymtab_gpl+generic_splice_sendpage) \
*(___ksymtab_gpl+generic_start_io_acct) \
*(___ksymtab_gpl+gen_estimator_active) \
*(___ksymtab_gpl+gen_kill_estimator) \
*(___ksymtab_gpl+genlmsg_new_unicast) \
*(___ksymtab_gpl+genl_notify) \
*(___ksymtab_gpl+gen_new_estimator) \
*(___ksymtab_gpl+genphy_aneg_done) \
*(___ksymtab_gpl+genphy_config_init) \
*(___ksymtab_gpl+genphy_restart_aneg) \
*(___ksymtab_gpl+genphy_soft_reset) \
*(___ksymtab_gpl+gen_pool_add_virt) \
*(___ksymtab_gpl+gen_pool_alloc) \
*(___ksymtab_gpl+gen_pool_avail) \
*(___ksymtab_gpl+gen_pool_best_fit) \
*(___ksymtab_gpl+gen_pool_create) \
*(___ksymtab_gpl+gen_pool_destroy) \
*(___ksymtab_gpl+gen_pool_dma_alloc) \
*(___ksymtab_gpl+gen_pool_first_fit) \
*(___ksymtab_gpl+gen_pool_first_fit_order_align) \
*(___ksymtab_gpl+gen_pool_for_each_chunk) \
*(___ksymtab_gpl+gen_pool_free) \
*(___ksymtab_gpl+gen_pool_get) \
*(___ksymtab_gpl+gen_pool_set_algo) \
*(___ksymtab_gpl+gen_pool_size) \
*(___ksymtab_gpl+gen_pool_virt_to_phys) \
*(___ksymtab_gpl+gen_replace_estimator) \
*(___ksymtab_gpl+get_acl) \
*(___ksymtab_gpl+get_anon_bdev) \
*(___ksymtab_gpl+__getblk_slow) \
*(___ksymtab_gpl+getboottime64) \
*(___ksymtab_gpl+get_cached_acl) \
*(___ksymtab_gpl+get_cached_acl_rcu) \
*(___ksymtab_gpl+get_cpu_device) \
*(___ksymtab_gpl+get_current_tty) \
*(___ksymtab_gpl+get_disk) \
*(___ksymtab_gpl+get_fs_type) \
*(___ksymtab_gpl+get_gendisk) \
*(___ksymtab_gpl+__get_hash_from_flowi4) \
*(___ksymtab_gpl+get_io_context) \
*(___ksymtab_gpl+get_kernel_page) \
*(___ksymtab_gpl+get_kernel_pages) \
*(___ksymtab_gpl+get_max_files) \
*(___ksymtab_gpl+get_mem_type) \
*(___ksymtab_gpl+get_mm_exe_file) \
*(___ksymtab_gpl+__get_mtd_device) \
*(___ksymtab_gpl+get_mtd_device) \
*(___ksymtab_gpl+get_mtd_device_nm) \
*(___ksymtab_gpl+get_net_ns_by_fd) \
*(___ksymtab_gpl+get_net_ns_by_pid) \
*(___ksymtab_gpl+get_option) \
*(___ksymtab_gpl+get_options) \
*(___ksymtab_gpl+get_phy_device) \
*(___ksymtab_gpl+get_phy_id) \
*(___ksymtab_gpl+get_pid_task) \
*(___ksymtab_gpl+get_pktpools_registry) \
*(___ksymtab_gpl+get_random_int) \
*(___ksymtab_gpl+get_random_long) \
*(___ksymtab_gpl+getrawmonotonic64) \
*(___ksymtab_gpl+get_state_synchronize_rcu) \
*(___ksymtab_gpl+__get_task_comm) \
*(___ksymtab_gpl+get_task_exe_file) \
*(___ksymtab_gpl+get_task_io_context) \
*(___ksymtab_gpl+get_task_mm) \
*(___ksymtab_gpl+get_unmapped_area) \
*(___ksymtab_gpl+get_unused_fd_flags) \
*(___ksymtab_gpl+__get_user_2) \
*(___ksymtab_gpl+__get_user_8) \
*(___ksymtab_gpl+__get_user_pages) \
*(___ksymtab_gpl+get_user_pages) \
*(___ksymtab_gpl+__get_user_pages_fast) \
*(___ksymtab_gpl+get_user_pages_fast) \
*(___ksymtab_gpl+get_user_pages_locked) \
*(___ksymtab_gpl+__get_user_pages_unlocked) \
*(___ksymtab_gpl+get_user_pages_unlocked) \
*(___ksymtab_gpl+__get_vm_area) \
*(___ksymtab_gpl+get_vm_area) \
*(___ksymtab_gpl+__gnet_stats_copy_basic) \
*(___ksymtab_gpl+gnet_stats_copy_basic) \
*(___ksymtab_gpl+gnet_stats_copy_queue) \
*(___ksymtab_gpl+gnet_stats_copy_rate_est) \
*(___ksymtab_gpl+gnet_stats_finish_copy) \
*(___ksymtab_gpl+gnet_stats_start_copy) \
*(___ksymtab_gpl+gnet_stats_start_copy_compat) \
*(___ksymtab_gpl+gro_find_receive_by_type) \
*(___ksymtab_gpl+g_rxcplid_list) \
*(___ksymtab_gpl+g_si_pmutmr_lock_arg) \
*(___ksymtab_gpl+g_si_pmutmr_lock_cb) \
*(___ksymtab_gpl+g_si_pmutmr_unlock_cb) \
*(___ksymtab_gpl+handle_bad_irq) \
*(___ksymtab_gpl+handle_edge_irq) \
*(___ksymtab_gpl+handle_fasteoi_irq) \
*(___ksymtab_gpl+handle_level_irq) \
*(___ksymtab_gpl+handle_mm_fault) \
*(___ksymtab_gpl+handle_nested_irq) \
*(___ksymtab_gpl+handle_simple_irq) \
*(___ksymtab_gpl+have_submounts) \
*(___ksymtab_gpl+hex_to_bin) \
*(___ksymtab_gpl+hndcrc8) \
*(___ksymtab_gpl+hrtimer_forward) \
*(___ksymtab_gpl+__hrtimer_get_remaining) \
*(___ksymtab_gpl+hrtimer_resolution) \
*(___ksymtab_gpl+hrtimer_try_to_cancel) \
*(___ksymtab_gpl+hsiphash_2u32) \
*(___ksymtab_gpl+hsiphash_3u32) \
*(___ksymtab_gpl+hsiphash_4u32) \
*(___ksymtab_gpl+__hsiphash_aligned) \
*(___ksymtab_gpl+__hw_addr_init) \
*(___ksymtab_gpl+__hw_addr_sync) \
*(___ksymtab_gpl+__hw_addr_sync_dev) \
*(___ksymtab_gpl+__hw_addr_unsync) \
*(___ksymtab_gpl+__hw_addr_unsync_dev) \
*(___ksymtab_gpl+hwrng_register) \
*(___ksymtab_gpl+hwrng_unregister) \
*(___ksymtab_gpl+HX_memmem) \
*(___ksymtab_gpl+i2c_adapter_type) \
*(___ksymtab_gpl+__i2c_board_list) \
*(___ksymtab_gpl+__i2c_board_lock) \
*(___ksymtab_gpl+i2c_bus_type) \
*(___ksymtab_gpl+i2c_clients_command) \
*(___ksymtab_gpl+i2c_del_driver) \
*(___ksymtab_gpl+__i2c_first_dynamic_bus_num) \
*(___ksymtab_gpl+i2c_for_each_dev) \
*(___ksymtab_gpl+i2c_generic_gpio_recovery) \
*(___ksymtab_gpl+i2c_generic_scl_recovery) \
*(___ksymtab_gpl+i2c_get_adapter) \
*(___ksymtab_gpl+i2c_master_recv) \
*(___ksymtab_gpl+i2c_new_device) \
*(___ksymtab_gpl+i2c_new_dummy) \
*(___ksymtab_gpl+i2c_new_probed_device) \
*(___ksymtab_gpl+i2c_probe_func_quick_read) \
*(___ksymtab_gpl+i2c_put_adapter) \
*(___ksymtab_gpl+i2c_recover_bus) \
*(___ksymtab_gpl+i2c_register_driver) \
*(___ksymtab_gpl+i2c_release_client) \
*(___ksymtab_gpl+i2c_smbus_read_block_data) \
*(___ksymtab_gpl+i2c_smbus_read_byte) \
*(___ksymtab_gpl+i2c_smbus_write_block_data) \
*(___ksymtab_gpl+i2c_smbus_write_byte) \
*(___ksymtab_gpl+i2c_smbus_xfer) \
*(___ksymtab_gpl+i2c_unregister_device) \
*(___ksymtab_gpl+i2c_use_client) \
*(___ksymtab_gpl+i2c_verify_adapter) \
*(___ksymtab_gpl+i2c_verify_client) \
*(___ksymtab_gpl+icmp_err_convert) \
*(___ksymtab_gpl+id16_map_alloc) \
*(___ksymtab_gpl+id16_map_audit) \
*(___ksymtab_gpl+id16_map_failures) \
*(___ksymtab_gpl+id16_map_fini) \
*(___ksymtab_gpl+id16_map_free) \
*(___ksymtab_gpl+id16_map_init) \
*(___ksymtab_gpl+ida_destroy) \
*(___ksymtab_gpl+ida_init) \
*(___ksymtab_gpl+ida_simple_get) \
*(___ksymtab_gpl+ida_simple_remove) \
*(___ksymtab_gpl+idr_get_next) \
*(___ksymtab_gpl+idr_init) \
*(___ksymtab_gpl+idr_is_empty) \
*(___ksymtab_gpl+idr_replace) \
*(___ksymtab_gpl+in_aton) \
*(___ksymtab_gpl+in_dev_finish_destroy) \
*(___ksymtab_gpl+inet6_add_offload) \
*(___ksymtab_gpl+inet6_del_offload) \
*(___ksymtab_gpl+inet_add_offload) \
*(___ksymtab_gpl+inet_csk_addr2sockaddr) \
*(___ksymtab_gpl+inet_csk_bind_conflict) \
*(___ksymtab_gpl+inet_csk_clear_xmit_timers) \
*(___ksymtab_gpl+inet_csk_clone_lock) \
*(___ksymtab_gpl+inet_csk_delete_keepalive_timer) \
*(___ksymtab_gpl+inet_csk_destroy_sock) \
*(___ksymtab_gpl+inet_csk_init_xmit_timers) \
*(___ksymtab_gpl+inet_csk_listen_start) \
*(___ksymtab_gpl+inet_csk_listen_stop) \
*(___ksymtab_gpl+inet_csk_reqsk_queue_add) \
*(___ksymtab_gpl+inet_csk_reqsk_queue_drop) \
*(___ksymtab_gpl+inet_csk_reqsk_queue_hash_add) \
*(___ksymtab_gpl+inet_csk_reset_keepalive_timer) \
*(___ksymtab_gpl+inet_csk_route_child_sock) \
*(___ksymtab_gpl+inet_csk_route_req) \
*(___ksymtab_gpl+inet_csk_timer_bug_msg) \
*(___ksymtab_gpl+inet_del_offload) \
*(___ksymtab_gpl+inetdev_by_index) \
*(___ksymtab_gpl+inet_ehash_locks_alloc) \
*(___ksymtab_gpl+inet_frag_create) \
*(___ksymtab_gpl+inet_frag_rbtree_purge) \
*(___ksymtab_gpl+inet_getname) \
*(___ksymtab_gpl+inet_put_port) \
*(___ksymtab_gpl+inet_rtx_syn_ack) \
*(___ksymtab_gpl+__inet_twsk_hashdance) \
*(___ksymtab_gpl+init_buffer) \
*(___ksymtab_gpl+init_dummy_netdev) \
*(___ksymtab_gpl+__init_kthread_worker) \
*(___ksymtab_gpl+init_mtd_partitions) \
*(___ksymtab_gpl+init_nflash_mtd_partitions) \
*(___ksymtab_gpl+init_pid_ns) \
*(___ksymtab_gpl+init_srcu_struct) \
*(___ksymtab_gpl+in_lock_functions) \
*(___ksymtab_gpl+inode_get_bytes) \
*(___ksymtab_gpl+inode_init_always) \
*(___ksymtab_gpl+inode_sb_list_add) \
*(___ksymtab_gpl+input_alloc_absinfo) \
*(___ksymtab_gpl+input_allocate_device) \
*(___ksymtab_gpl+input_class) \
*(___ksymtab_gpl+input_close_device) \
*(___ksymtab_gpl+input_enable_softrepeat) \
*(___ksymtab_gpl+input_event) \
*(___ksymtab_gpl+input_event_from_user) \
*(___ksymtab_gpl+input_event_to_user) \
*(___ksymtab_gpl+input_ff_create) \
*(___ksymtab_gpl+input_ff_destroy) \
*(___ksymtab_gpl+input_ff_effect_from_user) \
*(___ksymtab_gpl+input_ff_erase) \
*(___ksymtab_gpl+input_ff_event) \
*(___ksymtab_gpl+input_flush_device) \
*(___ksymtab_gpl+input_free_device) \
*(___ksymtab_gpl+input_free_minor) \
*(___ksymtab_gpl+input_get_keycode) \
*(___ksymtab_gpl+input_get_new_minor) \
*(___ksymtab_gpl+input_grab_device) \
*(___ksymtab_gpl+input_handler_for_each_handle) \
*(___ksymtab_gpl+input_inject_event) \
*(___ksymtab_gpl+input_mt_assign_slots) \
*(___ksymtab_gpl+input_mt_destroy_slots) \
*(___ksymtab_gpl+input_mt_drop_unused) \
*(___ksymtab_gpl+input_mt_get_slot_by_key) \
*(___ksymtab_gpl+input_mt_init_slots) \
*(___ksymtab_gpl+input_mt_report_finger_count) \
*(___ksymtab_gpl+input_mt_report_pointer_emulation) \
*(___ksymtab_gpl+input_mt_report_slot_state) \
*(___ksymtab_gpl+input_mt_sync_frame) \
*(___ksymtab_gpl+input_open_device) \
*(___ksymtab_gpl+input_register_device) \
*(___ksymtab_gpl+input_register_handle) \
*(___ksymtab_gpl+input_register_handler) \
*(___ksymtab_gpl+input_release_device) \
*(___ksymtab_gpl+input_reset_device) \
*(___ksymtab_gpl+input_scancode_to_scalar) \
*(___ksymtab_gpl+input_set_abs_params) \
*(___ksymtab_gpl+input_set_capability) \
*(___ksymtab_gpl+input_set_keycode) \
*(___ksymtab_gpl+input_unregister_device) \
*(___ksymtab_gpl+input_unregister_handle) \
*(___ksymtab_gpl+input_unregister_handler) \
*(___ksymtab_gpl+install_exec_creds) \
*(___ksymtab_gpl+int_sqrt) \
*(___ksymtab_gpl+invalidate_bh_lrus) \
*(___ksymtab_gpl+__invalidate_device) \
*(___ksymtab_gpl+invalidate_partition) \
*(___ksymtab_gpl+iommu_area_alloc) \
*(___ksymtab_gpl+iommu_tbl_pool_init) \
*(___ksymtab_gpl+iommu_tbl_range_alloc) \
*(___ksymtab_gpl+iommu_tbl_range_free) \
*(___ksymtab_gpl+ioport_map) \
*(___ksymtab_gpl+ioport_unmap) \
*(___ksymtab_gpl+iov_iter_bvec) \
*(___ksymtab_gpl+iov_iter_kvec) \
*(___ksymtab_gpl+iov_iter_zero) \
*(___ksymtab_gpl+iov_shorten) \
*(___ksymtab_gpl+__iowrite32_copy) \
*(___ksymtab_gpl+__iowrite64_copy) \
*(___ksymtab_gpl+ip4_datagram_connect) \
*(___ksymtab_gpl+ip4_datagram_release_cb) \
*(___ksymtab_gpl+ip_build_and_send_pkt) \
*(___ksymtab_gpl+ip_check_defrag) \
*(___ksymtab_gpl+ip_ct_attach) \
*(___ksymtab_gpl+__ip_dev_find) \
*(___ksymtab_gpl+ip_do_fragment) \
*(___ksymtab_gpl+ip_idents_reserve) \
*(___ksymtab_gpl+ip_mc_check_igmp) \
*(___ksymtab_gpl+ip_options_compile) \
*(___ksymtab_gpl+ip_options_rcv_srr) \
*(___ksymtab_gpl+__ip_route_output_key_hash) \
*(___ksymtab_gpl+ip_set_add) \
*(___ksymtab_gpl+ip_set_alloc) \
*(___ksymtab_gpl+ip_set_del) \
*(___ksymtab_gpl+ip_set_elem_len) \
*(___ksymtab_gpl+ip_set_extensions) \
*(___ksymtab_gpl+ip_set_free) \
*(___ksymtab_gpl+ip_set_get_byname) \
*(___ksymtab_gpl+ip_set_get_extensions) \
*(___ksymtab_gpl+ip_set_get_ip4_port) \
*(___ksymtab_gpl+ip_set_get_ip6_port) \
*(___ksymtab_gpl+ip_set_get_ipaddr4) \
*(___ksymtab_gpl+ip_set_get_ipaddr6) \
*(___ksymtab_gpl+ip_set_get_ip_port) \
*(___ksymtab_gpl+ip_set_hostmask_map) \
*(___ksymtab_gpl+ip_set_name_byindex) \
*(___ksymtab_gpl+ip_set_netmask_map) \
*(___ksymtab_gpl+ip_set_nfnl_get_byindex) \
*(___ksymtab_gpl+ip_set_nfnl_put) \
*(___ksymtab_gpl+ip_set_put_byindex) \
*(___ksymtab_gpl+ip_set_put_extensions) \
*(___ksymtab_gpl+ip_set_range_to_cidr) \
*(___ksymtab_gpl+ip_set_test) \
*(___ksymtab_gpl+ip_set_type_register) \
*(___ksymtab_gpl+ip_set_type_unregister) \
*(___ksymtab_gpl+ipt_alloc_initial_table) \
*(___ksymtab_gpl+ipt_do_table) \
*(___ksymtab_gpl+ip_tos2prio) \
*(___ksymtab_gpl+ipt_register_table) \
*(___ksymtab_gpl+ip_tunnel_metadata_cnt) \
*(___ksymtab_gpl+iptunnel_metadata_reply) \
*(___ksymtab_gpl+ip_tunnel_need_metadata) \
*(___ksymtab_gpl+ip_tunnel_unneed_metadata) \
*(___ksymtab_gpl+ipt_unregister_table) \
*(___ksymtab_gpl+ipv4_sk_redirect) \
*(___ksymtab_gpl+ipv6_mc_check_mld) \
*(___ksymtab_gpl+ipv6_proxy_select_ident) \
*(___ksymtab_gpl+__irq_alloc_descs) \
*(___ksymtab_gpl+irq_cpu_rmap_add) \
*(___ksymtab_gpl+irq_create_direct_mapping) \
*(___ksymtab_gpl+irq_create_fwspec_mapping) \
*(___ksymtab_gpl+irq_create_mapping) \
*(___ksymtab_gpl+irq_create_of_mapping) \
*(___ksymtab_gpl+irq_create_strict_mappings) \
*(___ksymtab_gpl+irq_dispose_mapping) \
*(___ksymtab_gpl+__irq_domain_add) \
*(___ksymtab_gpl+irq_domain_add_legacy) \
*(___ksymtab_gpl+irq_domain_add_simple) \
*(___ksymtab_gpl+irq_domain_associate) \
*(___ksymtab_gpl+irq_domain_associate_many) \
*(___ksymtab_gpl+irq_domain_remove) \
*(___ksymtab_gpl+irq_domain_simple_ops) \
*(___ksymtab_gpl+irq_domain_xlate_onecell) \
*(___ksymtab_gpl+irq_domain_xlate_onetwocell) \
*(___ksymtab_gpl+irq_domain_xlate_twocell) \
*(___ksymtab_gpl+irq_find_mapping) \
*(___ksymtab_gpl+irq_find_matching_fwnode) \
*(___ksymtab_gpl+irq_free_descs) \
*(___ksymtab_gpl+irq_get_irqchip_state) \
*(___ksymtab_gpl+irq_get_irq_data) \
*(___ksymtab_gpl+irq_modify_status) \
*(___ksymtab_gpl+__irq_regs) \
*(___ksymtab_gpl+irq_set_affinity_hint) \
*(___ksymtab_gpl+irq_set_affinity_notifier) \
*(___ksymtab_gpl+irq_set_chained_handler_and_data) \
*(___ksymtab_gpl+irq_set_chip) \
*(___ksymtab_gpl+irq_set_chip_and_handler_name) \
*(___ksymtab_gpl+irq_set_chip_data) \
*(___ksymtab_gpl+irq_set_default_host) \
*(___ksymtab_gpl+__irq_set_handler) \
*(___ksymtab_gpl+irq_set_handler_data) \
*(___ksymtab_gpl+irq_set_irqchip_state) \
*(___ksymtab_gpl+irq_set_irq_type) \
*(___ksymtab_gpl+irq_set_irq_wake) \
*(___ksymtab_gpl+irq_set_vcpu_affinity) \
*(___ksymtab_gpl+irq_stat) \
*(___ksymtab_gpl+irq_to_desc) \
*(___ksymtab_gpl+irq_wake_thread) \
*(___ksymtab_gpl+irq_work_queue) \
*(___ksymtab_gpl+irq_work_queue_on) \
*(___ksymtab_gpl+irq_work_run) \
*(___ksymtab_gpl+irq_work_sync) \
*(___ksymtab_gpl+isa_dma_bridge_buggy) \
*(___ksymtab_gpl+is_skb_forwardable) \
*(___ksymtab_gpl+iterate_dir) \
*(___ksymtab_gpl+iterate_fd) \
*(___ksymtab_gpl+iter_div_u64_rem) \
*(___ksymtab_gpl+iw_handler_get_spy) \
*(___ksymtab_gpl+iw_handler_get_thrspy) \
*(___ksymtab_gpl+iw_handler_set_spy) \
*(___ksymtab_gpl+iw_handler_set_thrspy) \
*(___ksymtab_gpl+jump_label_rate_limit) \
*(___ksymtab_gpl+kallsyms_on_each_symbol) \
*(___ksymtab_gpl+kcrypto_wq) \
*(___ksymtab_gpl+kernel_accept) \
*(___ksymtab_gpl+kernel_cpustat) \
*(___ksymtab_gpl+kernel_getpeername) \
*(___ksymtab_gpl+kernel_getsockname) \
*(___ksymtab_gpl+kernel_getsockopt) \
*(___ksymtab_gpl+kernel_halt) \
*(___ksymtab_gpl+kernel_listen) \
*(___ksymtab_gpl+kernel_param_lock) \
*(___ksymtab_gpl+kernel_param_unlock) \
*(___ksymtab_gpl+kernel_power_off) \
*(___ksymtab_gpl+kernel_restart) \
*(___ksymtab_gpl+kernel_sendpage) \
*(___ksymtab_gpl+kernel_sock_ioctl) \
*(___ksymtab_gpl+__kernel_write) \
*(___ksymtab_gpl+kernel_write) \
*(___ksymtab_gpl+kernfs_find_and_get_ns) \
*(___ksymtab_gpl+kernfs_get) \
*(___ksymtab_gpl+kernfs_notify) \
*(___ksymtab_gpl+kernfs_path) \
*(___ksymtab_gpl+kernfs_put) \
*(___ksymtab_gpl+kern_mount_data) \
*(___ksymtab_gpl+kern_unmount) \
*(___ksymtab_gpl+key_alloc) \
*(___ksymtab_gpl+key_instantiate_and_link) \
*(___ksymtab_gpl+key_invalidate) \
*(___ksymtab_gpl+key_link) \
*(___ksymtab_gpl+key_payload_reserve) \
*(___ksymtab_gpl+key_reject_and_link) \
*(___ksymtab_gpl+keyring_clear) \
*(___ksymtab_gpl+keyring_search) \
*(___ksymtab_gpl+key_set_timeout) \
*(___ksymtab_gpl+key_task_permission) \
*(___ksymtab_gpl+key_type_keyring) \
*(___ksymtab_gpl+key_type_user) \
*(___ksymtab_gpl+key_unlink) \
*(___ksymtab_gpl+__kfifo_dma_in_finish_r) \
*(___ksymtab_gpl+__kfifo_dma_in_prepare) \
*(___ksymtab_gpl+__kfifo_dma_in_prepare_r) \
*(___ksymtab_gpl+__kfifo_dma_out_finish_r) \
*(___ksymtab_gpl+__kfifo_dma_out_prepare) \
*(___ksymtab_gpl+__kfifo_dma_out_prepare_r) \
*(___ksymtab_gpl+__kfifo_from_user) \
*(___ksymtab_gpl+__kfifo_from_user_r) \
*(___ksymtab_gpl+__kfifo_len_r) \
*(___ksymtab_gpl+__kfifo_max_r) \
*(___ksymtab_gpl+__kfifo_skip_r) \
*(___ksymtab_gpl+__kfifo_to_user) \
*(___ksymtab_gpl+__kfifo_to_user_r) \
*(___ksymtab_gpl+kick_all_cpus_sync) \
*(___ksymtab_gpl+kick_process) \
*(___ksymtab_gpl+kill_bdev) \
*(___ksymtab_gpl+kill_pgrp) \
*(___ksymtab_gpl+kill_pid) \
*(___ksymtab_gpl+kill_proc_info) \
*(___ksymtab_gpl+klist_add_before) \
*(___ksymtab_gpl+klist_add_behind) \
*(___ksymtab_gpl+klist_add_head) \
*(___ksymtab_gpl+klist_add_tail) \
*(___ksymtab_gpl+klist_del) \
*(___ksymtab_gpl+klist_init) \
*(___ksymtab_gpl+klist_iter_exit) \
*(___ksymtab_gpl+klist_iter_init) \
*(___ksymtab_gpl+klist_iter_init_node) \
*(___ksymtab_gpl+klist_next) \
*(___ksymtab_gpl+klist_node_attached) \
*(___ksymtab_gpl+klist_prev) \
*(___ksymtab_gpl+klist_remove) \
*(___ksymtab_gpl+kmalloc_order) \
*(___ksymtab_gpl+kmem_cache_shrink) \
*(___ksymtab_gpl+kmem_cache_size) \
*(___ksymtab_gpl+km_is_alive) \
*(___ksymtab_gpl+km_new_mapping) \
*(___ksymtab_gpl+km_policy_expired) \
*(___ksymtab_gpl+km_policy_notify) \
*(___ksymtab_gpl+km_query) \
*(___ksymtab_gpl+kmsg_dump_get_buffer) \
*(___ksymtab_gpl+kmsg_dump_get_line) \
*(___ksymtab_gpl+kmsg_dump_register) \
*(___ksymtab_gpl+kmsg_dump_rewind) \
*(___ksymtab_gpl+kmsg_dump_unregister) \
*(___ksymtab_gpl+km_state_expired) \
*(___ksymtab_gpl+km_state_notify) \
*(___ksymtab_gpl+kobject_add) \
*(___ksymtab_gpl+kobject_get) \
*(___ksymtab_gpl+kobject_get_path) \
*(___ksymtab_gpl+kobject_get_unless_zero) \
*(___ksymtab_gpl+kobject_init) \
*(___ksymtab_gpl+kobject_move) \
*(___ksymtab_gpl+kobject_rename) \
*(___ksymtab_gpl+kobj_sysfs_ops) \
*(___ksymtab_gpl+kset_create_and_add) \
*(___ksymtab_gpl+ksize) \
*(___ksymtab_gpl+kstat) \
*(___ksymtab_gpl+kstrtol_from_user) \
*(___ksymtab_gpl+kstrtoll) \
*(___ksymtab_gpl+kstrtoll_from_user) \
*(___ksymtab_gpl+kstrtos16) \
*(___ksymtab_gpl+kstrtos16_from_user) \
*(___ksymtab_gpl+kstrtos8) \
*(___ksymtab_gpl+kstrtos8_from_user) \
*(___ksymtab_gpl+kstrtou16) \
*(___ksymtab_gpl+kstrtou16_from_user) \
*(___ksymtab_gpl+kstrtou8) \
*(___ksymtab_gpl+kstrtou8_from_user) \
*(___ksymtab_gpl+kthread_bind) \
*(___ksymtab_gpl+kthread_freezable_should_stop) \
*(___ksymtab_gpl+kthread_park) \
*(___ksymtab_gpl+kthread_parkme) \
*(___ksymtab_gpl+kthread_should_park) \
*(___ksymtab_gpl+kthread_unpark) \
*(___ksymtab_gpl+kthread_worker_fn) \
*(___ksymtab_gpl+ktime_add_safe) \
*(___ksymtab_gpl+__ktime_divns) \
*(___ksymtab_gpl+ktime_mono_to_any) \
*(___ksymtab_gpl+l2x0_read_event_cnt) \
*(___ksymtab_gpl+l2x0_reg_lock) \
*(___ksymtab_gpl+laptop_mode) \
*(___ksymtab_gpl+lcm) \
*(___ksymtab_gpl+lcm_not_zero) \
*(___ksymtab_gpl+lease_get_mtime) \
*(___ksymtab_gpl+lease_modify) \
*(___ksymtab_gpl+lg_global_lock) \
*(___ksymtab_gpl+lg_global_unlock) \
*(___ksymtab_gpl+lg_local_lock) \
*(___ksymtab_gpl+lg_local_lock_cpu) \
*(___ksymtab_gpl+lg_local_unlock) \
*(___ksymtab_gpl+lg_local_unlock_cpu) \
*(___ksymtab_gpl+lg_lock_init) \
*(___ksymtab_gpl+linkwatch_fire_event) \
*(___ksymtab_gpl+list_lru_add) \
*(___ksymtab_gpl+list_lru_count_node) \
*(___ksymtab_gpl+list_lru_count_one) \
*(___ksymtab_gpl+list_lru_del) \
*(___ksymtab_gpl+list_lru_destroy) \
*(___ksymtab_gpl+__list_lru_init) \
*(___ksymtab_gpl+list_lru_isolate) \
*(___ksymtab_gpl+list_lru_isolate_move) \
*(___ksymtab_gpl+list_lru_walk_node) \
*(___ksymtab_gpl+list_lru_walk_one) \
*(___ksymtab_gpl+llc_add_pack) \
*(___ksymtab_gpl+llc_build_and_send_ui_pkt) \
*(___ksymtab_gpl+llc_mac_hdr_init) \
*(___ksymtab_gpl+llc_remove_pack) \
*(___ksymtab_gpl+llc_sap_close) \
*(___ksymtab_gpl+llc_sap_find) \
*(___ksymtab_gpl+llc_sap_list) \
*(___ksymtab_gpl+llc_sap_open) \
*(___ksymtab_gpl+llc_set_station_handler) \
*(___ksymtab_gpl+llist_add_batch) \
*(___ksymtab_gpl+llist_del_first) \
*(___ksymtab_gpl+llist_reverse_order) \
*(___ksymtab_gpl+_local_bh_enable) \
*(___ksymtab_gpl+local_clock) \
*(___ksymtab_gpl+lockref_mark_dead) \
*(___ksymtab_gpl+lockref_put_or_lock) \
*(___ksymtab_gpl+lockref_put_return) \
*(___ksymtab_gpl+lock_rename) \
*(___ksymtab_gpl+locks_alloc_lock) \
*(___ksymtab_gpl+locks_copy_conflock) \
*(___ksymtab_gpl+locks_copy_lock) \
*(___ksymtab_gpl+locks_free_lock) \
*(___ksymtab_gpl+locks_init_lock) \
*(___ksymtab_gpl+locks_mandatory_area) \
*(___ksymtab_gpl+locks_release_private) \
*(___ksymtab_gpl+locks_remove_posix) \
*(___ksymtab_gpl+loop_register_transfer) \
*(___ksymtab_gpl+loops_per_jiffy) \
*(___ksymtab_gpl+loop_unregister_transfer) \
*(___ksymtab_gpl+lro_flush_all) \
*(___ksymtab_gpl+lro_receive_skb) \
*(___ksymtab_gpl+__lshrdi3) \
*(___ksymtab_gpl+__machine_arch_type) \
*(___ksymtab_gpl+mac_pton) \
*(___ksymtab_gpl+make_flow_keys_digest) \
*(___ksymtab_gpl+mangle_path) \
*(___ksymtab_gpl+map_destroy) \
*(___ksymtab_gpl+map_vm_area) \
*(___ksymtab_gpl+mark_buffer_async_write) \
*(___ksymtab_gpl+mark_mounts_for_expiry) \
*(___ksymtab_gpl+match_hex) \
*(___ksymtab_gpl+match_wildcard) \
*(___ksymtab_gpl+max_mapnr) \
*(___ksymtab_gpl+may_umount) \
*(___ksymtab_gpl+may_umount_tree) \
*(___ksymtab_gpl+__mdio_board_list) \
*(___ksymtab_gpl+__mdio_board_lock) \
*(___ksymtab_gpl+mdiobus_alloc_size) \
*(___ksymtab_gpl+mdiobus_free) \
*(___ksymtab_gpl+mdiobus_scan) \
*(___ksymtab_gpl+mdio_bus_type) \
*(___ksymtab_gpl+memalloc_socks) \
*(___ksymtab_gpl+memparse) \
*(___ksymtab_gpl+mempool_kmalloc) \
*(___ksymtab_gpl+memremap) \
*(___ksymtab_gpl+memunmap) \
*(___ksymtab_gpl+mii_check_link) \
*(___ksymtab_gpl+mii_check_media) \
*(___ksymtab_gpl+__mmdrop) \
*(___ksymtab_gpl+mmiocpy) \
*(___ksymtab_gpl+mmioset) \
*(___ksymtab_gpl+mm_kobj) \
*(___ksymtab_gpl+mmput) \
*(___ksymtab_gpl+mnt_clone_write) \
*(___ksymtab_gpl+mnt_drop_write) \
*(___ksymtab_gpl+mntget) \
*(___ksymtab_gpl+__mnt_is_readonly) \
*(___ksymtab_gpl+mntput) \
*(___ksymtab_gpl+mnt_set_expiry) \
*(___ksymtab_gpl+mnt_want_write) \
*(___ksymtab_gpl+__modsi3) \
*(___ksymtab_gpl+__module_address) \
*(___ksymtab_gpl+module_mutex) \
*(___ksymtab_gpl+module_refcount) \
*(___ksymtab_gpl+__module_text_address) \
*(___ksymtab_gpl+__mod_zone_page_state) \
*(___ksymtab_gpl+mod_zone_page_state) \
*(___ksymtab_gpl+mount_ns) \
*(___ksymtab_gpl+mount_pseudo) \
*(___ksymtab_gpl+mount_subtree) \
*(___ksymtab_gpl+mpage_writepage) \
*(___ksymtab_gpl+mtd_add_partition) \
*(___ksymtab_gpl+mtd_blktrans_cease_background) \
*(___ksymtab_gpl+mtd_block_isreserved) \
*(___ksymtab_gpl+mtd_concat_create) \
*(___ksymtab_gpl+mtd_concat_destroy) \
*(___ksymtab_gpl+mtd_del_partition) \
*(___ksymtab_gpl+mtd_device_parse_register) \
*(___ksymtab_gpl+mtd_do_chip_probe) \
*(___ksymtab_gpl+mtd_get_fact_prot_info) \
*(___ksymtab_gpl+mtd_get_unmapped_area) \
*(___ksymtab_gpl+mtd_get_user_prot_info) \
*(___ksymtab_gpl+mtd_is_locked) \
*(___ksymtab_gpl+mtd_is_partition) \
*(___ksymtab_gpl+mtd_lock) \
*(___ksymtab_gpl+mtd_lock_user_prot_reg) \
*(___ksymtab_gpl+__mtd_next_device) \
*(___ksymtab_gpl+mtd_table_mutex) \
*(___ksymtab_gpl+mtd_unlock) \
*(___ksymtab_gpl+__muldi3) \
*(___ksymtab_gpl+name_to_dev_t) \
*(___ksymtab_gpl+__nand_calculate_ecc) \
*(___ksymtab_gpl+nand_calculate_ecc) \
*(___ksymtab_gpl+nand_check_erased_ecc_chunk) \
*(___ksymtab_gpl+__nand_correct_data) \
*(___ksymtab_gpl+nand_correct_data) \
*(___ksymtab_gpl+nand_flash_ids) \
*(___ksymtab_gpl+nand_hwcontrol_lock_init) \
*(___ksymtab_gpl+nand_lock) \
*(___ksymtab_gpl+nand_manuf_ids) \
*(___ksymtab_gpl+nand_release) \
*(___ksymtab_gpl+nand_scan) \
*(___ksymtab_gpl+nand_scan_bbt) \
*(___ksymtab_gpl+nand_scan_ident) \
*(___ksymtab_gpl+nand_scan_tail) \
*(___ksymtab_gpl+nand_unlock) \
*(___ksymtab_gpl+nand_wait_ready) \
*(___ksymtab_gpl+napi_alloc_frag) \
*(___ksymtab_gpl+__napi_alloc_skb) \
*(___ksymtab_gpl+napi_by_id) \
*(___ksymtab_gpl+napi_get_frags) \
*(___ksymtab_gpl+napi_gro_flush) \
*(___ksymtab_gpl+napi_gro_frags) \
*(___ksymtab_gpl+napi_hash_add) \
*(___ksymtab_gpl+napi_hash_del) \
*(___ksymtab_gpl+ndo_dflt_bridge_getlink) \
*(___ksymtab_gpl+ndo_dflt_fdb_add) \
*(___ksymtab_gpl+ndo_dflt_fdb_del) \
*(___ksymtab_gpl+ndo_dflt_fdb_dump) \
*(___ksymtab_gpl+neigh_event_ns) \
*(___ksymtab_gpl+__neigh_event_send) \
*(___ksymtab_gpl+neigh_for_each) \
*(___ksymtab_gpl+__neigh_for_each_release) \
*(___ksymtab_gpl+neigh_seq_next) \
*(___ksymtab_gpl+neigh_seq_start) \
*(___ksymtab_gpl+neigh_seq_stop) \
*(___ksymtab_gpl+net_dec_ingress_queue) \
*(___ksymtab_gpl+netdev_alert) \
*(___ksymtab_gpl+netdev_alloc_frag) \
*(___ksymtab_gpl+netdev_emerg) \
*(___ksymtab_gpl+netdev_features_change) \
*(___ksymtab_gpl+netdev_lower_get_next) \
*(___ksymtab_gpl+netdev_notify_peers) \
*(___ksymtab_gpl+netdev_refcnt_read) \
*(___ksymtab_gpl+netdev_rss_key_fill) \
*(___ksymtab_gpl+netdev_set_default_ethtool_ops) \
*(___ksymtab_gpl+netdev_stats_to_stats64) \
*(___ksymtab_gpl+net_disable_timestamp) \
*(___ksymtab_gpl+net_enable_timestamp) \
*(___ksymtab_gpl+netif_get_num_default_rss_queues) \
*(___ksymtab_gpl+netif_receive_skb) \
*(___ksymtab_gpl+netif_receive_skb_list) \
*(___ksymtab_gpl+netif_set_xps_queue) \
*(___ksymtab_gpl+netif_skb_features) \
*(___ksymtab_gpl+netif_stacked_transfer_operstate) \
*(___ksymtab_gpl+netif_wake_subqueue) \
*(___ksymtab_gpl+net_inc_ingress_queue) \
*(___ksymtab_gpl+netlink_ack) \
*(___ksymtab_gpl+netlink_add_tap) \
*(___ksymtab_gpl+__netlink_alloc_skb) \
*(___ksymtab_gpl+__netlink_dump_start) \
*(___ksymtab_gpl+netlink_rcv_skb) \
*(___ksymtab_gpl+netlink_register_notifier) \
*(___ksymtab_gpl+netlink_remove_tap) \
*(___ksymtab_gpl+netlink_set_err) \
*(___ksymtab_gpl+netlink_unregister_notifier) \
*(___ksymtab_gpl+net_ns_type_operations) \
*(___ksymtab_gpl+nf_br_ops) \
*(___ksymtab_gpl+nf_conntrack_alloc) \
*(___ksymtab_gpl+nf_conntrack_broadcast_help) \
*(___ksymtab_gpl+nf_conntrack_dscpremark_ext_get_dscp_rule_validity) \
*(___ksymtab_gpl+nf_conntrack_flush) \
*(___ksymtab_gpl+nf_conntrack_free) \
*(___ksymtab_gpl+nf_conntrack_hash_check_insert) \
*(___ksymtab_gpl+nf_conntrack_hash_rnd) \
*(___ksymtab_gpl+__nf_conntrack_helper_find) \
*(___ksymtab_gpl+nf_conntrack_htable_size) \
*(___ksymtab_gpl+nf_conntrack_l3proto_generic) \
*(___ksymtab_gpl+nf_conntrack_l4proto_tcp4) \
*(___ksymtab_gpl+nf_conntrack_l4proto_udp4) \
*(___ksymtab_gpl+nf_conntrack_locks) \
*(___ksymtab_gpl+nf_conntrack_max) \
*(___ksymtab_gpl+nf_conntrack_set_hashsize) \
*(___ksymtab_gpl+nf_ct_alloc_hashtable) \
*(___ksymtab_gpl+nf_ct_delete) \
*(___ksymtab_gpl+nf_ct_destroy) \
*(___ksymtab_gpl+nf_ct_expect_hsize) \
*(___ksymtab_gpl+nf_ct_expect_register_notifier) \
*(___ksymtab_gpl+nf_ct_expect_unregister_notifier) \
*(___ksymtab_gpl+__nf_ct_ext_destroy) \
*(___ksymtab_gpl+nf_ct_ext_seq_print) \
*(___ksymtab_gpl+nf_ct_free_hashtable) \
*(___ksymtab_gpl+nf_ct_get_id) \
*(___ksymtab_gpl+nf_ct_helper_expectfn_find_by_name) \
*(___ksymtab_gpl+nf_ct_helper_expectfn_find_by_symbol) \
*(___ksymtab_gpl+nf_ct_helper_ext_add) \
*(___ksymtab_gpl+nf_ct_helper_hash) \
*(___ksymtab_gpl+nf_ct_helper_hsize) \
*(___ksymtab_gpl+nf_ct_l3proto_find_get) \
*(___ksymtab_gpl+nf_ct_l3protos) \
*(___ksymtab_gpl+nf_ct_l4proto_find_get) \
*(___ksymtab_gpl+nf_ct_l4proto_put) \
*(___ksymtab_gpl+nf_ct_remove_expectations) \
*(___ksymtab_gpl+nf_ct_seq_offset) \
*(___ksymtab_gpl+nf_ct_tcp_seqadj_set) \
*(___ksymtab_gpl+__nf_ct_try_assign_helper) \
*(___ksymtab_gpl+nf_ct_untracked_status_or) \
*(___ksymtab_gpl+nf_defrag_ipv4_enable) \
*(___ksymtab_gpl+nf_ip_checksum) \
*(___ksymtab_gpl+nf_log_bind_pf) \
*(___ksymtab_gpl+nf_logger_find_get) \
*(___ksymtab_gpl+nf_logger_put) \
*(___ksymtab_gpl+nf_logger_request_module) \
*(___ksymtab_gpl+nf_log_trace) \
*(___ksymtab_gpl+nf_log_unbind_pf) \
*(___ksymtab_gpl+nf_nat_decode_session_hook) \
*(___ksymtab_gpl+nf_nat_follow_master) \
*(___ksymtab_gpl+nf_nat_ftp_hook) \
*(___ksymtab_gpl+nf_nat_icmp_reply_translation) \
*(___ksymtab_gpl+nf_nat_ipv4_fn) \
*(___ksymtab_gpl+nf_nat_ipv4_in) \
*(___ksymtab_gpl+nf_nat_ipv4_local_fn) \
*(___ksymtab_gpl+nf_nat_ipv4_out) \
*(___ksymtab_gpl+nf_nat_irc_hook) \
*(___ksymtab_gpl+nf_nat_masquerade_ipv4) \
*(___ksymtab_gpl+nf_nat_masquerade_ipv4_register_notifier) \
*(___ksymtab_gpl+nf_nat_masquerade_ipv4_unregister_notifier) \
*(___ksymtab_gpl+nf_nat_redirect_ipv4) \
*(___ksymtab_gpl+nf_nat_redirect_ipv6) \
*(___ksymtab_gpl+nf_nat_rtsp_hook) \
*(___ksymtab_gpl+nf_nat_snmp_hook) \
*(___ksymtab_gpl+nf_nat_tftp_hook) \
*(___ksymtab_gpl+nfnetlink_alloc_skb) \
*(___ksymtab_gpl+nfnetlink_send) \
*(___ksymtab_gpl+nfnetlink_set_err) \
*(___ksymtab_gpl+nfnetlink_subsys_register) \
*(___ksymtab_gpl+nfnetlink_subsys_unregister) \
*(___ksymtab_gpl+nfnl_ct_hook) \
*(___ksymtab_gpl+nfnl_lock) \
*(___ksymtab_gpl+nfnl_unlock) \
*(___ksymtab_gpl+nf_register_hook) \
*(___ksymtab_gpl+nf_register_net_hook) \
*(___ksymtab_gpl+nf_register_queue_handler) \
*(___ksymtab_gpl+nf_reject_iphdr_put) \
*(___ksymtab_gpl+nf_reject_ip_tcphdr_get) \
*(___ksymtab_gpl+nf_reject_ip_tcphdr_put) \
*(___ksymtab_gpl+nf_send_reset) \
*(___ksymtab_gpl+nf_send_unreach) \
*(___ksymtab_gpl+nfulnl_log_packet) \
*(___ksymtab_gpl+nf_unregister_hook) \
*(___ksymtab_gpl+nf_unregister_net_hook) \
*(___ksymtab_gpl+nf_unregister_queue_handler) \
*(___ksymtab_gpl+nla_append) \
*(___ksymtab_gpl+nla_policy_len) \
*(___ksymtab_gpl+nla_validate) \
*(___ksymtab_gpl+nlmsg_notify) \
*(___ksymtab_gpl+nl_table) \
*(___ksymtab_gpl+nl_table_lock) \
*(___ksymtab_gpl+no_action) \
*(___ksymtab_gpl+nobh_truncate_page) \
*(___ksymtab_gpl+nobh_write_begin) \
*(___ksymtab_gpl+nobh_write_end) \
*(___ksymtab_gpl+nobh_writepage) \
*(___ksymtab_gpl+node_states) \
*(___ksymtab_gpl+noop_fsync) \
*(___ksymtab_gpl+no_pci_devices) \
*(___ksymtab_gpl+notify_change) \
*(___ksymtab_gpl+nr_irqs) \
*(___ksymtab_gpl+ns_to_timespec) \
*(___ksymtab_gpl+ns_to_timespec64) \
*(___ksymtab_gpl+ns_to_timeval) \
*(___ksymtab_gpl+n_tty_inherit_ops) \
*(___ksymtab_gpl+n_tty_ioctl_helper) \
*(___ksymtab_gpl+nvram_commit) \
*(___ksymtab_gpl+nvram_init) \
*(___ksymtab_gpl+nvram_set) \
*(___ksymtab_gpl+nvram_unset) \
*(___ksymtab_gpl+__of_phy_provider_register) \
*(___ksymtab_gpl+of_phy_provider_unregister) \
*(___ksymtab_gpl+of_phy_simple_xlate) \
*(___ksymtab_gpl+on_each_cpu) \
*(___ksymtab_gpl+on_each_cpu_cond) \
*(___ksymtab_gpl+on_each_cpu_mask) \
*(___ksymtab_gpl+onfi_async_timing_mode_to_sdr_timings) \
*(___ksymtab_gpl+oops_in_progress) \
*(___ksymtab_gpl+open_exec) \
*(___ksymtab_gpl+orderly_poweroff) \
*(___ksymtab_gpl+orderly_reboot) \
*(___ksymtab_gpl+osl_check_memleak) \
*(___ksymtab_gpl+osl_dma_consistent_align) \
*(___ksymtab_gpl+osl_get_bus_handle) \
*(___ksymtab_gpl+osl_is_flag_set) \
*(___ksymtab_gpl+osl_os_close_image) \
*(___ksymtab_gpl+osl_os_get_image_block) \
*(___ksymtab_gpl+osl_os_image_size) \
*(___ksymtab_gpl+osl_os_open_image) \
*(___ksymtab_gpl+osl_rand) \
*(___ksymtab_gpl+osl_set_bus_handle) \
*(___ksymtab_gpl+osl_static_mem_deinit) \
*(___ksymtab_gpl+otp_avsbitslen) \
*(___ksymtab_gpl+otp_init) \
*(___ksymtab_gpl+otp_isunified) \
*(___ksymtab_gpl+otp_msg_level) \
*(___ksymtab_gpl+otp_newcis) \
*(___ksymtab_gpl+otp_nvread) \
*(___ksymtab_gpl+otp_read_bit) \
*(___ksymtab_gpl+otp_read_region) \
*(___ksymtab_gpl+otp_size) \
*(___ksymtab_gpl+otp_status) \
*(___ksymtab_gpl+outer_cache) \
*(___ksymtab_gpl+page_cache_async_readahead) \
*(___ksymtab_gpl+page_cache_next_hole) \
*(___ksymtab_gpl+page_cache_prev_hole) \
*(___ksymtab_gpl+page_endio) \
*(___ksymtab_gpl+__page_file_index) \
*(___ksymtab_gpl+__page_file_mapping) \
*(___ksymtab_gpl+page_is_ram) \
*(___ksymtab_gpl+page_mkclean) \
*(___ksymtab_gpl+page_readlink) \
*(___ksymtab_gpl+__pagevec_lru_add) \
*(___ksymtab_gpl+page_waitqueue) \
*(___ksymtab_gpl+page_zero_new_buffers) \
*(___ksymtab_gpl+param_free_charp) \
*(___ksymtab_gpl+param_get_bool) \
*(___ksymtab_gpl+param_get_byte) \
*(___ksymtab_gpl+param_get_charp) \
*(___ksymtab_gpl+param_get_int) \
*(___ksymtab_gpl+param_get_invbool) \
*(___ksymtab_gpl+param_get_long) \
*(___ksymtab_gpl+param_get_short) \
*(___ksymtab_gpl+param_get_ullong) \
*(___ksymtab_gpl+param_get_ulong) \
*(___ksymtab_gpl+param_get_ushort) \
*(___ksymtab_gpl+param_ops_bint) \
*(___ksymtab_gpl+param_ops_byte) \
*(___ksymtab_gpl+param_ops_invbool) \
*(___ksymtab_gpl+param_ops_long) \
*(___ksymtab_gpl+param_ops_short) \
*(___ksymtab_gpl+param_set_bint) \
*(___ksymtab_gpl+param_set_bool) \
*(___ksymtab_gpl+param_set_bool_enable_only) \
*(___ksymtab_gpl+param_set_byte) \
*(___ksymtab_gpl+param_set_charp) \
*(___ksymtab_gpl+param_set_int) \
*(___ksymtab_gpl+param_set_invbool) \
*(___ksymtab_gpl+param_set_long) \
*(___ksymtab_gpl+param_set_short) \
*(___ksymtab_gpl+param_set_ullong) \
*(___ksymtab_gpl+param_set_ulong) \
*(___ksymtab_gpl+param_set_ushort) \
*(___ksymtab_gpl+partitions_lock_init) \
*(___ksymtab_gpl+part_round_stats) \
*(___ksymtab_gpl+patch_pair) \
*(___ksymtab_gpl+path_get) \
*(___ksymtab_gpl+path_is_under) \
*(___ksymtab_gpl+pci_add_dynid) \
*(___ksymtab_gpl+pci_add_new_bus) \
*(___ksymtab_gpl+pci_add_resource) \
*(___ksymtab_gpl+pci_add_resource_offset) \
*(___ksymtab_gpl+pci_alloc_dev) \
*(___ksymtab_gpl+pci_assign_resource) \
*(___ksymtab_gpl+pci_assign_unassigned_bridge_resources) \
*(___ksymtab_gpl+pci_assign_unassigned_bus_resources) \
*(___ksymtab_gpl+pci_back_from_sleep) \
*(___ksymtab_gpl+pcibios_bus_to_resource) \
*(___ksymtab_gpl+pcibios_min_io) \
*(___ksymtab_gpl+pcibios_min_mem) \
*(___ksymtab_gpl+pcibios_resource_to_bus) \
*(___ksymtab_gpl+pci_bus_add_device) \
*(___ksymtab_gpl+pci_bus_add_devices) \
*(___ksymtab_gpl+pci_bus_alloc_resource) \
*(___ksymtab_gpl+pci_bus_assign_resources) \
*(___ksymtab_gpl+pci_bus_find_capability) \
*(___ksymtab_gpl+pci_bus_get) \
*(___ksymtab_gpl+pci_bus_max_busnr) \
*(___ksymtab_gpl+pci_bus_put) \
*(___ksymtab_gpl+pci_bus_read_dev_vendor_id) \
*(___ksymtab_gpl+pci_bus_resource_n) \
*(___ksymtab_gpl+pci_bus_sem) \
*(___ksymtab_gpl+pci_bus_set_ops) \
*(___ksymtab_gpl+pci_bus_size_bridges) \
*(___ksymtab_gpl+pci_bus_type) \
*(___ksymtab_gpl+pci_bus_write_config_word) \
*(___ksymtab_gpl+pci_cfg_access_lock) \
*(___ksymtab_gpl+pci_cfg_access_trylock) \
*(___ksymtab_gpl+pci_cfg_access_unlock) \
*(___ksymtab_gpl+pci_check_and_mask_intx) \
*(___ksymtab_gpl+pci_check_and_unmask_intx) \
*(___ksymtab_gpl+pci_choose_state) \
*(___ksymtab_gpl+pci_claim_resource) \
*(___ksymtab_gpl+pci_clear_master) \
*(___ksymtab_gpl+pci_clear_mwi) \
*(___ksymtab_gpl+pci_common_swizzle) \
*(___ksymtab_gpl+pcicore_attach) \
*(___ksymtab_gpl+pcicore_deinit) \
*(___ksymtab_gpl+pcicore_find_pci_capability) \
*(___ksymtab_gpl+pcicore_init) \
*(___ksymtab_gpl+pcicore_pciereg) \
*(___ksymtab_gpl+pcicore_pcieserdesreg) \
*(___ksymtab_gpl+pcicore_pmecap_fast) \
*(___ksymtab_gpl+pcicore_pmeclr) \
*(___ksymtab_gpl+pcicore_pmeen) \
*(___ksymtab_gpl+pcicore_pmestat) \
*(___ksymtab_gpl+pcicore_pmestatclr) \
*(___ksymtab_gpl+pcicore_sleep) \
*(___ksymtab_gpl+pci_create_root_bus) \
*(___ksymtab_gpl+pci_create_slot) \
*(___ksymtab_gpl+pci_destroy_slot) \
*(___ksymtab_gpl+pci_dev_driver) \
*(___ksymtab_gpl+pci_dev_get) \
*(___ksymtab_gpl+pci_device_is_present) \
*(___ksymtab_gpl+pci_dev_present) \
*(___ksymtab_gpl+pci_disable_pcie_error_reporting) \
*(___ksymtab_gpl+pci_disable_rom) \
*(___ksymtab_gpl+pcie_bus_configure_settings) \
*(___ksymtab_gpl+pcie_capability_clear_and_set_dword) \
*(___ksymtab_gpl+pcie_capability_clear_and_set_word) \
*(___ksymtab_gpl+pcie_capability_read_dword) \
*(___ksymtab_gpl+pcie_capability_read_word) \
*(___ksymtab_gpl+pcie_capability_write_dword) \
*(___ksymtab_gpl+pcie_capability_write_word) \
*(___ksymtab_gpl+pcie_clkreq) \
*(___ksymtab_gpl+pcie_configspace_cache) \
*(___ksymtab_gpl+pcie_configspace_get) \
*(___ksymtab_gpl+pcie_configspace_restore) \
*(___ksymtab_gpl+pciedev_crwlpciegen2) \
*(___ksymtab_gpl+pciedev_prep_D3) \
*(___ksymtab_gpl+pciedev_reg_pm_clk_period) \
*(___ksymtab_gpl+pcie_disable_TL_clk_gating) \
*(___ksymtab_gpl+pcie_get_bar0) \
*(___ksymtab_gpl+pcie_get_L1substate) \
*(___ksymtab_gpl+pcie_get_link_speed) \
*(___ksymtab_gpl+pcie_get_maxpayload_size) \
*(___ksymtab_gpl+pcie_get_minimum_link) \
*(___ksymtab_gpl+pcie_get_mps) \
*(___ksymtab_gpl+pcie_get_readrq) \
*(___ksymtab_gpl+pcie_get_request_size) \
*(___ksymtab_gpl+pcie_get_ssid) \
*(___ksymtab_gpl+pcie_hw_L1SS_war) \
*(___ksymtab_gpl+pcie_hw_LTR_war) \
*(___ksymtab_gpl+pcie_lcreg) \
*(___ksymtab_gpl+pcie_ltrenable) \
*(___ksymtab_gpl+pcieltrhysteresiscnt_reg) \
*(___ksymtab_gpl+pcie_ltr_reg) \
*(___ksymtab_gpl+pcieltrspacing_reg) \
*(___ksymtab_gpl+pcie_ltr_war) \
*(___ksymtab_gpl+pci_enable_bridges) \
*(___ksymtab_gpl+pci_enable_pcie_error_reporting) \
*(___ksymtab_gpl+pci_enable_rom) \
*(___ksymtab_gpl+pcie_obffenable) \
*(___ksymtab_gpl+pcie_port_bus_type) \
*(___ksymtab_gpl+pcie_port_service_register) \
*(___ksymtab_gpl+pcie_port_service_unregister) \
*(___ksymtab_gpl+pcie_power_save_enable) \
*(___ksymtab_gpl+pcie_readreg) \
*(___ksymtab_gpl+pcie_set_ctrlreg) \
*(___ksymtab_gpl+pcie_set_error_injection) \
*(___ksymtab_gpl+pcie_set_L1_entry_time) \
*(___ksymtab_gpl+pcie_set_L1substate) \
*(___ksymtab_gpl+pcie_set_maxpayload_size) \
*(___ksymtab_gpl+pcie_set_mps) \
*(___ksymtab_gpl+pcie_set_readrq) \
*(___ksymtab_gpl+pcie_set_request_size) \
*(___ksymtab_gpl+pcie_survive_perst) \
*(___ksymtab_gpl+pcie_watchdog_reset) \
*(___ksymtab_gpl+pcie_writereg) \
*(___ksymtab_gpl+pci_find_bus) \
*(___ksymtab_gpl+pci_find_ext_capability) \
*(___ksymtab_gpl+pci_find_ht_capability) \
*(___ksymtab_gpl+pci_find_next_bus) \
*(___ksymtab_gpl+pci_find_next_capability) \
*(___ksymtab_gpl+pci_find_next_ext_capability) \
*(___ksymtab_gpl+pci_find_next_ht_capability) \
*(___ksymtab_gpl+pci_find_parent_resource) \
*(___ksymtab_gpl+pci_find_pcie_root_port) \
*(___ksymtab_gpl+pci_free_resource_list) \
*(___ksymtab_gpl+pci_generic_config_read) \
*(___ksymtab_gpl+pci_generic_config_read32) \
*(___ksymtab_gpl+pci_generic_config_write) \
*(___ksymtab_gpl+pci_generic_config_write32) \
*(___ksymtab_gpl+pci_get_class) \
*(___ksymtab_gpl+pci_get_domain_bus_and_slot) \
*(___ksymtab_gpl+pci_get_subsys) \
*(___ksymtab_gpl+pci_ignore_hotplug) \
*(___ksymtab_gpl+pci_intx) \
*(___ksymtab_gpl+pci_iomap) \
*(___ksymtab_gpl+pci_iomap_range) \
*(___ksymtab_gpl+pci_iomap_wc) \
*(___ksymtab_gpl+pci_iomap_wc_range) \
*(___ksymtab_gpl+pci_load_and_free_saved_state) \
*(___ksymtab_gpl+pci_load_saved_state) \
*(___ksymtab_gpl+pci_lock_rescan_remove) \
*(___ksymtab_gpl+pci_map_rom) \
*(___ksymtab_gpl+pcim_enable_device) \
*(___ksymtab_gpl+pcim_iomap) \
*(___ksymtab_gpl+pcim_iomap_regions) \
*(___ksymtab_gpl+pcim_iomap_regions_request_all) \
*(___ksymtab_gpl+pcim_iomap_table) \
*(___ksymtab_gpl+pcim_pin_device) \
*(___ksymtab_gpl+pci_pci_problems) \
*(___ksymtab_gpl+pci_platform_rom) \
*(___ksymtab_gpl+pci_pme_active) \
*(___ksymtab_gpl+pci_power_names) \
*(___ksymtab_gpl+pci_prepare_to_sleep) \
*(___ksymtab_gpl+pci_probe_reset_bus) \
*(___ksymtab_gpl+pci_probe_reset_slot) \
*(___ksymtab_gpl+pci_read_vpd) \
*(___ksymtab_gpl+pci_reenable_device) \
*(___ksymtab_gpl+pci_release_region) \
*(___ksymtab_gpl+pci_release_regions) \
*(___ksymtab_gpl+pci_release_selected_regions) \
*(___ksymtab_gpl+pci_remove_bus) \
*(___ksymtab_gpl+pci_remove_root_bus) \
*(___ksymtab_gpl+pci_request_region) \
*(___ksymtab_gpl+pci_request_region_exclusive) \
*(___ksymtab_gpl+pci_request_regions) \
*(___ksymtab_gpl+pci_request_regions_exclusive) \
*(___ksymtab_gpl+pci_request_selected_regions) \
*(___ksymtab_gpl+pci_request_selected_regions_exclusive) \
*(___ksymtab_gpl+pci_rescan_bus) \
*(___ksymtab_gpl+pci_reset_bridge_secondary_bus) \
*(___ksymtab_gpl+pci_reset_bus) \
*(___ksymtab_gpl+__pci_reset_function) \
*(___ksymtab_gpl+pci_reset_function) \
*(___ksymtab_gpl+__pci_reset_function_locked) \
*(___ksymtab_gpl+pci_reset_slot) \
*(___ksymtab_gpl+pci_root_buses) \
*(___ksymtab_gpl+pci_scan_bridge) \
*(___ksymtab_gpl+pci_scan_bus) \
*(___ksymtab_gpl+pci_scan_child_bus) \
*(___ksymtab_gpl+pci_scan_root_bus) \
*(___ksymtab_gpl+pci_scan_single_device) \
*(___ksymtab_gpl+pci_scan_slot) \
*(___ksymtab_gpl+pci_select_bars) \
*(___ksymtab_gpl+pciserial_init_ports) \
*(___ksymtab_gpl+pciserial_remove_ports) \
*(___ksymtab_gpl+pciserial_resume_ports) \
*(___ksymtab_gpl+pciserial_suspend_ports) \
*(___ksymtab_gpl+pci_set_cacheline_size) \
*(___ksymtab_gpl+pci_set_dma_max_seg_size) \
*(___ksymtab_gpl+pci_set_dma_seg_boundary) \
*(___ksymtab_gpl+pci_set_pcie_reset_state) \
*(___ksymtab_gpl+pci_slots_kset) \
*(___ksymtab_gpl+pci_stop_and_remove_bus_device) \
*(___ksymtab_gpl+pci_stop_and_remove_bus_device_locked) \
*(___ksymtab_gpl+pci_stop_root_bus) \
*(___ksymtab_gpl+pci_store_saved_state) \
*(___ksymtab_gpl+pci_try_reset_bus) \
*(___ksymtab_gpl+pci_try_reset_function) \
*(___ksymtab_gpl+pci_try_reset_slot) \
*(___ksymtab_gpl+pci_try_set_mwi) \
*(___ksymtab_gpl+pci_unlock_rescan_remove) \
*(___ksymtab_gpl+pci_unmap_rom) \
*(___ksymtab_gpl+pci_user_write_config_byte) \
*(___ksymtab_gpl+pci_user_write_config_dword) \
*(___ksymtab_gpl+pci_user_write_config_word) \
*(___ksymtab_gpl+pci_vpd_find_info_keyword) \
*(___ksymtab_gpl+pci_vpd_find_tag) \
*(___ksymtab_gpl+pci_wait_for_pending_transaction) \
*(___ksymtab_gpl+pci_wake_from_d3) \
*(___ksymtab_gpl+pci_walk_bus) \
*(___ksymtab_gpl+pci_write_vpd) \
*(___ksymtab_gpl+pcix_get_max_mmrbc) \
*(___ksymtab_gpl+pcix_get_mmrbc) \
*(___ksymtab_gpl+pcix_set_mmrbc) \
*(___ksymtab_gpl+pcpu_base_addr) \
*(___ksymtab_gpl+pdesc25) \
*(___ksymtab_gpl+pdesc97) \
*(___ksymtab_gpl+__percpu_counter_compare) \
*(___ksymtab_gpl+percpu_counter_set) \
*(___ksymtab_gpl+percpu_ida_alloc) \
*(___ksymtab_gpl+percpu_ida_destroy) \
*(___ksymtab_gpl+percpu_ida_for_each_free) \
*(___ksymtab_gpl+percpu_ida_free) \
*(___ksymtab_gpl+percpu_ida_free_tags) \
*(___ksymtab_gpl+__percpu_ida_init) \
*(___ksymtab_gpl+__percpu_init_rwsem) \
*(___ksymtab_gpl+percpu_ref_exit) \
*(___ksymtab_gpl+percpu_ref_init) \
*(___ksymtab_gpl+percpu_ref_kill_and_confirm) \
*(___ksymtab_gpl+percpu_ref_reinit) \
*(___ksymtab_gpl+pfifo_qdisc_ops) \
*(___ksymtab_gpl+pfn_valid) \
*(___ksymtab_gpl+pgprot_kernel) \
*(___ksymtab_gpl+pgprot_user) \
*(___ksymtab_gpl+phy_attach) \
*(___ksymtab_gpl+phy_attach_direct) \
*(___ksymtab_gpl+phy_connect) \
*(___ksymtab_gpl+phy_connect_direct) \
*(___ksymtab_gpl+phy_create) \
*(___ksymtab_gpl+phy_destroy) \
*(___ksymtab_gpl+phy_detach) \
*(___ksymtab_gpl+phy_device_free) \
*(___ksymtab_gpl+phy_device_remove) \
*(___ksymtab_gpl+phy_disconnect) \
*(___ksymtab_gpl+phy_ethtool_get_eee) \
*(___ksymtab_gpl+phy_ethtool_get_wol) \
*(___ksymtab_gpl+phy_ethtool_gset) \
*(___ksymtab_gpl+phy_ethtool_ioctl) \
*(___ksymtab_gpl+phy_ethtool_set_eee) \
*(___ksymtab_gpl+phy_ethtool_set_wol) \
*(___ksymtab_gpl+phy_ethtool_sset) \
*(___ksymtab_gpl+phy_find_first) \
*(___ksymtab_gpl+phy_mii_ioctl) \
*(___ksymtab_gpl+phy_optional_get) \
*(___ksymtab_gpl+phy_pm_runtime_allow) \
*(___ksymtab_gpl+phy_pm_runtime_forbid) \
*(___ksymtab_gpl+phy_pm_runtime_get) \
*(___ksymtab_gpl+phy_pm_runtime_get_sync) \
*(___ksymtab_gpl+phy_pm_runtime_put) \
*(___ksymtab_gpl+phy_pm_runtime_put_sync) \
*(___ksymtab_gpl+phy_print_status) \
*(___ksymtab_gpl+phy_read_mmd_indirect) \
*(___ksymtab_gpl+phy_resume) \
*(___ksymtab_gpl+phy_set_max_speed) \
*(___ksymtab_gpl+phys_mem_access_prot) \
*(___ksymtab_gpl+phy_start) \
*(___ksymtab_gpl+phy_start_aneg) \
*(___ksymtab_gpl+phy_stop) \
*(___ksymtab_gpl+phy_suspend) \
*(___ksymtab_gpl+phy_write_mmd_indirect) \
*(___ksymtab_gpl+pid_task) \
*(___ksymtab_gpl+pid_vnr) \
*(___ksymtab_gpl+ping_prot) \
*(___ksymtab_gpl+pkpool_haddr_avail_register_cb) \
*(___ksymtab_gpl+pktdataoffset) \
*(___ksymtab_gpl+pktfrombuf) \
*(___ksymtab_gpl+pktoffset) \
*(___ksymtab_gpl+pktpool_add) \
*(___ksymtab_gpl+pktpool_attach) \
*(___ksymtab_gpl+pktpool_avail_notify_exclusive) \
*(___ksymtab_gpl+pktpool_avail_notify_normal) \
*(___ksymtab_gpl+pktpool_avail_register) \
*(___ksymtab_gpl+pktpool_deinit) \
*(___ksymtab_gpl+pktpool_dettach) \
*(___ksymtab_gpl+pktpool_emptycb_disable) \
*(___ksymtab_gpl+pktpool_emptycb_disabled) \
*(___ksymtab_gpl+pktpool_empty_register) \
*(___ksymtab_gpl+pktpool_fill) \
*(___ksymtab_gpl+pktpool_free) \
*(___ksymtab_gpl+pktpool_get) \
*(___ksymtab_gpl+pktpool_hostaddr_fill_register) \
*(___ksymtab_gpl+pktpool_init) \
*(___ksymtab_gpl+pktpool_invoke_dmarxfill) \
*(___ksymtab_gpl+pktpool_rxcplid_fill_register) \
*(___ksymtab_gpl+pktpool_setmaxlen) \
*(___ksymtab_gpl+pktpools_max) \
*(___ksymtab_gpl+pktpools_registry) \
*(___ksymtab_gpl+pktq_append) \
*(___ksymtab_gpl+pktq_deinit) \
*(___ksymtab_gpl+pktq_mpeek) \
*(___ksymtab_gpl+pktq_pdel) \
*(___ksymtab_gpl+pktq_peek) \
*(___ksymtab_gpl+pktq_prepend) \
*(___ksymtab_gpl+platform_add_devices) \
*(___ksymtab_gpl+__platform_create_bundle) \
*(___ksymtab_gpl+platform_device_alloc) \
*(___ksymtab_gpl+platform_device_put) \
*(___ksymtab_gpl+__platform_register_drivers) \
*(___ksymtab_gpl+platform_unregister_drivers) \
*(___ksymtab_gpl+pm_power_off) \
*(___ksymtab_gpl+pm_qos_add_notifier) \
*(___ksymtab_gpl+pm_qos_add_request) \
*(___ksymtab_gpl+pm_qos_remove_notifier) \
*(___ksymtab_gpl+pm_qos_remove_request) \
*(___ksymtab_gpl+pm_qos_request) \
*(___ksymtab_gpl+pm_qos_request_active) \
*(___ksymtab_gpl+poll_freewait) \
*(___ksymtab_gpl+poll_initwait) \
*(___ksymtab_gpl+posix_acl_equiv_mode) \
*(___ksymtab_gpl+posix_acl_from_mode) \
*(___ksymtab_gpl+posix_acl_from_xattr) \
*(___ksymtab_gpl+posix_acl_init) \
*(___ksymtab_gpl+posix_acl_to_xattr) \
*(___ksymtab_gpl+posix_acl_valid) \
*(___ksymtab_gpl+posix_clock_register) \
*(___ksymtab_gpl+posix_clock_unregister) \
*(___ksymtab_gpl+posix_timer_event) \
*(___ksymtab_gpl+posix_timers_register_clock) \
*(___ksymtab_gpl+ppp_channel_index) \
*(___ksymtab_gpl+ppp_register_compressor) \
*(___ksymtab_gpl+ppp_unit_number) \
*(___ksymtab_gpl+ppp_unregister_channel) \
*(___ksymtab_gpl+ppp_unregister_compressor) \
*(___ksymtab_gpl+prandom_bytes) \
*(___ksymtab_gpl+prandom_bytes_state) \
*(___ksymtab_gpl+prepare_binprm) \
*(___ksymtab_gpl+prepare_creds) \
*(___ksymtab_gpl+printbig) \
*(___ksymtab_gpl+__print_symbol) \
*(___ksymtab_gpl+private_AES_set_decrypt_key) \
*(___ksymtab_gpl+private_AES_set_encrypt_key) \
*(___ksymtab_gpl+probe_irq_mask) \
*(___ksymtab_gpl+probe_irq_off) \
*(___ksymtab_gpl+probe_irq_on) \
*(___ksymtab_gpl+probe_kernel_write) \
*(___ksymtab_gpl+probe_user_write) \
*(___ksymtab_gpl+proc_douintvec) \
*(___ksymtab_gpl+process_nvram_vars) \
*(___ksymtab_gpl+processor) \
*(___ksymtab_gpl+processor_id) \
*(___ksymtab_gpl+process_srcu) \
*(___ksymtab_gpl+proc_get_parent_data) \
*(___ksymtab_gpl+proc_set_size) \
*(___ksymtab_gpl+proc_set_user) \
*(___ksymtab_gpl+proc_symlink) \
*(___ksymtab_gpl+profile_pc) \
*(___ksymtab_gpl+psched_ratecfg_precompute) \
*(___ksymtab_gpl+put_io_context) \
*(___ksymtab_gpl+__put_mtd_device) \
*(___ksymtab_gpl+put_mtd_device) \
*(___ksymtab_gpl+put_unused_fd) \
*(___ksymtab_gpl+__put_user_8) \
*(___ksymtab_gpl+pvclock_gtod_register_notifier) \
*(___ksymtab_gpl+pvclock_gtod_unregister_notifier) \
*(___ksymtab_gpl+__pv_offset) \
*(___ksymtab_gpl+__pv_phys_pfn_offset) \
*(___ksymtab_gpl+qdisc_class_hash_destroy) \
*(___ksymtab_gpl+qdisc_class_hash_grow) \
*(___ksymtab_gpl+qdisc_class_hash_init) \
*(___ksymtab_gpl+qdisc_class_hash_insert) \
*(___ksymtab_gpl+qdisc_class_hash_remove) \
*(___ksymtab_gpl+qdisc_create_dflt) \
*(___ksymtab_gpl+qdisc_destroy) \
*(___ksymtab_gpl+qdisc_get_rtab) \
*(___ksymtab_gpl+qdisc_list_add) \
*(___ksymtab_gpl+qdisc_list_del) \
*(___ksymtab_gpl+qdisc_put_rtab) \
*(___ksymtab_gpl+qdisc_put_stab) \
*(___ksymtab_gpl+qdisc_reset) \
*(___ksymtab_gpl+qdisc_warn_nonwc) \
*(___ksymtab_gpl+qdisc_watchdog_cancel) \
*(___ksymtab_gpl+qdisc_watchdog_init) \
*(___ksymtab_gpl+queue_kthread_work) \
*(___ksymtab_gpl+radix_tree_next_chunk) \
*(___ksymtab_gpl+radix_tree_preload) \
*(___ksymtab_gpl+radix_tree_range_tag_if_tagged) \
*(___ksymtab_gpl+radix_tree_tagged) \
*(___ksymtab_gpl+random_input_wait) \
*(___ksymtab_gpl+random_input_words) \
*(___ksymtab_gpl+ras_userspace_consumers) \
*(___ksymtab_gpl+rational_best_approximation) \
*(___ksymtab_gpl+__raw_notifier_call_chain) \
*(___ksymtab_gpl+raw_notifier_call_chain) \
*(___ksymtab_gpl+raw_notifier_chain_register) \
*(___ksymtab_gpl+raw_notifier_chain_unregister) \
*(___ksymtab_gpl+__raw_readsb) \
*(___ksymtab_gpl+__raw_readsl) \
*(___ksymtab_gpl+__raw_readsw) \
*(___ksymtab_gpl+__raw_writesb) \
*(___ksymtab_gpl+__raw_writesl) \
*(___ksymtab_gpl+__raw_writesw) \
*(___ksymtab_gpl+__rb_insert_augmented) \
*(___ksymtab_gpl+rcu_all_qs) \
*(___ksymtab_gpl+rcu_batches_started) \
*(___ksymtab_gpl+rcu_batches_started_bh) \
*(___ksymtab_gpl+rcu_batches_started_sched) \
*(___ksymtab_gpl+rcu_bh_force_quiescent_state) \
*(___ksymtab_gpl+rcu_expedite_gp) \
*(___ksymtab_gpl+rcu_force_quiescent_state) \
*(___ksymtab_gpl+rcu_gp_is_expedited) \
*(___ksymtab_gpl+rcu_idle_enter) \
*(___ksymtab_gpl+rcu_idle_exit) \
*(___ksymtab_gpl+rcu_is_watching) \
*(___ksymtab_gpl+rcu_note_context_switch) \
*(___ksymtab_gpl+rcu_qs_ctr) \
*(___ksymtab_gpl+rcu_sched_force_quiescent_state) \
*(___ksymtab_gpl+rcutorture_get_gp_data) \
*(___ksymtab_gpl+rcutorture_record_progress) \
*(___ksymtab_gpl+rcutorture_record_test_transition) \
*(___ksymtab_gpl+rcu_unexpedite_gp) \
*(___ksymtab_gpl+read_code) \
*(___ksymtab_gpl+readlink_copy) \
*(___ksymtab_gpl+__readwrite_bug) \
*(___ksymtab_gpl+recalc_sigpending) \
*(___ksymtab_gpl+ref_module) \
*(___ksymtab_gpl+refresh_mtd_partitions) \
*(___ksymtab_gpl+register_8022_client) \
*(___ksymtab_gpl+__register_binfmt) \
*(___ksymtab_gpl+register_console) \
*(___ksymtab_gpl+__register_cpu_notifier) \
*(___ksymtab_gpl+register_cpu_notifier) \
*(___ksymtab_gpl+register_die_notifier) \
*(___ksymtab_gpl+register_gifconf) \
*(___ksymtab_gpl+register_inet6addr_notifier) \
*(___ksymtab_gpl+register_module_notifier) \
*(___ksymtab_gpl+register_mtd_blktrans) \
*(___ksymtab_gpl+register_mtd_chip_driver) \
*(___ksymtab_gpl+register_mtd_parser) \
*(___ksymtab_gpl+register_mtd_user) \
*(___ksymtab_gpl+register_netevent_notifier) \
*(___ksymtab_gpl+register_oom_notifier) \
*(___ksymtab_gpl+register_restart_handler) \
*(___ksymtab_gpl+register_snap_client) \
*(___ksymtab_gpl+register_syscore_ops) \
*(___ksymtab_gpl+register_sysctl) \
*(___ksymtab_gpl+register_sysctl_paths) \
*(___ksymtab_gpl+register_sysrq_key) \
*(___ksymtab_gpl+register_tcf_proto_ops) \
*(___ksymtab_gpl+relay_buf_full) \
*(___ksymtab_gpl+relay_close) \
*(___ksymtab_gpl+relay_file_operations) \
*(___ksymtab_gpl+relay_flush) \
*(___ksymtab_gpl+relay_open) \
*(___ksymtab_gpl+relay_reset) \
*(___ksymtab_gpl+relay_subbufs_consumed) \
*(___ksymtab_gpl+relay_switch_subbuf) \
*(___ksymtab_gpl+release_dentry_name_snapshot) \
*(___ksymtab_gpl+release_firmware) \
*(___ksymtab_gpl+release_resource) \
*(___ksymtab_gpl+remap_pfn_range) \
*(___ksymtab_gpl+remove_arg_zero) \
*(___ksymtab_gpl+__remove_inode_hash) \
*(___ksymtab_gpl+remove_irq) \
*(___ksymtab_gpl+remove_proc_subtree) \
*(___ksymtab_gpl+replace_mount_options) \
*(___ksymtab_gpl+request_any_context_irq) \
*(___ksymtab_gpl+request_firmware) \
*(___ksymtab_gpl+request_firmware_direct) \
*(___ksymtab_gpl+request_firmware_nowait) \
*(___ksymtab_gpl+request_percpu_irq) \
*(___ksymtab_gpl+request_resource) \
*(___ksymtab_gpl+reset_devices) \
*(___ksymtab_gpl+resource_list_create_entry) \
*(___ksymtab_gpl+resource_list_free) \
*(___ksymtab_gpl+return_address) \
*(___ksymtab_gpl+rfkill_blocked) \
*(___ksymtab_gpl+rfkill_pause_polling) \
*(___ksymtab_gpl+rfkill_resume_polling) \
*(___ksymtab_gpl+rfkill_set_states) \
*(___ksymtab_gpl+rfkill_set_sw_state) \
*(___ksymtab_gpl+rhashtable_destroy) \
*(___ksymtab_gpl+rhashtable_free_and_destroy) \
*(___ksymtab_gpl+rhashtable_insert_rehash) \
*(___ksymtab_gpl+rhashtable_insert_slow) \
*(___ksymtab_gpl+rhashtable_walk_exit) \
*(___ksymtab_gpl+rhashtable_walk_init) \
*(___ksymtab_gpl+rhashtable_walk_next) \
*(___ksymtab_gpl+rhashtable_walk_start) \
*(___ksymtab_gpl+rhashtable_walk_stop) \
*(___ksymtab_gpl+robo_eee_advertise_init) \
*(___ksymtab_gpl+robo_power_save_mode) \
*(___ksymtab_gpl+rps_may_expire_flow) \
*(___ksymtab_gpl+rtc_month_days) \
*(___ksymtab_gpl+rtc_time64_to_tm) \
*(___ksymtab_gpl+rtc_tm_to_ktime) \
*(___ksymtab_gpl+rtc_tm_to_time64) \
*(___ksymtab_gpl+rtc_valid_tm) \
*(___ksymtab_gpl+rtc_year_days) \
*(___ksymtab_gpl+rt_mutex_destroy) \
*(___ksymtab_gpl+__rt_mutex_init) \
*(___ksymtab_gpl+rt_mutex_timed_lock) \
*(___ksymtab_gpl+rtnl_configure_link) \
*(___ksymtab_gpl+rtnl_create_link) \
*(___ksymtab_gpl+rtnl_delete_link) \
*(___ksymtab_gpl+rtnl_is_locked) \
*(___ksymtab_gpl+rtnl_link_get_net) \
*(___ksymtab_gpl+rwsem_wake) \
*(___ksymtab_gpl+saved_command_line) \
*(___ksymtab_gpl+sb_addrspace) \
*(___ksymtab_gpl+sb_addrspacesize) \
*(___ksymtab_gpl+sb_base) \
*(___ksymtab_gpl+sb_commit) \
*(___ksymtab_gpl+sb_core_cflags) \
*(___ksymtab_gpl+sb_core_cflags_wo) \
*(___ksymtab_gpl+sb_core_disable) \
*(___ksymtab_gpl+sb_coreid) \
*(___ksymtab_gpl+sb_corereg) \
*(___ksymtab_gpl+sb_corereg_addr) \
*(___ksymtab_gpl+sb_core_reset) \
*(___ksymtab_gpl+sb_corerev) \
*(___ksymtab_gpl+sb_core_sflags) \
*(___ksymtab_gpl+sb_corevendor) \
*(___ksymtab_gpl+sb_flag) \
*(___ksymtab_gpl+sb_intflag) \
*(___ksymtab_gpl+sb_numaddrspaces) \
*(___ksymtab_gpl+sb_scan) \
*(___ksymtab_gpl+sb_setcoreidx) \
*(___ksymtab_gpl+sb_set_initiator_to) \
*(___ksymtab_gpl+sb_setint) \
*(___ksymtab_gpl+sb_size) \
*(___ksymtab_gpl+scatterwalk_bytes_sglen) \
*(___ksymtab_gpl+scatterwalk_copychunks) \
*(___ksymtab_gpl+scatterwalk_done) \
*(___ksymtab_gpl+scatterwalk_map) \
*(___ksymtab_gpl+scatterwalk_start) \
*(___ksymtab_gpl+sched_clock) \
*(___ksymtab_gpl+sched_setattr) \
*(___ksymtab_gpl+__scm_destroy) \
*(___ksymtab_gpl+scm_detach_fds) \
*(___ksymtab_gpl+__scm_send) \
*(___ksymtab_gpl+scsi_cmd_ioctl) \
*(___ksymtab_gpl+search_binary_handler) \
*(___ksymtab_gpl+secure_ipv4_port_ephemeral) \
*(___ksymtab_gpl+seq_dentry) \
*(___ksymtab_gpl+seq_hex_dump) \
*(___ksymtab_gpl+seq_hlist_next) \
*(___ksymtab_gpl+seq_hlist_next_percpu) \
*(___ksymtab_gpl+seq_hlist_next_rcu) \
*(___ksymtab_gpl+seq_hlist_start) \
*(___ksymtab_gpl+seq_hlist_start_head) \
*(___ksymtab_gpl+seq_hlist_start_head_rcu) \
*(___ksymtab_gpl+seq_hlist_start_percpu) \
*(___ksymtab_gpl+seq_hlist_start_rcu) \
*(___ksymtab_gpl+seq_list_next) \
*(___ksymtab_gpl+seq_list_start) \
*(___ksymtab_gpl+seq_list_start_head) \
*(___ksymtab_gpl+seq_pad) \
*(___ksymtab_gpl+seq_path) \
*(___ksymtab_gpl+seq_print_acct) \
*(___ksymtab_gpl+seq_put_decimal_ll) \
*(___ksymtab_gpl+seq_put_decimal_ull) \
*(___ksymtab_gpl+seq_vprintf) \
*(___ksymtab_gpl+seq_write) \
*(___ksymtab_gpl+serial8250_clear_and_reinit_fifos) \
*(___ksymtab_gpl+serial8250_do_pm) \
*(___ksymtab_gpl+serial8250_do_set_mctrl) \
*(___ksymtab_gpl+serial8250_do_set_termios) \
*(___ksymtab_gpl+serial8250_get_port) \
*(___ksymtab_gpl+serial8250_handle_irq) \
*(___ksymtab_gpl+serial8250_init_port) \
*(___ksymtab_gpl+serial8250_modem_status) \
*(___ksymtab_gpl+serial8250_register_8250_port) \
*(___ksymtab_gpl+serial8250_resume_port) \
*(___ksymtab_gpl+serial8250_rpm_get) \
*(___ksymtab_gpl+serial8250_rpm_put) \
*(___ksymtab_gpl+serial8250_rx_chars) \
*(___ksymtab_gpl+serial8250_set_defaults) \
*(___ksymtab_gpl+serial8250_set_isa_configurator) \
*(___ksymtab_gpl+serial8250_suspend_port) \
*(___ksymtab_gpl+serial8250_tx_chars) \
*(___ksymtab_gpl+serial8250_unregister_port) \
*(___ksymtab_gpl+set_binfmt) \
*(___ksymtab_gpl+set_bitrange) \
*(___ksymtab_gpl+set_cpus_allowed_ptr) \
*(___ksymtab_gpl+set_create_files_as) \
*(___ksymtab_gpl+set_device_ro) \
*(___ksymtab_gpl+set_hc595) \
*(___ksymtab_gpl+set_hc595_core) \
*(___ksymtab_gpl+set_hc595_reset) \
*(___ksymtab_gpl+set_normalized_timespec) \
*(___ksymtab_gpl+set_normalized_timespec64) \
*(___ksymtab_gpl+set_posix_acl) \
*(___ksymtab_gpl+set_primary_fwnode) \
*(___ksymtab_gpl+set_security_override) \
*(___ksymtab_gpl+set_security_override_from_ctx) \
*(___ksymtab_gpl+sg_alloc_table) \
*(___ksymtab_gpl+sg_alloc_table_from_pages) \
*(___ksymtab_gpl+sg_copy_buffer) \
*(___ksymtab_gpl+sg_copy_from_buffer) \
*(___ksymtab_gpl+sg_copy_to_buffer) \
*(___ksymtab_gpl+sg_free_table) \
*(___ksymtab_gpl+sg_last) \
*(___ksymtab_gpl+__sg_page_iter_next) \
*(___ksymtab_gpl+__sg_page_iter_start) \
*(___ksymtab_gpl+sg_pcopy_from_buffer) \
*(___ksymtab_gpl+sg_pcopy_to_buffer) \
*(___ksymtab_gpl+shash_ahash_digest) \
*(___ksymtab_gpl+shash_attr_alg) \
*(___ksymtab_gpl+shash_no_setkey) \
*(___ksymtab_gpl+shmem_read_mapping_page_gfp) \
*(___ksymtab_gpl+shmem_set_file) \
*(___ksymtab_gpl+shmem_truncate_range) \
*(___ksymtab_gpl+show_class_attr_string) \
*(___ksymtab_gpl+show_rcu_gp_kthreads) \
*(___ksymtab_gpl+shrink_dcache_sb) \
*(___ksymtab_gpl+si_addrspace) \
*(___ksymtab_gpl+si_addrspacesize) \
*(___ksymtab_gpl+si_backplane64) \
*(___ksymtab_gpl+si_bpind_access) \
*(___ksymtab_gpl+si_cc_get_reg16) \
*(___ksymtab_gpl+si_cc_get_reg32) \
*(___ksymtab_gpl+si_cc_set_reg32) \
*(___ksymtab_gpl+si_chipcontrl_read) \
*(___ksymtab_gpl+si_chipcontrl_restore) \
*(___ksymtab_gpl+si_chip_hostif) \
*(___ksymtab_gpl+si_chipid) \
*(___ksymtab_gpl+si_chippkg_set) \
*(___ksymtab_gpl+si_cis_source) \
*(___ksymtab_gpl+si_clear_backplane_to) \
*(___ksymtab_gpl+si_coded_devpathvar) \
*(___ksymtab_gpl+si_config_4364_d11_oob) \
*(___ksymtab_gpl+si_config_53573_d11_oob) \
*(___ksymtab_gpl+si_coreaddrspaceX) \
*(___ksymtab_gpl+si_corebist) \
*(___ksymtab_gpl+si_corelist) \
*(___ksymtab_gpl+si_corepciid) \
*(___ksymtab_gpl+si_corevendor) \
*(___ksymtab_gpl+si_core_wrapperreg) \
*(___ksymtab_gpl+si_d11_devid) \
*(___ksymtab_gpl+si_d11_switch_addrbase) \
*(___ksymtab_gpl+si_deepsleep_count) \
*(___ksymtab_gpl+si_devpath) \
*(___ksymtab_gpl+si_devpath_pcie) \
*(___ksymtab_gpl+si_enable_device_wake) \
*(___ksymtab_gpl+si_enable_perst_wake) \
*(___ksymtab_gpl+si_findcoreidx) \
*(___ksymtab_gpl+si_flag) \
*(___ksymtab_gpl+si_flag_alt) \
*(___ksymtab_gpl+si_gci_chipctrl_overrides) \
*(___ksymtab_gpl+si_gci_chipstatus) \
*(___ksymtab_gpl+si_gci_clear_functionsel) \
*(___ksymtab_gpl+si_gci_config_wake_pin) \
*(___ksymtab_gpl+si_gci_direct) \
*(___ksymtab_gpl+si_gci_free_wake_pin) \
*(___ksymtab_gpl+si_gci_get_functionsel) \
*(___ksymtab_gpl+si_gci_gpioint_handler_register) \
*(___ksymtab_gpl+si_gci_gpioint_handler_unregister) \
*(___ksymtab_gpl+si_gci_gpio_status) \
*(___ksymtab_gpl+si_gci_handler_process) \
*(___ksymtab_gpl+si_gci_host_wake_gpio_enable) \
*(___ksymtab_gpl+si_gci_host_wake_gpio_init) \
*(___ksymtab_gpl+si_gci_indirect) \
*(___ksymtab_gpl+si_gci_input) \
*(___ksymtab_gpl+si_gci_int_enable) \
*(___ksymtab_gpl+si_gci_output) \
*(___ksymtab_gpl+si_gci_reset) \
*(___ksymtab_gpl+si_gci_set_femctrl) \
*(___ksymtab_gpl+si_gci_set_functionsel) \
*(___ksymtab_gpl+si_gci_uart_init) \
*(___ksymtab_gpl+si_getdevpathintvar) \
*(___ksymtab_gpl+si_getdevpathvar) \
*(___ksymtab_gpl+si_get_macclk_mul_fact) \
*(___ksymtab_gpl+si_getnvramflvar) \
*(___ksymtab_gpl+si_gpioevent) \
*(___ksymtab_gpl+si_gpioeventintmask) \
*(___ksymtab_gpl+si_gpio_int_enable) \
*(___ksymtab_gpl+si_gpiorelease) \
*(___ksymtab_gpl+si_gpioreserve) \
*(___ksymtab_gpl+si_ilp_clock) \
*(___ksymtab_gpl+si_intflag) \
*(___ksymtab_gpl+si_is_otp_disabled) \
*(___ksymtab_gpl+si_is_otp_powered) \
*(___ksymtab_gpl+si_mem_available) \
*(___ksymtab_gpl+simple_dentry_operations) \
*(___ksymtab_gpl+simple_dname) \
*(___ksymtab_gpl+simple_getattr) \
*(___ksymtab_gpl+simple_link) \
*(___ksymtab_gpl+simple_map_init) \
*(___ksymtab_gpl+simple_nosetlease) \
*(___ksymtab_gpl+simple_readpage) \
*(___ksymtab_gpl+simple_rename) \
*(___ksymtab_gpl+simple_rmdir) \
*(___ksymtab_gpl+simple_setattr) \
*(___ksymtab_gpl+simple_strtol) \
*(___ksymtab_gpl+simple_strtoll) \
*(___ksymtab_gpl+simple_symlink_inode_operations) \
*(___ksymtab_gpl+simple_transaction_get) \
*(___ksymtab_gpl+simple_transaction_read) \
*(___ksymtab_gpl+simple_transaction_release) \
*(___ksymtab_gpl+simple_transaction_set) \
*(___ksymtab_gpl+simple_unlink) \
*(___ksymtab_gpl+simple_write_begin) \
*(___ksymtab_gpl+simple_write_to_buffer) \
*(___ksymtab_gpl+si_muxenab) \
*(___ksymtab_gpl+single_task_running) \
*(___ksymtab_gpl+si_numaddrspaces) \
*(___ksymtab_gpl+si_numcoreunits) \
*(___ksymtab_gpl+si_numd11coreunits) \
*(___ksymtab_gpl+si_otp_fabid) \
*(___ksymtab_gpl+si_otp_power) \
*(___ksymtab_gpl+si_pcie_configspace_get) \
*(___ksymtab_gpl+si_pcie_disable_oobselltr) \
*(___ksymtab_gpl+si_pcie_get_bar0) \
*(___ksymtab_gpl+si_pcie_get_maxpayload_size) \
*(___ksymtab_gpl+si_pcie_get_ssid) \
*(___ksymtab_gpl+si_pcie_hw_L1SS_war) \
*(___ksymtab_gpl+si_pcieltrhysteresiscnt_reg) \
*(___ksymtab_gpl+si_pcieltr_reg) \
*(___ksymtab_gpl+si_pcieltrspacing_reg) \
*(___ksymtab_gpl+si_pcie_prep_D3) \
*(___ksymtab_gpl+si_pcie_readreg) \
*(___ksymtab_gpl+si_pcie_set_error_injection) \
*(___ksymtab_gpl+si_pcie_writereg) \
*(___ksymtab_gpl+si_pci_pmeclr) \
*(___ksymtab_gpl+si_pci_pmeen) \
*(___ksymtab_gpl+si_pci_pmestat) \
*(___ksymtab_gpl+si_pci_pmestatclr) \
*(___ksymtab_gpl+siphash_1u32) \
*(___ksymtab_gpl+siphash_1u64) \
*(___ksymtab_gpl+siphash_2u64) \
*(___ksymtab_gpl+siphash_3u32) \
*(___ksymtab_gpl+siphash_3u64) \
*(___ksymtab_gpl+siphash_4u64) \
*(___ksymtab_gpl+__siphash_aligned) \
*(___ksymtab_gpl+si_pll_closeloop) \
*(___ksymtab_gpl+si_pll_minresmask_reset) \
*(___ksymtab_gpl+si_pll_reset) \
*(___ksymtab_gpl+si_pll_sr_reinit) \
*(___ksymtab_gpl+si_pmu_alp_clock) \
*(___ksymtab_gpl+si_pmu_avb_clk_set) \
*(___ksymtab_gpl+si_pmu_avbtimer_enable) \
*(___ksymtab_gpl+si_pmu_cal_fvco) \
*(___ksymtab_gpl+si_pmu_corereg) \
*(___ksymtab_gpl+si_pmu_cpu_clock) \
*(___ksymtab_gpl+si_pmu_def_alp_clock) \
*(___ksymtab_gpl+si_pmu_dump_buf_size_pmucap) \
*(___ksymtab_gpl+si_pmu_dump_pmucap_binary) \
*(___ksymtab_gpl+si_pmu_force_ilp) \
*(___ksymtab_gpl+si_pmu_fvco_pllreg) \
*(___ksymtab_gpl+si_pmu_get_pmutime_diff) \
*(___ksymtab_gpl+si_pmu_get_pmutimer) \
*(___ksymtab_gpl+si_pmu_ilp_clock) \
*(___ksymtab_gpl+si_pmu_ilp_clock_set) \
*(___ksymtab_gpl+si_pmu_init) \
*(___ksymtab_gpl+si_pmu_is_otp_powered) \
*(___ksymtab_gpl+si_pmu_is_sprom_enabled) \
*(___ksymtab_gpl+si_pmu_measure_alpclk) \
*(___ksymtab_gpl+si_pmu_mem_clock) \
*(___ksymtab_gpl+si_pmu_minresmask_htavail_set) \
*(___ksymtab_gpl+si_pmu_otp_chipcontrol) \
*(___ksymtab_gpl+si_pmu_otp_pllcontrol) \
*(___ksymtab_gpl+si_pmu_otp_power) \
*(___ksymtab_gpl+si_pmu_otp_regcontrol) \
*(___ksymtab_gpl+si_pmu_paref_ldo_enable) \
*(___ksymtab_gpl+si_pmu_pll_init) \
*(___ksymtab_gpl+si_pmu_pll_off_PARR) \
*(___ksymtab_gpl+si_pmu_pllreset) \
*(___ksymtab_gpl+si_pmu_rcal) \
*(___ksymtab_gpl+si_pmu_reset_ret_sleep_log) \
*(___ksymtab_gpl+si_pmu_res_req_timer_clr) \
*(___ksymtab_gpl+si_pmu_set_4330_plldivs) \
*(___ksymtab_gpl+si_pmu_set_switcher_voltage) \
*(___ksymtab_gpl+si_pmu_set_ulbmode) \
*(___ksymtab_gpl+si_pmu_sprom_enable) \
*(___ksymtab_gpl+si_pmu_switch_off_PARLDO) \
*(___ksymtab_gpl+si_pmu_swreg_init) \
*(___ksymtab_gpl+si_pmu_waitforclk_on_backplane) \
*(___ksymtab_gpl+si_pmu_wait_for_res_pending) \
*(___ksymtab_gpl+si_pmu_wait_for_steady_state) \
*(___ksymtab_gpl+si_sdiod_drive_strength_init) \
*(___ksymtab_gpl+si_setint) \
*(___ksymtab_gpl+si_setosh) \
*(___ksymtab_gpl+si_slave_wrapper_add) \
*(___ksymtab_gpl+si_socdevram) \
*(___ksymtab_gpl+si_socdevram_pkg) \
*(___ksymtab_gpl+si_socdevram_remap_isenb) \
*(___ksymtab_gpl+si_socdevram_remap_size) \
*(___ksymtab_gpl+si_socdevram_size) \
*(___ksymtab_gpl+si_socram_size) \
*(___ksymtab_gpl+si_socram_srmem_size) \
*(___ksymtab_gpl+si_survive_perst_war) \
*(___ksymtab_gpl+si_swdenable) \
*(___ksymtab_gpl+si_taclear) \
*(___ksymtab_gpl+si_wrapperreg) \
*(___ksymtab_gpl+si_wrapperregs) \
*(___ksymtab_gpl+__sk_backlog_rcv) \
*(___ksymtab_gpl+skb_add_rx_frag) \
*(___ksymtab_gpl+skb_append) \
*(___ksymtab_gpl+skb_append_pagefrags) \
*(___ksymtab_gpl+skb_coalesce_rx_frag) \
*(___ksymtab_gpl+skb_ensure_writable) \
*(___ksymtab_gpl+skb_find_text) \
*(___ksymtab_gpl+skb_flow_dissector_init) \
*(___ksymtab_gpl+skb_get_hash_perturb) \
*(___ksymtab_gpl+skb_insert) \
*(___ksymtab_gpl+skb_mac_gso_segment) \
*(___ksymtab_gpl+skb_orphan_partial) \
*(___ksymtab_gpl+skb_pad) \
*(___ksymtab_gpl+skb_page_frag_refill) \
*(___ksymtab_gpl+skb_segment) \
*(___ksymtab_gpl+skb_splice_bits) \
*(___ksymtab_gpl+__skb_tx_hash) \
*(___ksymtab_gpl+skb_vlan_pop) \
*(___ksymtab_gpl+skb_vlan_push) \
*(___ksymtab_gpl+skb_vlan_untag) \
*(___ksymtab_gpl+skb_zerocopy) \
*(___ksymtab_gpl+skb_zerocopy_headlen) \
*(___ksymtab_gpl+sk_clear_memalloc) \
*(___ksymtab_gpl+sk_clone_lock) \
*(___ksymtab_gpl+__sk_mem_reclaim) \
*(___ksymtab_gpl+sk_reset_timer) \
*(___ksymtab_gpl+sk_set_memalloc) \
*(___ksymtab_gpl+sk_stop_timer) \
*(___ksymtab_gpl+sk_stream_error) \
*(___ksymtab_gpl+sk_stream_kill_queues) \
*(___ksymtab_gpl+sk_stream_wait_close) \
*(___ksymtab_gpl+sk_stream_wait_connect) \
*(___ksymtab_gpl+sk_stream_wait_memory) \
*(___ksymtab_gpl+sk_stream_write_space) \
*(___ksymtab_gpl+sk_wait_data) \
*(___ksymtab_gpl+slhc_compress) \
*(___ksymtab_gpl+slhc_free) \
*(___ksymtab_gpl+slhc_init) \
*(___ksymtab_gpl+slhc_remember) \
*(___ksymtab_gpl+slhc_toss) \
*(___ksymtab_gpl+slhc_uncompress) \
*(___ksymtab_gpl+smpboot_register_percpu_thread_cpumask) \
*(___ksymtab_gpl+smpboot_unregister_percpu_thread) \
*(___ksymtab_gpl+smp_call_function) \
*(___ksymtab_gpl+smp_call_function_any) \
*(___ksymtab_gpl+smp_call_function_many) \
*(___ksymtab_gpl+smp_call_function_single) \
*(___ksymtab_gpl+smp_call_function_single_async) \
*(___ksymtab_gpl+snmp_get_cpu_field) \
*(___ksymtab_gpl+sock_alloc_file) \
*(___ksymtab_gpl+sock_cmsg_send) \
*(___ksymtab_gpl+sock_create) \
*(___ksymtab_gpl+sock_create_lite) \
*(___ksymtab_gpl+sock_efree) \
*(___ksymtab_gpl+sock_from_file) \
*(___ksymtab_gpl+sock_gen_put) \
*(___ksymtab_gpl+sock_no_connect) \
*(___ksymtab_gpl+sock_no_getname) \
*(___ksymtab_gpl+sock_no_ioctl) \
*(___ksymtab_gpl+sock_recvmsg) \
*(___ksymtab_gpl+sock_sendmsg) \
*(___ksymtab_gpl+sock_setsockopt) \
*(___ksymtab_gpl+sock_wake_async) \
*(___ksymtab_gpl+softnet_data) \
*(___ksymtab_gpl+spi_add_device) \
*(___ksymtab_gpl+spi_alloc_device) \
*(___ksymtab_gpl+spi_bus_lock) \
*(___ksymtab_gpl+spi_busnum_to_master) \
*(___ksymtab_gpl+spi_bus_type) \
*(___ksymtab_gpl+spi_bus_unlock) \
*(___ksymtab_gpl+spi_finalize_current_message) \
*(___ksymtab_gpl+spi_finalize_current_transfer) \
*(___ksymtab_gpl+spi_get_next_queued_message) \
*(___ksymtab_gpl+spi_master_resume) \
*(___ksymtab_gpl+spi_master_suspend) \
*(___ksymtab_gpl+spi_new_device) \
*(___ksymtab_gpl+__spi_register_driver) \
*(___ksymtab_gpl+spi_statistics_add_transfer_stats) \
*(___ksymtab_gpl+splice_direct_to_actor) \
*(___ksymtab_gpl+__splice_from_pipe) \
*(___ksymtab_gpl+splice_to_pipe) \
*(___ksymtab_gpl+split_page) \
*(___ksymtab_gpl+sprint_symbol) \
*(___ksymtab_gpl+sprint_symbol_no_offset) \
*(___ksymtab_gpl+srcu_init_notifier_head) \
*(___ksymtab_gpl+__srcu_notifier_call_chain) \
*(___ksymtab_gpl+srcu_notifier_call_chain) \
*(___ksymtab_gpl+srcu_notifier_chain_register) \
*(___ksymtab_gpl+srcu_notifier_chain_unregister) \
*(___ksymtab_gpl+__srcu_read_lock) \
*(___ksymtab_gpl+__srcu_read_unlock) \
*(___ksymtab_gpl+srom_otp_write_region_crc) \
*(___ksymtab_gpl+srom_parsecis) \
*(___ksymtab_gpl+srom_var_deinit) \
*(___ksymtab_gpl+srom_var_init) \
*(___ksymtab_gpl+start_tty) \
*(___ksymtab_gpl+static_key_deferred_flush) \
*(___ksymtab_gpl+static_key_initialized) \
*(___ksymtab_gpl+static_key_slow_dec) \
*(___ksymtab_gpl+static_key_slow_dec_deferred) \
*(___ksymtab_gpl+stop_machine) \
*(___ksymtab_gpl+stop_tty) \
*(___ksymtab_gpl+strim) \
*(___ksymtab_gpl+string_escape_mem) \
*(___ksymtab_gpl+string_unescape) \
*(___ksymtab_gpl+strlcat) \
*(___ksymtab_gpl+strnstr) \
*(___ksymtab_gpl+subsys_dev_iter_exit) \
*(___ksymtab_gpl+subsys_dev_iter_init) \
*(___ksymtab_gpl+subsys_dev_iter_next) \
*(___ksymtab_gpl+subsys_find_device_by_id) \
*(___ksymtab_gpl+subsys_interface_register) \
*(___ksymtab_gpl+subsys_interface_unregister) \
*(___ksymtab_gpl+subsys_system_register) \
*(___ksymtab_gpl+subsys_virtual_register) \
*(___ksymtab_gpl+__sw_hweight16) \
*(___ksymtab_gpl+__sw_hweight64) \
*(___ksymtab_gpl+__sw_hweight8) \
*(___ksymtab_gpl+swiotlb_alloc_coherent) \
*(___ksymtab_gpl+swiotlb_free_coherent) \
*(___ksymtab_gpl+swiotlb_map_page) \
*(___ksymtab_gpl+swiotlb_map_sg) \
*(___ksymtab_gpl+swiotlb_map_sg_attrs) \
*(___ksymtab_gpl+swiotlb_nr_tbl) \
*(___ksymtab_gpl+swiotlb_sync_sg_for_cpu) \
*(___ksymtab_gpl+swiotlb_sync_sg_for_device) \
*(___ksymtab_gpl+swiotlb_sync_single_for_cpu) \
*(___ksymtab_gpl+swiotlb_sync_single_for_device) \
*(___ksymtab_gpl+swiotlb_tbl_map_single) \
*(___ksymtab_gpl+swiotlb_tbl_sync_single) \
*(___ksymtab_gpl+swiotlb_tbl_unmap_single) \
*(___ksymtab_gpl+swiotlb_unmap_page) \
*(___ksymtab_gpl+swiotlb_unmap_sg) \
*(___ksymtab_gpl+swiotlb_unmap_sg_attrs) \
*(___ksymtab_gpl+__symbol_get) \
*(___ksymtab_gpl+__symbol_put) \
*(___ksymtab_gpl+symbol_put_addr) \
*(___ksymtab_gpl+synchronize_hardirq) \
*(___ksymtab_gpl+synchronize_rcu_bh) \
*(___ksymtab_gpl+synchronize_rcu_expedited) \
*(___ksymtab_gpl+synchronize_srcu) \
*(___ksymtab_gpl+synchronize_srcu_expedited) \
*(___ksymtab_gpl+sync_inode) \
*(___ksymtab_gpl+sync_inodes_sb) \
*(___ksymtab_gpl+sys_close) \
*(___ksymtab_gpl+sysctl_max_skb_frags) \
*(___ksymtab_gpl+sysctl_max_syn_backlog) \
*(___ksymtab_gpl+sysctl_tcp_low_latency) \
*(___ksymtab_gpl+sysctl_tcp_reordering) \
*(___ksymtab_gpl+sysfs_chmod_file) \
*(___ksymtab_gpl+sysfs_create_bin_file) \
*(___ksymtab_gpl+sysfs_create_files) \
*(___ksymtab_gpl+sysfs_format_mac) \
*(___ksymtab_gpl+sysfs_notify) \
*(___ksymtab_gpl+sysfs_remove_bin_file) \
*(___ksymtab_gpl+sysfs_remove_files) \
*(___ksymtab_gpl+sysfs_rename_link_ns) \
*(___ksymtab_gpl+system_freezable_power_efficient_wq) \
*(___ksymtab_gpl+system_highpri_wq) \
*(___ksymtab_gpl+system_rev) \
*(___ksymtab_gpl+system_serial) \
*(___ksymtab_gpl+system_serial_high) \
*(___ksymtab_gpl+system_serial_low) \
*(___ksymtab_gpl+system_unbound_wq) \
*(___ksymtab_gpl+take_dentry_name_snapshot) \
*(___ksymtab_gpl+task_cputime_adjusted) \
*(___ksymtab_gpl+task_user_regset_view) \
*(___ksymtab_gpl+tc_classify) \
*(___ksymtab_gpl+tcf_action_dump_1) \
*(___ksymtab_gpl+tcf_action_exec) \
*(___ksymtab_gpl+tcf_destroy_chain) \
*(___ksymtab_gpl+tcf_exts_change) \
*(___ksymtab_gpl+tcf_exts_destroy) \
*(___ksymtab_gpl+tcf_exts_dump) \
*(___ksymtab_gpl+tcf_exts_dump_stats) \
*(___ksymtab_gpl+tcf_exts_validate) \
*(___ksymtab_gpl+tcf_hash_check) \
*(___ksymtab_gpl+tcf_hash_create) \
*(___ksymtab_gpl+tcf_hash_insert) \
*(___ksymtab_gpl+tcf_hash_new_index) \
*(___ksymtab_gpl+__tcf_hash_release) \
*(___ksymtab_gpl+tcf_hash_search) \
*(___ksymtab_gpl+tcf_register_action) \
*(___ksymtab_gpl+tcf_unregister_action) \
*(___ksymtab_gpl+tcp_ca_get_name_by_key) \
*(___ksymtab_gpl+tcp_cong_avoid_ai) \
*(___ksymtab_gpl+tcp_enter_cwr) \
*(___ksymtab_gpl+tcp_enter_quickack_mode) \
*(___ksymtab_gpl+tcp_get_info) \
*(___ksymtab_gpl+tcp_openreq_init_rwin) \
*(___ksymtab_gpl+tcp_peer_is_proven) \
*(___ksymtab_gpl+tcp_read_sock) \
*(___ksymtab_gpl+tcp_register_congestion_control) \
*(___ksymtab_gpl+tcp_reno_cong_avoid) \
*(___ksymtab_gpl+tcp_reno_ssthresh) \
*(___ksymtab_gpl+__tcp_send_ack) \
*(___ksymtab_gpl+tcp_slow_start) \
*(___ksymtab_gpl+tcp_unregister_congestion_control) \
*(___ksymtab_gpl+tcp_vegas_cwnd_event) \
*(___ksymtab_gpl+tcp_vegas_get_info) \
*(___ksymtab_gpl+tcp_vegas_init) \
*(___ksymtab_gpl+tcp_vegas_pkts_acked) \
*(___ksymtab_gpl+tcp_vegas_state) \
*(___ksymtab_gpl+_test_and_change_bit) \
*(___ksymtab_gpl+test_taint) \
*(___ksymtab_gpl+textsearch_destroy) \
*(___ksymtab_gpl+textsearch_find_continuous) \
*(___ksymtab_gpl+textsearch_prepare) \
*(___ksymtab_gpl+textsearch_register) \
*(___ksymtab_gpl+textsearch_unregister) \
*(___ksymtab_gpl+thaw_bdev) \
*(___ksymtab_gpl+thread_notify_head) \
*(___ksymtab_gpl+tick_broadcast_control) \
*(___ksymtab_gpl+tick_broadcast_oneshot_control) \
*(___ksymtab_gpl+timecounter_cyc2time) \
*(___ksymtab_gpl+timecounter_init) \
*(___ksymtab_gpl+timecounter_read) \
*(___ksymtab_gpl+timekeeping_inject_offset) \
*(___ksymtab_gpl+timerqueue_add) \
*(___ksymtab_gpl+timerqueue_del) \
*(___ksymtab_gpl+timerqueue_iterate_next) \
*(___ksymtab_gpl+timespec_trunc) \
*(___ksymtab_gpl+totalhigh_pages) \
*(___ksymtab_gpl+touch_buffer) \
*(___ksymtab_gpl+transport_class_register) \
*(___ksymtab_gpl+tso_build_data) \
*(___ksymtab_gpl+tso_build_hdr) \
*(___ksymtab_gpl+tso_count_descs) \
*(___ksymtab_gpl+tso_start) \
*(___ksymtab_gpl+tty_buffer_lock_exclusive) \
*(___ksymtab_gpl+tty_buffer_set_limit) \
*(___ksymtab_gpl+tty_buffer_space_avail) \
*(___ksymtab_gpl+tty_buffer_unlock_exclusive) \
*(___ksymtab_gpl+tty_chars_in_buffer) \
*(___ksymtab_gpl+tty_check_change) \
*(___ksymtab_gpl+tty_devnum) \
*(___ksymtab_gpl+tty_do_resize) \
*(___ksymtab_gpl+tty_driver_flush_buffer) \
*(___ksymtab_gpl+tty_driver_kref_put) \
*(___ksymtab_gpl+tty_free_termios) \
*(___ksymtab_gpl+tty_get_pgrp) \
*(___ksymtab_gpl+tty_init_termios) \
*(___ksymtab_gpl+tty_insert_flip_string_flags) \
*(___ksymtab_gpl+tty_ldisc_flush) \
*(___ksymtab_gpl+tty_lock) \
*(___ksymtab_gpl+tty_mode_ioctl) \
*(___ksymtab_gpl+tty_mutex) \
*(___ksymtab_gpl+tty_name) \
*(___ksymtab_gpl+tty_perform_flush) \
*(___ksymtab_gpl+tty_port_alloc_xmit_buf) \
*(___ksymtab_gpl+tty_port_block_til_ready) \
*(___ksymtab_gpl+tty_port_carrier_raised) \
*(___ksymtab_gpl+tty_port_free_xmit_buf) \
*(___ksymtab_gpl+tty_port_link_device) \
*(___ksymtab_gpl+tty_port_lower_dtr_rts) \
*(___ksymtab_gpl+tty_port_raise_dtr_rts) \
*(___ksymtab_gpl+tty_prepare_flip_string) \
*(___ksymtab_gpl+tty_put_char) \
*(___ksymtab_gpl+tty_register_ldisc) \
*(___ksymtab_gpl+tty_set_termios) \
*(___ksymtab_gpl+tty_termios_input_baud_rate) \
*(___ksymtab_gpl+tty_throttle) \
*(___ksymtab_gpl+tty_unlock) \
*(___ksymtab_gpl+tty_unregister_ldisc) \
*(___ksymtab_gpl+tty_unthrottle) \
*(___ksymtab_gpl+tty_wait_until_sent) \
*(___ksymtab_gpl+tty_write_room) \
*(___ksymtab_gpl+twd_timer_get_rate) \
*(___ksymtab_gpl+uart_add_one_port) \
*(___ksymtab_gpl+uart_console_write) \
*(___ksymtab_gpl+uart_get_baud_rate) \
*(___ksymtab_gpl+uart_get_divisor) \
*(___ksymtab_gpl+uart_handle_cts_change) \
*(___ksymtab_gpl+uart_handle_dcd_change) \
*(___ksymtab_gpl+uart_insert_char) \
*(___ksymtab_gpl+uart_match_port) \
*(___ksymtab_gpl+uart_parse_earlycon) \
*(___ksymtab_gpl+uart_parse_options) \
*(___ksymtab_gpl+uart_register_driver) \
*(___ksymtab_gpl+uart_remove_one_port) \
*(___ksymtab_gpl+uart_resume_port) \
*(___ksymtab_gpl+uart_set_options) \
*(___ksymtab_gpl+uart_suspend_port) \
*(___ksymtab_gpl+uart_unregister_driver) \
*(___ksymtab_gpl+__ucmpdi2) \
*(___ksymtab_gpl+__udivsi3) \
*(___ksymtab_gpl+udp4_hwcsum) \
*(___ksymtab_gpl+udp_rcv) \
*(___ksymtab_gpl+uevent_next_seqnum) \
*(___ksymtab_gpl+uhci_check_and_reset_hc) \
*(___ksymtab_gpl+__umodsi3) \
*(___ksymtab_gpl+unix_inq_len) \
*(___ksymtab_gpl+unix_outq_len) \
*(___ksymtab_gpl+unix_peer_get) \
*(___ksymtab_gpl+unix_socket_table) \
*(___ksymtab_gpl+unix_table_lock) \
*(___ksymtab_gpl+unlock_rename) \
*(___ksymtab_gpl+unmap_kernel_range) \
*(___ksymtab_gpl+unmap_kernel_range_noflush) \
*(___ksymtab_gpl+unmap_mapping_range) \
*(___ksymtab_gpl+unregister_8022_client) \
*(___ksymtab_gpl+unregister_binfmt) \
*(___ksymtab_gpl+unregister_console) \
*(___ksymtab_gpl+__unregister_cpu_notifier) \
*(___ksymtab_gpl+unregister_cpu_notifier) \
*(___ksymtab_gpl+unregister_die_notifier) \
*(___ksymtab_gpl+unregister_inet6addr_notifier) \
*(___ksymtab_gpl+unregister_module_notifier) \
*(___ksymtab_gpl+unregister_mtd_chip_driver) \
*(___ksymtab_gpl+unregister_mtd_user) \
*(___ksymtab_gpl+unregister_netevent_notifier) \
*(___ksymtab_gpl+unregister_oom_notifier) \
*(___ksymtab_gpl+unregister_restart_handler) \
*(___ksymtab_gpl+unregister_snap_client) \
*(___ksymtab_gpl+unregister_syscore_ops) \
*(___ksymtab_gpl+unregister_sysrq_key) \
*(___ksymtab_gpl+unregister_tcf_proto_ops) \
*(___ksymtab_gpl+unshare_fs_struct) \
*(___ksymtab_gpl+unuse_mm) \
*(___ksymtab_gpl+usb_enable_intel_xhci_ports) \
*(___ksymtab_gpl+use_mm) \
*(___ksymtab_gpl+user_describe) \
*(___ksymtab_gpl+user_free_preparse) \
*(___ksymtab_gpl+usermodehelper_read_lock_wait) \
*(___ksymtab_gpl+usermodehelper_read_trylock) \
*(___ksymtab_gpl+usermodehelper_read_unlock) \
*(___ksymtab_gpl+user_path_at_empty) \
*(___ksymtab_gpl+user_path_create) \
*(___ksymtab_gpl+user_preparse) \
*(___ksymtab_gpl+uuid_be_gen) \
*(___ksymtab_gpl+uuid_le_gen) \
*(___ksymtab_gpl+v7_coherent_kern_range) \
*(___ksymtab_gpl+v7_flush_kern_cache_all) \
*(___ksymtab_gpl+v7_flush_kern_dcache_area) \
*(___ksymtab_gpl+v7_flush_user_cache_all) \
*(___ksymtab_gpl+v7_flush_user_cache_range) \
*(___ksymtab_gpl+verify_spi_info) \
*(___ksymtab_gpl+vfs_cancel_lock) \
*(___ksymtab_gpl+vfs_create) \
*(___ksymtab_gpl+vfs_fallocate) \
*(___ksymtab_gpl+vfs_fstat) \
*(___ksymtab_gpl+vfs_fstatat) \
*(___ksymtab_gpl+vfs_fsync) \
*(___ksymtab_gpl+vfs_getattr) \
*(___ksymtab_gpl+vfs_getattr_nosec) \
*(___ksymtab_gpl+vfs_getxattr) \
*(___ksymtab_gpl+vfs_iter_read) \
*(___ksymtab_gpl+vfs_iter_write) \
*(___ksymtab_gpl+vfs_kern_mount) \
*(___ksymtab_gpl+vfs_link) \
*(___ksymtab_gpl+vfs_listxattr) \
*(___ksymtab_gpl+vfs_llseek) \
*(___ksymtab_gpl+vfs_lock_file) \
*(___ksymtab_gpl+vfs_lstat) \
*(___ksymtab_gpl+vfs_mkdir) \
*(___ksymtab_gpl+vfs_mknod) \
*(___ksymtab_gpl+__vfs_read) \
*(___ksymtab_gpl+vfs_read) \
*(___ksymtab_gpl+vfs_readv) \
*(___ksymtab_gpl+vfs_removexattr) \
*(___ksymtab_gpl+vfs_rename) \
*(___ksymtab_gpl+vfs_rmdir) \
*(___ksymtab_gpl+vfs_setlease) \
*(___ksymtab_gpl+vfs_setxattr) \
*(___ksymtab_gpl+vfs_stat) \
*(___ksymtab_gpl+vfs_statfs) \
*(___ksymtab_gpl+vfs_symlink) \
*(___ksymtab_gpl+vfs_test_lock) \
*(___ksymtab_gpl+vfs_truncate) \
*(___ksymtab_gpl+vfs_unlink) \
*(___ksymtab_gpl+vfs_whiteout) \
*(___ksymtab_gpl+__vfs_write) \
*(___ksymtab_gpl+vfs_write) \
*(___ksymtab_gpl+vfs_writev) \
*(___ksymtab_gpl+vga_base) \
*(___ksymtab_gpl+vlan_dev_real_dev) \
*(___ksymtab_gpl+__vlan_hwaccel_rx) \
*(___ksymtab_gpl+vlan_ioctl_set) \
*(___ksymtab_gpl+vmap) \
*(___ksymtab_gpl+vm_brk) \
*(___ksymtab_gpl+vm_get_page_prot) \
*(___ksymtab_gpl+vm_insert_mixed) \
*(___ksymtab_gpl+vm_insert_page) \
*(___ksymtab_gpl+vm_insert_pfn) \
*(___ksymtab_gpl+vm_insert_pfn_prot) \
*(___ksymtab_gpl+vm_iomap_memory) \
*(___ksymtab_gpl+vm_map_ram) \
*(___ksymtab_gpl+vm_memory_committed) \
*(___ksymtab_gpl+vm_mmap) \
*(___ksymtab_gpl+vm_munmap) \
*(___ksymtab_gpl+vm_stat) \
*(___ksymtab_gpl+vm_unmap_aliases) \
*(___ksymtab_gpl+vm_unmap_ram) \
*(___ksymtab_gpl+vunmap) \
*(___ksymtab_gpl+wait_for_device_probe) \
*(___ksymtab_gpl+wait_for_key_construction) \
*(___ksymtab_gpl+wait_iff_congested) \
*(___ksymtab_gpl+__wait_on_bit) \
*(___ksymtab_gpl+__wait_on_bit_lock) \
*(___ksymtab_gpl+__wait_rcu_gp) \
*(___ksymtab_gpl+wait_woken) \
*(___ksymtab_gpl+wakeme_after_rcu) \
*(___ksymtab_gpl+walk_stackframe) \
*(___ksymtab_gpl+watchdog_init_timeout) \
*(___ksymtab_gpl+wireless_nlevent_flush) \
*(___ksymtab_gpl+woken_wake_function) \
*(___ksymtab_gpl+work_busy) \
*(___ksymtab_gpl+work_on_cpu) \
*(___ksymtab_gpl+would_dump) \
*(___ksymtab_gpl+writeback_inodes_sb) \
*(___ksymtab_gpl+writeback_inodes_sb_nr) \
*(___ksymtab_gpl+write_one_page) \
*(___ksymtab_gpl+xattr_full_name) \
*(___ksymtab_gpl+xattr_getsecurity) \
*(___ksymtab_gpl+xfrm4_prepare_output) \
*(___ksymtab_gpl+xfrm4_protocol_deregister) \
*(___ksymtab_gpl+xfrm4_protocol_init) \
*(___ksymtab_gpl+xfrm4_protocol_register) \
*(___ksymtab_gpl+xfrm4_rcv) \
*(___ksymtab_gpl+xfrm4_rcv_cb) \
*(___ksymtab_gpl+xfrm4_rcv_encap) \
*(___ksymtab_gpl+xfrm_alloc_spi) \
*(___ksymtab_gpl+xfrm_find_acq) \
*(___ksymtab_gpl+xfrm_find_acq_byseq) \
*(___ksymtab_gpl+xfrm_garbage_collect) \
*(___ksymtab_gpl+xfrm_get_acqseq) \
*(___ksymtab_gpl+xfrm_init_replay) \
*(___ksymtab_gpl+xfrm_policy_alloc) \
*(___ksymtab_gpl+xfrm_policy_byid) \
*(___ksymtab_gpl+xfrm_policy_bysel_ctx) \
*(___ksymtab_gpl+xfrm_policy_delete) \
*(___ksymtab_gpl+xfrm_policy_flush) \
*(___ksymtab_gpl+xfrm_policy_hash_rebuild) \
*(___ksymtab_gpl+xfrm_policy_insert) \
*(___ksymtab_gpl+xfrm_policy_walk) \
*(___ksymtab_gpl+xfrm_policy_walk_done) \
*(___ksymtab_gpl+xfrm_policy_walk_init) \
*(___ksymtab_gpl+xfrm_register_km) \
*(___ksymtab_gpl+xfrm_sad_getinfo) \
*(___ksymtab_gpl+xfrm_spd_getinfo) \
*(___ksymtab_gpl+xfrm_state_add) \
*(___ksymtab_gpl+__xfrm_state_delete) \
*(___ksymtab_gpl+xfrm_state_delete) \
*(___ksymtab_gpl+xfrm_state_flush) \
*(___ksymtab_gpl+xfrm_stateonly_find) \
*(___ksymtab_gpl+xfrm_state_walk) \
*(___ksymtab_gpl+xfrm_state_walk_done) \
*(___ksymtab_gpl+xfrm_state_walk_init) \
*(___ksymtab_gpl+xfrm_unregister_km) \
*(___ksymtab_gpl+xt_check_proc_name) \
*(___ksymtab_gpl+xt_find_match) \
*(___ksymtab_gpl+xt_find_target) \
*(___ksymtab_gpl+xtnu_register_target) \
*(___ksymtab_gpl+xtnu_register_targets) \
*(___ksymtab_gpl+xtnu_request_find_match) \
*(___ksymtab_gpl+xtnu_unregister_target) \
*(___ksymtab_gpl+xtnu_unregister_targets) \
*(___ksymtab_gpl+xz_dec_end) \
*(___ksymtab_gpl+xz_dec_init) \
*(___ksymtab_gpl+xz_dec_reset) \
*(___ksymtab_gpl+xz_dec_run) \
*(___ksymtab_gpl+zap_vma_ptes) \
*(___ksymtab_gpl+zero_fill_bio) \
*(___ksymtab_gpl+zero_pfn) \

